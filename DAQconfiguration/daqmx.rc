RCversion: 3
include: "daqmx.rch"
typeFlags: 1

///// Task Event Class Definition /////
class: "Task"
genericType: NIDAQ
className: "DAQmx Event"
super: "DAQ Object"
flags: 1

event: "EveryNSamplesAcqIntoBuffer" "Every N Samples Acquired into Buffer" 3124 1
 sampleInterval        numeric uInt32 value configdata
  "Occurs when the specified number of samples are transferred from the device to the PC buffer. This event works only with devices that support buffered tasks. You cannot use software events with simulated devices."  " " " "

event: "EveryNSamplesTransferredFromBuffer" "Every N Samples Transferred from Buffer" 3125 1
 sampleInterval        numeric uInt32 value configdata
  "Occurs when the specified number of samples are transferred from the PC buffer to the device. This event works only with devices that support buffered tasks. You cannot use software events with simulated devices."  " " " "

event: "Signal" "Signal" 311F 1
 signalType        numeric int32 enum {"Sample Complete Event" = 12530, "Counter Output Event" = 12494, "Change Detection Event" = 12511, "Sample Clock" = 12487} value config   
  "Occurs based on the specified hardware signal. Supported signals include counter output event, change detection event, sample complete event, and sample clock. You cannot use software events with simulated devices."  " " " "

event: "Done" "Done" 3120 1
 status        error reference data
  "Occurs when the task completes execution or when an error occurs. You cannot use software events with simulated devices."  " " " " 


///// DAQmx Buffer Class Definition /////
class: "DAQmx Buffer"
genericType: NIDAQ
termName: "task"
termNameOut: "task out"
hasActiveProp: yes
className: "DAQmx Buffer"
super: "DAQ Object"
flags: 2

attribute: "Input.BufSize"
	"Input:Buffer Size"
	uL	readwrite		25	186C
	"Specifies the number of samples the input buffer can hold for each channel in the task. Zero indicates to allocate no buffer. Use a buffer size of 0 to perform a hardware-timed operation without using a buffer. Setting this property overrides the automatic input buffer allocation that NI-DAQmx performs."	"attr186c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get186C	set186C	reset186C

attribute: "Input.OnbrdBufSize"
	"Input:Onboard Buffer Size"
	uL	readonly		25	230A
	"Indicates in samples per channel the size of the onboard input buffer of the device."	"attr230a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get230A	set230A	@NoReset

attribute: "Output.BufSize"
	"Output:Buffer Size"
	uL	readwrite		25	186D
	"Specifies the number of samples the output buffer can hold for each channel in the task. Zero indicates to allocate no buffer. Use a buffer size of 0 to perform a hardware-timed operation without using a buffer. Setting this property overrides the automatic output buffer allocation that NI-DAQmx performs."	"attr186d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get186D	set186D	reset186D

attribute: "Output.OnbrdBufSize"
	"Output:Onboard Buffer Size"
	uL	readwrite		25	230B
	"Specifies in samples per channel the size of the onboard output buffer of the device."	"attr230b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get230B	set230B	reset230B


///// DAQmx Calibration Info Class Definition /////
class: "DAQmx Calibration Info"
genericType: NIDAQ
termName: "reference"
termNameOut: "reference"
hasActiveProp: yes
className: "DAQmx Calibration Info"
super: "DAQ Object"
flags: 10

attribute: "ActiveDev"
	"Active Device"
	DAQDevice	writeonly		27	185F
	"Specifies the device from which to retrieve calibration properties."	"attr185f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get185F	set185F	@NoReset

attribute: "SelfCal.Supported"
	"Self Calibration:Is Supported"
	bool	readonly		25	1860
	"Indicates whether the device supports self-calibration."	"attr1860.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1860	set1860	@NoReset

attribute: "SelfCal.LastDate/Time"
	"Self Calibration:Last Self Calibration Date/Time"
	timestamp	readonly		25	1862
	"Indicates the last date and time that the device underwent a self-calibration."	"attr1862.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1862	set1862	@NoReset

attribute: "SelfCal.LastTemp"
	"Self Calibration:Last Self Calibration Temperature"
	fD	readonly		25	1864
	"Indicates in degrees Celsius the temperature of the device at the time of the last self-calibration. Compare this temperature to the current onboard temperature to determine if you should perform another calibration."	"attr1864.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1864	set1864	@NoReset

attribute: "ExtCal.RecommendedInterval"
	"External Calibration:Recommended Interval"
	uL	readonly		25	1868
	"Indicates in months the National Instruments recommended interval between each external calibration of the device."	"attr1868.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1868	set1868	@NoReset

attribute: "ExtCal.LastDate/Time"
	"External Calibration:Last External Calibration Date/Time"
	timestamp	readonly		25	1865
	"Indicates the last date and time that the device underwent an external calibration."	"attr1865.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1865	set1865	@NoReset

attribute: "ExtCal.LastTemp"
	"External Calibration:Last External Calibration Temperature"
	fD	readonly		25	1867
	"Indicates in degrees Celsius the temperature of the device at the time of the last external calibration. Compare this temperature to the current onboard temperature to determine if you should perform another calibration."	"attr1867.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1867	set1867	@NoReset

attribute: "Cal.UserDefinedInfo"
	"User-Defined Information:Information"
	string	readwrite		25	1861
	"Specifies a string that contains arbitrary, user-defined information. This number of characters in this string can be no more than Cal.UserDefinedInfo.MaxSize."	"attr1861.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1861	set1861	@NoReset

attribute: "Cal.UserDefinedInfo.MaxSize"
	"User-Defined Information:Max Size"
	uL	readonly		25	191C
	"Indicates the maximum length in characters of Cal.UserDefinedInfo."	"attr191c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get191C	set191C	@NoReset

attribute: "DevTemp"
	"More:Device Temperature"
	fD	readonly		25	223B
	"Indicates in degrees Celsius the current temperature of the device."	"attr223b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get223B	set223B	@NoReset

attribute: "AccConnectionCount"
	"More:Accessory Connection Count"
	uL	readwrite		25	2FEB
	"Specifies the number of times a particular connection that results in tangible wear and tear of onboard components has been made on the accessory. This connection count is useful for tracking accessory life and usage."	"attr2feb.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2FEB	set2FEB	@NoReset

attribute: "RecommendedAccConnectionCountLimit"
	"More:Recommended Accessory Connection Count Limit"
	uL	readonly		25	2FEC
	"Indicates the recommended connection count limit for an accessory. If the accessory connection count exceeds this limit, the accessory could require maintenance."	"attr2fec.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2FEC	set2FEC	@NoReset


///// DAQmx Channel Class Definition /////
class: "DAQmx Channel"
genericType: NIDAQ
termName: "task"
termNameOut: "task out"
hasActiveProp: yes
className: "DAQmx Channel"
super: "DAQ Object"
flags: 2

attribute: "ActiveChans"
	"Active Channels (if subset)"
	string
	{create "DAQmx Channel" DAQChannel, "DAQmx Physical Channel" DAQPhysChan, "string (for local channel)" string}
	writeonly		27	11
	"Specifies a virtual channel or list of virtual channels to modify. The virtual channels are within the context of a specific task. NI-DAQmx configures all channels in the task if you do not set this property."	"attr11.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get11	set11	@NoReset

attribute: "AI.Max"
	"Analog Input:Maximum Value"
	fD	readwrite		25	17DD
	"Specifies the maximum value you expect to measure. This value is in the units you specify with a units property. When you query this property, it returns the coerced maximum value that the device can measure with the current settings."	"attr17dd.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Min"
	"Analog Input:Minimum Value"
	fD	readwrite		25	17DE
	"Specifies the minimum value you expect to measure. This value is in the units you specify with a units property.  When you query this property, it returns the coerced minimum value that the device can measure with the current settings."	"attr17de.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.CustomScaleName"
	"Analog Input:Custom Scale Name"
	DAQScale	readwrite		25	17E0
	"Specifies the name of a custom scale for the channel."	"attr17e0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelWstringScaleAP	setChannelWstringScaleAP	resetChannelWstringScaleAP

attribute: "AI.MeasType"
	"Analog Input:Measurement Type"
	iL enum { "Voltage"=10322, "Voltage RMS"=10350, "Current"=10134, "Current RMS"=10351, "More:Voltage:Custom with Excitation"=10323, "More:Bridge (V/V)"=15908, "Frequency"=10181, "Resistance"=10278, "Temperature:Thermocouple"=10303, "Temperature:Thermistor"=10302, "Temperature:RTD"=10301, "Temperature:Built-in Sensor"=10311, "Strain Gage"=10300, "Rosette Strain Gage"=15980, "Position:LVDT"=10352, "Position:RVDT"=10353, "Position:Eddy Current Proximity Probe"=14835, "Accelerometer"=10356, "Acceleration:Charge"=16104, "Acceleration:4 Wire DC Voltage"=16106, "Velocity:IEPE Sensor"=15966, "Force:Bridge"=15899, "Force:IEPE Sensor"=15895, "Pressure:Bridge"=15902, "Sound Pressure:Microphone"=10354, "Torque:Bridge"=15905, "TEDS Sensor"=12531, "Charge"=16105 }	readonly		25	695
	"Indicates the measurement to take with the analog input channel and in some cases, such as for temperature measurements, the sensor to use."	"attr695.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	@NoReset

attribute: "AI.Voltage.Units"
	"Analog Input:Voltage:Units"
	iL enum { "Volts"=10348, "From Custom Scale"=10065, "From TEDS"=12516 }	readwrite		25	1094
	"Specifies the units to use to return voltage measurements from the channel."	"attr1094.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Voltage.dBRef"
	"Analog Input:Voltage:dB Reference"
	fD	readwrite		25	29B0
	"Specifies the decibel reference level in the units of the channel. When you read samples as a waveform, the decibel reference level is included in the waveform attributes."	"attr29b0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Voltage.ACRMS.Units"
	"Analog Input:Voltage:AC RMS Voltage:Units"
	iL enum { "Volts"=10348, "From Custom Scale"=10065, "From TEDS"=12516 }	readwrite		25	17E2
	"Specifies the units to use to return voltage RMS measurements from the channel."	"attr17e2.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Temp.Units"
	"Analog Input:Temperature:Units"
	iL enum { "Deg C"=10143, "Deg F"=10144, "Kelvins"=10325, "Deg R"=10145, "From Custom Scale"=10065 }	readwrite		25	1033
	"Specifies the units to use to return temperature measurements from the channel."	"attr1033.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Thrmcpl.Type"
	"Analog Input:Temperature:Thermocouple:Type"
	iL enum { "J"=10072, "K"=10073, "N"=10077, "R"=10082, "S"=10085, "T"=10086, "B"=10047, "E"=10055 }	readwrite		25	1050
	"Specifies the type of thermocouple connected to the channel. Thermocouple types differ in composition and measurement range."	"attr1050.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Thrmcpl.ScaleType"
	"Analog Input:Temperature:Thermocouple:Scale Type"
	iL enum { "Polynomial"=10449, "Table"=10450 }	readwrite		25	29D0
	"Specifies the method or equation form that the thermocouple scale uses."	"attr29d0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Thrmcpl.CJCSrc"
	"Analog Input:Temperature:Thermocouple:CJC Source"
	iL enum { "Built-In"=10200, "Constant Value"=10116, "Channel"=10113 }	readonly		25	1035
	"Indicates the source of cold-junction compensation."	"attr1035.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumObservableAP	setChannelI32EnumObservableAP	@NoReset

attribute: "AI.Thrmcpl.CJCVal"
	"Analog Input:Temperature:Thermocouple:CJC Value"
	fD	readwrite		25	1036
	"Specifies the temperature of the cold junction if AI.Thrmcpl.CJCSrc is Constant Value. Specify this value in the units of the measurement."	"attr1036.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Thrmcpl.CJCChan"
	"Analog Input:Temperature:Thermocouple:CJC Channel"
	DAQChannel	readonly		25	1034
	"Indicates the channel that acquires the temperature of the cold junction if AI.Thrmcpl.CJCSrc is Channel. If the channel is a temperature channel, NI-DAQmx acquires the temperature in the correct units. Other channel types, such as a resistance channel with a custom sensor, must use a custom scale to scale values to degrees Celsius."	"attr1034.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelWstringObservableChanAP	setChannelWstringObservableChanAP	@NoReset

attribute: "AI.RTD.Type"
	"Analog Input:Temperature:RTD:Type"
	iL enum { "Pt3750"=12481, "Pt3851"=10071, "Pt3911"=12482, "Pt3916"=10069, "Pt3920"=10053, "Pt3928"=12483, "Custom"=10137 }	readwrite		25	1032
	"Specifies the type of RTD connected to the channel."	"attr1032.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.RTD.R0"
	"Analog Input:Temperature:RTD:R0"
	fD	readwrite		25	1030
	"Specifies in ohms the sensor resistance at 0 deg C. The Callendar-Van Dusen equation requires this value. Refer to the sensor documentation to determine this value."	"attr1030.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.RTD.A"
	"Analog Input:Temperature:RTD:Custom:A"
	fD	readwrite		25	1010
	"Specifies the 'A' constant of the Callendar-Van Dusen equation. NI-DAQmx requires this value when you use a custom RTD."	"attr1010.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.RTD.B"
	"Analog Input:Temperature:RTD:Custom:B"
	fD	readwrite		25	1011
	"Specifies the 'B' constant of the Callendar-Van Dusen equation. NI-DAQmx requires this value when you use a custom RTD."	"attr1011.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.RTD.C"
	"Analog Input:Temperature:RTD:Custom:C"
	fD	readwrite		25	1013
	"Specifies the 'C' constant of the Callendar-Van Dusen equation. NI-DAQmx requires this value when you use a custom RTD."	"attr1013.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Thrmstr.A"
	"Analog Input:Temperature:Thermistor:A"
	fD	readwrite		25	18C9
	"Specifies the 'A' constant of the Steinhart-Hart thermistor equation."	"attr18c9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Thrmstr.B"
	"Analog Input:Temperature:Thermistor:B"
	fD	readwrite		25	18CB
	"Specifies the 'B' constant of the Steinhart-Hart thermistor equation."	"attr18cb.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Thrmstr.C"
	"Analog Input:Temperature:Thermistor:C"
	fD	readwrite		25	18CA
	"Specifies the 'C' constant of the Steinhart-Hart thermistor equation."	"attr18ca.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Thrmstr.R1"
	"Analog Input:Temperature:Thermistor:R1"
	fD	readwrite		25	1061
	"Specifies in ohms the value of the reference resistor for the thermistor if you use voltage excitation. NI-DAQmx ignores this value for current excitation."	"attr1061.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.ForceReadFromChan"
	"Analog Input:Temperature:Advanced:Force Read From Channel"
	bool	readwrite		25	18F8
	"Specifies whether to read from the channel if it is a cold-junction compensation channel. By default, DAQmx Read does not return data from cold-junction compensation channels.  Setting this property to TRUE forces read operations to return the cold-junction compensation channel data with the other channels in the task."	"attr18f8.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AI.Current.Units"
	"Analog Input:Current:Units"
	iL enum { "Amps"=10342, "From Custom Scale"=10065, "From TEDS"=12516 }	readwrite		25	701
	"Specifies the units to use to return current measurements from the channel."	"attr701.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Current.ACRMS.Units"
	"Analog Input:Current:AC RMS Current:Units"
	iL enum { "Amps"=10342, "From Custom Scale"=10065, "From TEDS"=12516 }	readwrite		25	17E3
	"Specifies the units to use to return current RMS measurements from the channel."	"attr17e3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Strain.Units"
	"Analog Input:Strain:Units"
	iL enum { "Strain"=10299, "From Custom Scale"=10065 }	readwrite		25	981
	"Specifies the units to use to return strain measurements from the channel."	"attr981.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Strain.ForceReadFromChan"
	"Analog Input:Strain:Force Read From Channel"
	bool	readwrite		25	2FFA
	"Specifies whether the data is returned by DAQmx Read when set on a raw strain channel that is part of a rosette configuration."	"attr2ffa.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AI.StrainGage.GageFactor"
	"Analog Input:Strain:Strain Gage:Gage Factor"
	fD	readwrite		25	994
	"Specifies the sensitivity of the strain gage.  Gage factor relates the change in electrical resistance to the change in strain. Refer to the sensor documentation for this value."	"attr994.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.StrainGage.PoissonRatio"
	"Analog Input:Strain:Strain Gage:Poisson Ratio"
	fD	readwrite		25	998
	"Specifies the ratio of lateral strain to axial strain in the material you are measuring."	"attr998.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.StrainGage.Cfg"
	"Analog Input:Strain:Strain Gage:Configuration"
	iL enum { "Full Bridge I"=10183, "Full Bridge II"=10184, "Full Bridge III"=10185, "Half Bridge I"=10188, "Half Bridge II"=10189, "Quarter Bridge I"=10271, "Quarter Bridge II"=10272 }	readwrite		25	982
	"Specifies the bridge configuration of the strain gages."	"attr982.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.RosetteStrainGage.RosetteType"
	"Analog Input:Rosette Strain Gage:Rosette Type"
	iL enum { "Rectangular Rosette"=15968, "Delta Rosette"=15969, "Tee Rosette"=15970 }	readonly		25	2FFE
	"Indicates the type of rosette gage."	"attr2ffe.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	@NoReset

attribute: "AI.RosetteStrainGage.GageOrientation"
	"Analog Input:Rosette Strain Gage:Gage Orientation"
	fD	readwrite		25	2FFC
	"Specifies gage orientation in degrees with respect to the X axis."	"attr2ffc.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.RosetteStrainGage.StrainChans"
	"Analog Input:Rosette Strain Gage:Strain Channels"
	string1D	readonly		25	2FFB
	"Indicates the raw strain channels that comprise the strain rosette."	"attr2ffb.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelWstringVtrAP	setChannelWstringVtrAP	@NoReset

attribute: "AI.RosetteStrainGage.RosetteMeasType"
	"Analog Input:Rosette Strain Gage:Rosette Measurement Type"
	iL enum { "Principal Strain 1"=15971, "Principal Strain 2"=15972, "Principal Strain Angle"=15973, "Cartesian Strain X"=15974, "Cartesian Strain Y"=15975, "Cartesian Shear Strain XY"=15976, "Maximum Shear Strain"=15977, "Maximum Shear Strain Angle"=15978 }	readwrite		25	2FFD
	"Specifies the type of rosette measurement."	"attr2ffd.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Resistance.Units"
	"Analog Input:Resistance:Units"
	iL enum { "Ohms"=10384, "From Custom Scale"=10065, "From TEDS"=12516 }	readwrite		25	955
	"Specifies the units to use to return resistance measurements."	"attr955.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Freq.Units"
	"Analog Input:Frequency:Units"
	iL enum { "Hz"=10373, "From Custom Scale"=10065 }	readwrite		25	806
	"Specifies the units to use to return frequency measurements from the channel."	"attr806.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Freq.ThreshVoltage"
	"Analog Input:Frequency:Voltage:Threshold Level"
	fD	readwrite		25	815
	"Specifies the voltage level at which to recognize waveform repetitions. You should select a voltage level that occurs only once within the entire period of a waveform. You also can select a voltage that occurs only once while the voltage rises or falls."	"attr815.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Freq.Hyst"
	"Analog Input:Frequency:Voltage:Hysteresis"
	fD	readwrite		25	814
	"Specifies in volts a window below AI.Freq.ThreshVoltage. The input voltage must pass below AI.Freq.ThreshVoltage minus this value before NI-DAQmx recognizes a waveform repetition at AI.Freq.ThreshVoltage. Hysteresis can improve the measurement accuracy when the signal contains noise or jitter."	"attr814.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.LVDT.Units"
	"Analog Input:Position:LVDT:Units"
	iL enum { "Meters"=10219, "Inches"=10379, "From Custom Scale"=10065 }	readwrite		25	910
	"Specifies the units to use to return linear position measurements from the channel."	"attr910.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.LVDT.Sensitivity"
	"Analog Input:Position:LVDT:Sensitivity"
	fD	readwrite		25	939
	"Specifies the sensitivity of the LVDT. This value is in the units you specify with AI.LVDT.SensitivityUnits. Refer to the sensor documentation to determine this value."	"attr939.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.LVDT.SensitivityUnits"
	"Analog Input:Position:LVDT:Sensitivity Units"
	iL enum { "mVolts/Volt/mMeter"=12506, "mVolts/Volt/0.001 Inch"=12505 }	readwrite		25	219A
	"Specifies the units of AI.LVDT.Sensitivity."	"attr219a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.RVDT.Units"
	"Analog Input:Position:RVDT:Units"
	iL enum { "Degrees"=10146, "Radians"=10273, "From Custom Scale"=10065 }	readwrite		25	877
	"Specifies the units to use to return angular position measurements from the channel."	"attr877.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.RVDT.Sensitivity"
	"Analog Input:Position:RVDT:Sensitivity"
	fD	readwrite		25	903
	"Specifies the sensitivity of the RVDT. This value is in the units you specify with AI.RVDT.SensitivityUnits. Refer to the sensor documentation to determine this value."	"attr903.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.RVDT.SensitivityUnits"
	"Analog Input:Position:RVDT:Sensitivity Units"
	iL enum { "mVolts/Volt/Degree"=12507, "mVolts/Volt/Radian"=12508 }	readwrite		25	219B
	"Specifies the units of AI.RVDT.Sensitivity."	"attr219b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.EddyCurrentProx.Units"
	"Analog Input:Position:Eddy Current Proximity Probe:Units"
	iL enum { "Meters"=10219, "Inches"=10379, "From Custom Scale"=10065 }	readwrite		25	2AC0
	"Specifies the units to use to return proximity measurements from the channel."	"attr2ac0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.EddyCurrentProx.Sensitivity"
	"Analog Input:Position:Eddy Current Proximity Probe:Sensitivity"
	fD	readwrite		25	2ABE
	"Specifies the sensitivity of the eddy current proximity probe . This value is in the units you specify with AI.EddyCurrentProx.SensitivityUnits. Refer to the sensor documentation to determine this value."	"attr2abe.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.EddyCurrentProx.SensitivityUnits"
	"Analog Input:Position:Eddy Current Proximity Probe:Sensitivity Units"
	iL enum { "mVolts/mil"=14836, "Volts/mil"=14837, "mVolts/mMeter"=14838, "Volts/mMeter"=14839, "mVolts/micron"=14840 }	readwrite		25	2ABF
	"Specifies the units of AI.EddyCurrentProx.Sensitivity."	"attr2abf.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.SoundPressure.MaxSoundPressureLvl"
	"Analog Input:Sound Pressure:Maximum Sound Pressure Level"
	fD	readwrite		25	223A
	"Specifies the maximum instantaneous sound pressure level you expect to measure. This value is in decibels, referenced to 20 micropascals. NI-DAQmx uses the maximum sound pressure level to calculate values in pascals for AI.Max and AI.Min for the channel."	"attr223a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.SoundPressure.Units"
	"Analog Input:Sound Pressure:Units"
	iL enum { "Pascals"=10081, "From Custom Scale"=10065 }	readwrite		25	1528
	"Specifies the units to use to return sound pressure measurements from the channel."	"attr1528.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.SoundPressure.dBRef"
	"Analog Input:Sound Pressure:dB Reference"
	fD	readwrite		25	29B1
	"Specifies the decibel reference level in the units of the channel. When you read samples as a waveform, the decibel reference level is included in the waveform attributes. NI-DAQmx also uses the decibel reference level when converting AI.SoundPressure.MaxSoundPressureLvl to a voltage level."	"attr29b1.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Microphone.Sensitivity"
	"Analog Input:Sound Pressure:Microphone:Sensitivity"
	fD	readwrite		25	1536
	"Specifies the sensitivity of the microphone. This value is in mV/Pa. Refer to the sensor documentation to determine this value."	"attr1536.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Accel.Units"
	"Analog Input:Acceleration:Units"
	iL enum { "g"=10186, "m/s^2"=12470, "in/s^2"=12471, "From Custom Scale"=10065 }	readwrite		25	673
	"Specifies the units to use to return acceleration measurements from the channel."	"attr673.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Accel.dBRef"
	"Analog Input:Acceleration:dB Reference"
	fD	readwrite		25	29B2
	"Specifies the decibel reference level in the units of the channel. When you read samples as a waveform, the decibel reference level is included in the waveform attributes."	"attr29b2.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Accel.4WireDCVoltage.Sensitivity"
	"Analog Input:Acceleration:4 Wire DC Voltage:Sensitivity"
	fD	readwrite		25	3115
	"Specifies the sensitivity of the 4 wire DC voltage acceleration sensor connected to the channel. This value is the units you specify with AI.Accel.4WireDCVoltage.SensitivityUnits. Refer to the sensor documentation to determine this value."	"attr3115.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Accel.4WireDCVoltage.SensitivityUnits"
	"Analog Input:Acceleration:4 Wire DC Voltage:Sensitivity Units"
	iL enum { "mVolts/g"=12509, "Volts/g"=12510 }	readwrite		25	3116
	"Specifies the units of AI.Accel.4WireDCVoltage.Sensitivity."	"attr3116.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Accel.Sensitivity"
	"Analog Input:Acceleration:Accelerometer:Sensitivity"
	fD	readwrite		25	692
	"Specifies the sensitivity of the accelerometer. This value is in the units you specify with AI.Accel.SensitivityUnits. Refer to the sensor documentation to determine this value."	"attr692.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Accel.SensitivityUnits"
	"Analog Input:Acceleration:Accelerometer:Sensitivity Units"
	iL enum { "mVolts/g"=12509, "Volts/g"=12510 }	readwrite		25	219C
	"Specifies the units of AI.Accel.Sensitivity."	"attr219c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Accel.Charge.Sensitivity"
	"Analog Input:Acceleration:Charge:Sensitivity"
	fD	readwrite		25	3113
	"Specifies the sensitivity of the charge acceleration sensor connected to the channel. This value is the units you specify with AI.Accel.Charge.SensitivityUnits. Refer to the sensor documentation to determine this value."	"attr3113.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Accel.Charge.SensitivityUnits"
	"Analog Input:Acceleration:Charge:Sensitivity Units"
	iL enum { "PicoCoulombs per g"=16099, "PicoCoulombs per m/s^2"=16100, "PicoCoulombs per in/s^2"=16101 }	readwrite		25	3114
	"Specifies the units of AI.Accel.Charge.Sensitivity."	"attr3114.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Velocity.Units"
	"Analog Input:Velocity:Units"
	iL enum { "m/s"=15959, "in/s"=15960, "From Custom Scale"=10065 }	readwrite		25	2FF4
	"Specifies in which unit to return velocity measurements from the channel."	"attr2ff4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Velocity.IEPESensor.dBRef"
	"Analog Input:Velocity:IEPE Sensor:dB Reference"
	fD	readwrite		25	2FF5
	"Specifies the decibel reference level in the units of the channel. When you read samples as a waveform, the decibel reference level is included in the waveform attributes."	"attr2ff5.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Velocity.IEPESensor.Sensitivity"
	"Analog Input:Velocity:IEPE Sensor:Sensitivity"
	fD	readwrite		25	2FF6
	"Specifies the sensitivity of the IEPE velocity sensor connected to the channel. Specify this value in the unit indicated by AI.Velocity.IEPESensor.SensitivityUnits."	"attr2ff6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Velocity.IEPESensor.SensitivityUnits"
	"Analog Input:Velocity:IEPE Sensor:Sensitivity Units"
	iL enum { "mVolts/mm/s"=15963, "mVolts/in/s"=15964 }	readwrite		25	2FF7
	"Specifies the units for AI.Velocity.IEPESensor.Sensitivity."	"attr2ff7.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Force.Units"
	"Analog Input:Force:Units"
	iL enum { "Newtons"=15875, "Pounds"=15876, "kgf"=15877, "From Custom Scale"=10065 }	readwrite		25	2F75
	"Specifies in which unit to return force or load measurements from the channel."	"attr2f75.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Force.IEPESensor.Sensitivity"
	"Analog Input:Force:IEPE Sensor:Sensitivity"
	fD	readwrite		25	2F81
	"Specifies the sensitivity of the IEPE force sensor connected to the channel. Specify this value in the unit indicated by AI.Force.IEPESensor.SensitivityUnits."	"attr2f81.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Force.IEPESensor.SensitivityUnits"
	"Analog Input:Force:IEPE Sensor:Sensitivity Units"
	iL enum { "mVolts/N"=15891, "mVolts/lb"=15892 }	readwrite		25	2F82
	"Specifies the units for AI.Force.IEPESensor.Sensitivity."	"attr2f82.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Pressure.Units"
	"Analog Input:Pressure:Units"
	iL enum { "Pascals"=10081, "psi"=15879, "bar"=15880, "From Custom Scale"=10065 }	readwrite		25	2F76
	"Specifies  in which unit to return pressure measurements from the channel."	"attr2f76.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Torque.Units"
	"Analog Input:Torque:Units"
	iL enum { "Nm"=15881, "oz-in"=15882, "lb-in"=15883, "lb-ft"=15884, "From Custom Scale"=10065 }	readwrite		25	2F77
	"Specifies in which unit to return torque measurements from the channel."	"attr2f77.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Bridge.Units"
	"Analog Input:Bridge:Units"
	iL enum { "Volts/Volt"=15896, "mVolts/Volt"=15897, "From Custom Scale"=10065, "From TEDS"=12516 }	readwrite		25	2F92
	"Specifies in which unit to return voltage ratios from the channel."	"attr2f92.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Bridge.ElectricalUnits"
	"Analog Input:Bridge:Scaling Parameters:Electrical Units"
	iL enum { "Volts/Volt"=15896, "mVolts/Volt"=15897 }	readwrite		25	2F87
	"Specifies from which electrical unit to scale data. Select  the same unit that the sensor data sheet or calibration certificate uses for electrical values."	"attr2f87.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Bridge.PhysicalUnits"
	"Analog Input:Bridge:Scaling Parameters:Physical Units"
	iL enum { "Newtons"=15875, "Pounds"=15876, "kgf"=15877, "Pascals"=10081, "psi"=15879, "bar"=15880, "Nm"=15881, "oz-in"=15882, "lb-in"=15883, "lb-ft"=15884 }	readwrite		25	2F88
	"Specifies to which physical unit to scale electrical data. Select the same unit that the sensor data sheet or calibration certificate uses for physical values."	"attr2f88.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Bridge.ScaleType"
	"Analog Input:Bridge:Scaling Parameters:Scale Type"
	iL enum { "None"=10230, "Two-Point Linear"=15898, "Table"=10450, "Polynomial"=10449 }	readwrite		25	2F89
	"Specifies the scaling type to use when scaling electrical values from the sensor to physical units."	"attr2f89.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Bridge.TwoPointLin.First.ElectricalVal"
	"Analog Input:Bridge:Scaling Parameters:Two-Point Linear:First:Electrical Value"
	fD	readwrite		25	2F8A
	"Specifies the first electrical value, corresponding to AI.Bridge.TwoPointLin.First.PhysicalVal. Specify this value in the unit indicated by AI.Bridge.ElectricalUnits."	"attr2f8a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Bridge.TwoPointLin.First.PhysicalVal"
	"Analog Input:Bridge:Scaling Parameters:Two-Point Linear:First:Physical Value"
	fD	readwrite		25	2F8B
	"Specifies the first physical value, corresponding to AI.Bridge.TwoPointLin.First.ElectricalVal. Specify this value in the unit indicated by AI.Bridge.PhysicalUnits."	"attr2f8b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Bridge.TwoPointLin.Second.ElectricalVal"
	"Analog Input:Bridge:Scaling Parameters:Two-Point Linear:Second:Electrical Value"
	fD	readwrite		25	2F8C
	"Specifies the second electrical value, corresponding to AI.Bridge.TwoPointLin.Second.PhysicalVal. Specify this value in the unit indicated by AI.Bridge.ElectricalUnits."	"attr2f8c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Bridge.TwoPointLin.Second.PhysicalVal"
	"Analog Input:Bridge:Scaling Parameters:Two-Point Linear:Second:Physical Value"
	fD	readwrite		25	2F8D
	"Specifies the second physical value, corresponding to AI.Bridge.TwoPointLin.Second.ElectricalVal. Specify this value in the unit indicated by AI.Bridge.PhysicalUnits."	"attr2f8d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Bridge.Table.ElectricalVals"
	"Analog Input:Bridge:Scaling Parameters:Table:Electrical Values"
	fD1D	readwrite		25	2F8E
	"Specifies the array of electrical values that map to the values in AI.Bridge.Table.PhysicalVals. Specify this value in the unit indicated by AI.Bridge.ElectricalUnits."	"attr2f8e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64VtrAP	setChannelF64VtrAP	resetChannelF64VtrAP

attribute: "AI.Bridge.Table.PhysicalVals"
	"Analog Input:Bridge:Scaling Parameters:Table:Physical Values"
	fD1D	readwrite		25	2F8F
	"Specifies the array of physical values that map to the values in AI.Bridge.Table.ElectricalVals. Specify this value in the unit indicated by AI.Bridge.PhysicalUnits."	"attr2f8f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64VtrAP	setChannelF64VtrAP	resetChannelF64VtrAP

attribute: "AI.Bridge.Poly.ForwardCoeff"
	"Analog Input:Bridge:Scaling Parameters:Polynomial:Forward Coefficients"
	fD1D	readwrite		25	2F90
	"Specifies an array of coefficients for the polynomial that converts electrical values to physical values. Each element of the array corresponds to a term of the equation. For example, if index three of the array is 9, the fourth term of the equation is 9x^3."	"attr2f90.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64VtrAP	setChannelF64VtrAP	resetChannelF64VtrAP

attribute: "AI.Bridge.Poly.ReverseCoeff"
	"Analog Input:Bridge:Scaling Parameters:Polynomial:Reverse Coefficients"
	fD1D	readwrite		25	2F91
	"Specifies an array of coefficients for the polynomial that converts physical values to electrical values. Each element of the array corresponds to a term of the equation. For example, if index three of the array is 9, the fourth term of the equation is 9x^3."	"attr2f91.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64VtrAP	setChannelF64VtrAP	resetChannelF64VtrAP

attribute: "AI.Charge.Units"
	"Analog Input:Charge:Units"
	iL enum { "Coulombs"=16102, "PicoCoulombs"=16103, "From Custom Scale"=10065 }	readwrite		25	3112
	"Specifies the units to use to return charge measurements from the channel."	"attr3112.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.TEDS.IsTEDS"
	"Analog Input:TEDS:Is TEDS"
	bool	readonly		25	2983
	"Indicates if the virtual channel was initialized using a TEDS bitstream from the corresponding physical channel."	"attr2983.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	@NoReset

attribute: "AI.TEDS.Units"
	"Analog Input:TEDS:Units"
	string	readonly		25	21E0
	"Indicates the units defined by TEDS information associated with the channel."	"attr21e0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get21E0	set21E0	@NoReset

attribute: "AI.Coupling"
	"Analog Input:General Properties:Input Configuration:Coupling"
	iL enum { "AC"=10045, "DC"=10050, "GND"=10066 }	readwrite		25	64
	"Specifies the coupling for the channel."	"attr64.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Impedance"
	"Analog Input:General Properties:Input Configuration:Impedance"
	fD enum { "50 Ohms"=50, "75 Ohms"=75, "1 M Ohm"=1000000, "10 G Ohms"=10000000000 }	readwrite		25	62
	"Specifies the input impedance of the channel."	"attr62.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.TermCfg"
	"Analog Input:General Properties:Input Configuration:Terminal Configuration"
	iL enum { "RSE"=10083, "NRSE"=10078, "Differential"=10106, "Pseudodifferential"=12529 }	readwrite		25	1097
	"Specifies the terminal configuration for the channel."	"attr1097.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.InputSrc"
	"Analog Input:General Properties:Input Configuration:Input Source"
	string	readwrite		25	2198
	"Specifies the source of the channel. You can use the signal from the I/O connector or one of several calibration signals. Certain devices have a single calibration signal bus. For these devices, you must specify the same calibration signal for all channels you connect to a calibration signal."	"attr2198.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelWstringAP	setChannelWstringAP	resetChannelWstringAP

attribute: "AI.ResistanceCfg"
	"Analog Input:General Properties:Signal Conditioning:Resistance Configuration"
	iL enum { "2-Wire"=2, "3-Wire"=3, "4-Wire"=4 }	readwrite		25	1881
	"Specifies the resistance configuration for the channel. NI-DAQmx uses this value for any resistance-based measurements, including temperature measurement using a thermistor or RTD."	"attr1881.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.LeadWireResistance"
	"Analog Input:General Properties:Signal Conditioning:Lead Wire Resistance"
	fD	readwrite		25	17EE
	"Specifies in ohms the resistance of the wires that lead to the sensor."	"attr17ee.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Bridge.Cfg"
	"Analog Input:General Properties:Signal Conditioning:Bridge:Configuration"
	iL enum { "Full Bridge"=10182, "Half Bridge"=10187, "Quarter Bridge"=10270, "No Bridge"=10228 }	readwrite		25	87
	"Specifies the type of Wheatstone bridge connected to the channel."	"attr87.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Bridge.NomResistance"
	"Analog Input:General Properties:Signal Conditioning:Bridge:Nominal Resistance"
	fD	readwrite		25	17EC
	"Specifies in ohms the resistance of the bridge while not under load."	"attr17ec.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Bridge.InitialVoltage"
	"Analog Input:General Properties:Signal Conditioning:Bridge:Initial Bridge Voltage"
	fD	readwrite		25	17ED
	"Specifies in volts the output voltage of the bridge while not under load. NI-DAQmx subtracts this value from any measurements before applying scaling equations.  If you set AI.Bridge.InitialRatio, NI-DAQmx coerces this property to AI.Bridge.InitialRatio times AI.Excit.ActualVal. This property is set by DAQmx Perform Bridge Offset Nulling Calibration. If you set this property, NI-DAQmx coerces AI.Bridge.InitialRatio to the value of this property divided by AI.Excit.ActualVal. If you set both this property and AI.Bridge.InitialRatio, and their values conflict, NI-DAQmx returns an error. To avoid this error, reset one property to its default value before setting the other."	"attr17ed.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Bridge.InitialRatio"
	"Analog Input:General Properties:Signal Conditioning:Bridge:Initial Bridge Ratio"
	fD	readwrite		25	2F86
	"Specifies in volts per volt the ratio of output voltage from the bridge to excitation voltage supplied to the bridge while not under load. NI-DAQmx subtracts this value from any measurements before applying scaling equations. If you set AI.Bridge.InitialVoltage, NI-DAQmx coerces this property  to AI.Bridge.InitialVoltage divided by AI.Excit.ActualVal. If you set this property, NI-DAQmx coerces AI.Bridge.InitialVoltage to the value of this property times AI.Excit.ActualVal. If you set both this property and AI.Bridge.InitialVoltage, and their values conflict, NI-DAQmx returns an error.  To avoid this error, reset one property to its default value before setting the other."	"attr2f86.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Bridge.ShuntCal.Enable"
	"Analog Input:General Properties:Signal Conditioning:Bridge:Shunt Cal:Shunt Cal Enable"
	bool	readwrite		25	94
	"Specifies whether to enable a shunt calibration switch. Use AI.Bridge.ShuntCal.Select to select the switch(es) to enable."	"attr94.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AI.Bridge.ShuntCal.Select"
	"Analog Input:General Properties:Signal Conditioning:Bridge:Shunt Cal:Shunt Cal Select"
	iL enum { "A"=12513, "B"=12514, "A and B"=12515 }	readwrite		25	21D5
	"Specifies which shunt calibration switch(es) to enable.  Use AI.Bridge.ShuntCal.Enable to enable the switch(es) you specify with this property."	"attr21d5.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Bridge.ShuntCal.ShuntCalASrc"
	"Analog Input:General Properties:Signal Conditioning:Bridge:Shunt Cal:Shunt Cal A Source"
	iL enum { "Built-In"=10200, "User Provided"=10167 }	readwrite		25	30CA
	"Specifies whether to use internal or external shunt when Shunt Cal A is selected."	"attr30ca.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Bridge.ShuntCal.GainAdjust"
	"Analog Input:General Properties:Signal Conditioning:Bridge:Shunt Cal:Gain Adjustment"
	fD	readwrite		25	193F
	"Specifies the result of a shunt calibration. This property is set by DAQmx Perform Shunt Calibration. NI-DAQmx multiplies data read from the channel by the value of this property. This value should be close to 1.0."	"attr193f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Bridge.ShuntCal.ShuntCalAResistance"
	"Analog Input:General Properties:Signal Conditioning:Bridge:Shunt Cal:Shunt Cal A Resistor Value"
	fD	readwrite		25	2F78
	"Specifies in ohms the desired value of the internal shunt calibration A resistor."	"attr2f78.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Bridge.ShuntCal.ShuntCalAActualResistance"
	"Analog Input:General Properties:Signal Conditioning:Bridge:Shunt Cal:Shunt Cal A Actual Resistor Value"
	fD	readwrite		25	2F79
	"Specifies in ohms the actual value of the internal shunt calibration A resistor."	"attr2f79.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Bridge.ShuntCal.ShuntCalBResistance"
	"Analog Input:General Properties:Signal Conditioning:Bridge:Shunt Cal:Shunt Cal B Resistor Value"
	fD	readwrite		25	2F7A
	"Specifies in ohms the desired value of the internal shunt calibration B resistor."	"attr2f7a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Bridge.ShuntCal.ShuntCalBActualResistance"
	"Analog Input:General Properties:Signal Conditioning:Bridge:Shunt Cal:Shunt Cal B Actual Resistor Value"
	fD	readwrite		25	2F7B
	"Specifies in ohms the actual value of the internal shunt calibration B resistor."	"attr2f7b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Bridge.Balance.CoarsePot"
	"Analog Input:General Properties:Signal Conditioning:Bridge:Balance:Coarse Potentiometer"
	iL	readwrite		25	17F1
	"Specifies by how much to compensate for offset in the signal. This value can be between 0 and 127."	"attr17f1.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32AP	setChannelI32AP	resetChannelI32AP

attribute: "AI.Bridge.Balance.FinePot"
	"Analog Input:General Properties:Signal Conditioning:Bridge:Balance:Fine Potentiometer"
	iL	readwrite		25	18F4
	"Specifies by how much to compensate for offset in the signal. This value can be between 0 and 4095."	"attr18f4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32AP	setChannelI32AP	resetChannelI32AP

attribute: "AI.CurrentShunt.Loc"
	"Analog Input:General Properties:Signal Conditioning:Current Shunt Resistor:Location"
	iL enum { "Internal"=10200, "External"=10167 }	readwrite		25	17F2
	"Specifies the shunt resistor location for current measurements."	"attr17f2.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.CurrentShunt.Resistance"
	"Analog Input:General Properties:Signal Conditioning:Current Shunt Resistor:Value"
	fD	readwrite		25	17F3
	"Specifies in ohms the external shunt resistance for current measurements."	"attr17f3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Excit.Sense"
	"Analog Input:General Properties:Signal Conditioning:Excitation:Sense"
	iL enum { "Local"=16095, "Remote"=16096 }	readwrite		25	30FD
	"Specifies whether to use local or remote sense to sense excitation."	"attr30fd.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Excit.Src"
	"Analog Input:General Properties:Signal Conditioning:Excitation:Source"
	iL enum { "Internal"=10200, "External"=10167, "None"=10230 }	readwrite		25	17F4
	"Specifies the source of excitation."	"attr17f4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Excit.Val"
	"Analog Input:General Properties:Signal Conditioning:Excitation:Value"
	fD	readwrite		25	17F5
	"Specifies the amount of excitation that the sensor requires. If AI.Excit.VoltageOrCurrent is  Voltage, this value is in volts. If AI.Excit.VoltageOrCurrent is  Current, this value is in amperes."	"attr17f5.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Excit.UseForScaling"
	"Analog Input:General Properties:Signal Conditioning:Excitation:Advanced:Use Excitation For Scaling"
	bool	readwrite		25	17FC
	"Specifies if NI-DAQmx divides the measurement by the excitation. You should typically set this property to TRUE for ratiometric transducers. If you set this property to TRUE, set AI.Max and AI.Min to reflect the scaling."	"attr17fc.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AI.Excit.UseMultiplexed"
	"Analog Input:General Properties:Signal Conditioning:Excitation:Advanced:Use Multiplexed Excitation"
	bool	readwrite		25	2180
	"Specifies if the SCXI-1122 multiplexes the excitation to the upper half of the channels as it advances through the scan list."	"attr2180.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AI.Excit.ActualVal"
	"Analog Input:General Properties:Signal Conditioning:Excitation:Advanced:Actual Excitation Value"
	fD	readwrite		25	1883
	"Specifies the actual amount of excitation supplied by an internal excitation source.  If you read an internal excitation source more precisely with an external device, set this property to the value you read.  NI-DAQmx ignores this value for external excitation. When performing shunt calibration, some devices set this property automatically."	"attr1883.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Excit.DCorAC"
	"Analog Input:General Properties:Signal Conditioning:Excitation:Advanced:DC or AC"
	iL enum { "DC"=10050, "AC"=10045 }	readwrite		25	17FB
	"Specifies if the excitation supply is DC or AC."	"attr17fb.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Excit.VoltageOrCurrent"
	"Analog Input:General Properties:Signal Conditioning:Excitation:Advanced:Voltage or Current"
	iL enum { "Voltage"=10322, "Current"=10134 }	readwrite		25	17F6
	"Specifies if the channel uses current or voltage excitation."	"attr17f6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Excit.IdleOutputBehavior"
	"Analog Input:General Properties:Signal Conditioning:Excitation:Advanced:Idle Output Behavior"
	iL enum { "Zero Volts or Amps"=12526, "Maintain Existing Value"=12528 }	readwrite		25	30B8
	"Specifies whether this channel will disable excitation after the task is uncommitted. Setting this to Zero Volts or Amps disables excitation after task uncommit. Setting this attribute to Maintain Existing Value leaves the excitation on after task uncommit."	"attr30b8.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.ACExcit.Freq"
	"Analog Input:General Properties:Signal Conditioning:Excitation:AC Excitation:Frequency"
	fD	readwrite		25	101
	"Specifies the AC excitation frequency in Hertz."	"attr101.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.ACExcit.SyncEnable"
	"Analog Input:General Properties:Signal Conditioning:Excitation:AC Excitation:Synchronization Enable"
	bool	readwrite		25	102
	"Specifies whether to synchronize the AC excitation source of the channel to that of another channel. Synchronize the excitation sources of multiple channels to use multichannel sensors. Set this property to FALSE for the master channel and to TRUE for the slave channels."	"attr102.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AI.ACExcit.WireMode"
	"Analog Input:General Properties:Signal Conditioning:Excitation:AC Excitation:Wire Mode"
	iL enum { "4-Wire"=4, "5-Wire"=5, "6-Wire"=6 }	readwrite		25	18CD
	"Specifies the number of leads on the LVDT or RVDT. Some sensors require you to tie leads together to create a four- or five- wire sensor. Refer to the sensor documentation for more information."	"attr18cd.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.SensorPower.Voltage"
	"Analog Input:General Properties:Signal Conditioning:Sensor Power:Voltage"
	fD	readwrite		25	3169
	"Specifies the voltage level for the sensor's power supply."	"attr3169.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.SensorPower.Cfg"
	"Analog Input:General Properties:Signal Conditioning:Sensor Power:Configuration"
	iL enum { "No Change"=10160, "Enabled"=16145, "Disabled"=16146 }	readwrite		25	316A
	"Specifies whether to turn on the sensor's power supply or to leave the configuration unchanged."	"attr316a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.SensorPower.Type"
	"Analog Input:General Properties:Signal Conditioning:Sensor Power:Type"
	iL enum { "DC"=10050, "AC"=10045, "BipolarDC"=16147 }	readwrite		25	316B
	"Specifies the type of power supplied to the sensor."	"attr316b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.OpenThrmcplDetectEnable"
	"Analog Input:General Properties:Signal Conditioning:Thermocouple:Open Thermocouple Detection Enable"
	bool	readwrite		25	2F72
	"Specifies whether to apply the open thermocouple detection bias voltage to the channel. Changing the value of this property on a channel may require settling time before the data returned is valid. To compensate for this settling time, discard unsettled data or add a delay between committing and starting the task. Refer to your device specifications for the required settling time. When open thermocouple detection is enabled, use OpenThrmcplChansExist to determine if any channels were open."	"attr2f72.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AI.Thrmcpl.LeadOffsetVoltage"
	"Analog Input:General Properties:Signal Conditioning:Thermocouple:Lead Offset Voltage"
	fD	readwrite		25	2FB8
	"Specifies the lead offset nulling voltage to subtract from measurements on a device. This property is ignored if open thermocouple detection is disabled."	"attr2fb8.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Atten"
	"Analog Input:General Properties:Signal Conditioning:Attenuation"
	fD	readwrite		25	1801
	"Specifies the amount of attenuation to use."	"attr1801.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.ProbeAtten"
	"Analog Input:General Properties:Signal Conditioning:Probe Attenuation"
	fD	readwrite		25	2A88
	"Specifies the amount of attenuation provided by the probe connected to the channel. Specify this attenuation as a ratio."	"attr2a88.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Lowpass.Enable"
	"Analog Input:General Properties:Filter:Analog Filter:Lowpass:Enable"
	bool	readwrite		25	1802
	"Specifies whether to enable the lowpass filter of the channel."	"attr1802.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AI.Lowpass.CutoffFreq"
	"Analog Input:General Properties:Filter:Analog Filter:Lowpass:Cutoff Frequency"
	fD	readwrite		25	1803
	"Specifies the frequency in Hertz that corresponds to the -3dB cutoff of the filter."	"attr1803.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Lowpass.SwitchCap.ClkSrc"
	"Analog Input:General Properties:Filter:Analog Filter:Lowpass:Advanced:Switched Capacitor:Clock Source"
	iL enum { "Internal"=10200, "External"=10167 }	readwrite		25	1884
	"Specifies the source of the filter clock. If you need a higher resolution for the filter, you can supply an external clock to increase the resolution. Refer to the SCXI-1141/1142/1143 User Manual for more information."	"attr1884.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Lowpass.SwitchCap.ExtClkFreq"
	"Analog Input:General Properties:Filter:Analog Filter:Lowpass:Advanced:Switched Capacitor:External Clock Frequency"
	fD	readwrite		25	1885
	"Specifies the frequency of the external clock when you set AI.Lowpass.SwitchCap.ClkSrc to External.  NI-DAQmx uses this frequency to set the pre- and post- filters on the SCXI-1141, SCXI-1142, and SCXI-1143. On those devices, NI-DAQmx determines the filter cutoff by using the equation f/(100*n), where f is the external frequency, and n is the external clock divisor. Refer to the SCXI-1141/1142/1143 User Manual for more information."	"attr1885.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Lowpass.SwitchCap.ExtClkDiv"
	"Analog Input:General Properties:Filter:Analog Filter:Lowpass:Advanced:Switched Capacitor:External Clock Divisor"
	uL	readwrite		25	1886
	"Specifies the divisor for the external clock when you set AI.Lowpass.SwitchCap.ClkSrc to External. On the SCXI-1141, SCXI-1142, and SCXI-1143, NI-DAQmx determines the filter cutoff by using the equation f/(100*n), where f is the external frequency, and n is the external clock divisor. Refer to the SCXI-1141/1142/1143 User Manual for more information."	"attr1886.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "AI.Lowpass.SwitchCap.OutClkDiv"
	"Analog Input:General Properties:Filter:Analog Filter:Lowpass:Advanced:Switched Capacitor:Output Clock Divisor"
	uL	readwrite		25	1887
	"Specifies the divisor for the output clock.  NI-DAQmx uses the cutoff frequency to determine the output clock frequency. Refer to the SCXI-1141/1142/1143 User Manual for more information."	"attr1887.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "AI.DigFltr.Enable"
	"Analog Input:General Properties:Filter:Digital Filter:Enable"
	bool	readwrite		25	30BD
	"Specifies whether the digital filter is enabled or disabled."	"attr30bd.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AI.DigFltr.Type"
	"Analog Input:General Properties:Filter:Digital Filter:Type"
	iL enum { "Lowpass"=16071, "Highpass"=16072, "Bandpass"=16073, "Notch"=16074, "Custom"=10137 }	readwrite		25	30BE
	"Specifies the digital filter type."	"attr30be.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.DigFltr.Response"
	"Analog Input:General Properties:Filter:Digital Filter:Response"
	iL enum { "Constant Group Delay"=16075, "Butterworth"=16076, "Elliptical"=16077, "Hardware Defined"=10191 }	readwrite		25	30BF
	"Specifies the digital filter response."	"attr30bf.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.DigFltr.Order"
	"Analog Input:General Properties:Filter:Digital Filter:Order"
	uL	readwrite		25	30C0
	"Specifies the order of the digital filter."	"attr30c0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "AI.DigFltr.Lowpass.CutoffFreq"
	"Analog Input:General Properties:Filter:Digital Filter:Lowpass:Cutoff Frequency"
	fD	readwrite		25	30C1
	"Specifies the lowpass cutoff frequency of the digital filter."	"attr30c1.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.DigFltr.Highpass.CutoffFreq"
	"Analog Input:General Properties:Filter:Digital Filter:Highpass:Cutoff Frequency"
	fD	readwrite		25	30C2
	"Specifies the highpass cutoff frequency of the digital filter."	"attr30c2.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.DigFltr.Bandpass.CenterFreq"
	"Analog Input:General Properties:Filter:Digital Filter:Bandpass:Center Frequency"
	fD	readwrite		25	30C3
	"Specifies the center frequency of the passband for the digital filter."	"attr30c3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.DigFltr.Bandpass.Width"
	"Analog Input:General Properties:Filter:Digital Filter:Bandpass:Width"
	fD	readwrite		25	30C4
	"Specifies the width of the passband centered around the center frequency for the digital filter."	"attr30c4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.DigFltr.Notch.CenterFreq"
	"Analog Input:General Properties:Filter:Digital Filter:Notch:Center Frequency"
	fD	readwrite		25	30C5
	"Specifies the center frequency of the stopband for the digital filter."	"attr30c5.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.DigFltr.Notch.Width"
	"Analog Input:General Properties:Filter:Digital Filter:Notch:Width"
	fD	readwrite		25	30C6
	"Specifies the width of the stopband centered around the center frequency for the digital filter."	"attr30c6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.DigFltr.Coeff"
	"Analog Input:General Properties:Filter:Digital Filter:Advanced:Coefficients"
	fD1D	readwrite		25	30C7
	"Specifies the digital filter coefficients."	"attr30c7.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64VtrAP	setChannelF64VtrAP	resetChannelF64VtrAP

attribute: "AI.Filter.Enable"
	"Analog Input:General Properties:Filter:Enable"
	bool	readwrite		25	3173
	"Specifies the corresponding filter enable/disable state."	"attr3173.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AI.Filter.Freq"
	"Analog Input:General Properties:Filter:Frequency"
	fD	readwrite		25	3174
	"Specifies the corresponding filter frequency (cutoff or center) of the filter response."	"attr3174.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Filter.Response"
	"Analog Input:General Properties:Filter:Response"
	iL enum { "Comb"=16152, "Bessel"=16153, "Brickwall"=16155, "Butterworth"=16076 }	readwrite		25	3175
	"Specifies the corresponding filter response and defines the shape of the filter response."	"attr3175.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.Filter.Order"
	"Analog Input:General Properties:Filter:Order"
	uL	readwrite		25	3176
	"Specifies the corresponding filter order and defines the slope of the filter response."	"attr3176.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "AI.FilterDelay"
	"Analog Input:General Properties:Filter:Filter Delay"
	fD	readonly		25	2FED
	"Indicates the amount of time between when the ADC samples data and when the sample is read by the host device. This value is in the units you specify with AI.FilterDelayUnits. You can adjust this amount of time using AI.FilterDelayAdjustment."	"attr2fed.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	@NoReset

attribute: "AI.FilterDelayUnits"
	"Analog Input:General Properties:Filter:Filter Delay Units"
	iL enum { "Seconds"=10364, "Sample Clock Periods"=10286 }	readwrite		25	3071
	"Specifies the units of AI.FilterDelay and AI.FilterDelayAdjustment."	"attr3071.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.RemoveFilterDelay"
	"Analog Input:General Properties:Filter:Remove Filter Delay"
	bool	readwrite		25	2FBD
	"Specifies if filter delay removal is enabled on the device."	"attr2fbd.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AI.FilterDelayAdjustment"
	"Analog Input:General Properties:Filter:Filter Delay Adjustment"
	fD	readwrite		25	3074
	"Specifies the amount of filter delay that gets removed if AI.RemoveFilterDelay is enabled. This delay adjustment is in addition to the value indicated by AI.FilterDelay. This delay adjustment is in the units you specify with AI.FilterDelayUnits."	"attr3074.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.AveragingWinSize"
	"Analog Input:General Properties:Filter:Averaging Window Size"
	uL	readwrite		25	2FEE
	"Specifies the number of samples to average while acquiring data. Increasing the number of samples to average reduces noise in your measurement."	"attr2fee.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "AI.ResolutionUnits"
	"Analog Input:General Properties:Digitizer/ADC:Resolution Units"
	iL enum { "Bits"=10109 }	readonly		25	1764
	"Indicates the units of AI.Resolution."	"attr1764.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	@NoReset

attribute: "AI.Resolution"
	"Analog Input:General Properties:Digitizer/ADC:Resolution Value"
	fD	readonly		25	1765
	"Indicates the resolution of the analog-to-digital converter of the channel. This value is in the units you specify with AI.ResolutionUnits."	"attr1765.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	@NoReset

attribute: "AI.RawSampSize"
	"Analog Input:General Properties:Digitizer/ADC:Raw Sample Size"
	uL	readonly		25	22DA
	"Indicates in bits the size of a raw sample from the device."	"attr22da.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	@NoReset

attribute: "AI.RawSampJustification"
	"Analog Input:General Properties:Digitizer/ADC:Raw Sample Justification"
	iL enum { "Right-Justified"=10279, "Left-Justified"=10209 }	readonly		25	50
	"Indicates the justification of a raw sample from the device."	"attr50.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	@NoReset

attribute: "AI.ADCTimingMode"
	"Analog Input:General Properties:Digitizer/ADC:Timing Mode"
	iL enum { "Automatic"=16097, "High Resolution"=10195, "High Speed"=14712, "Best 50 Hz Rejection"=14713, "Best 60 Hz Rejection"=14714, "Custom"=10137 }	readwrite		25	29F9
	"Specifies the ADC timing mode, controlling the tradeoff between speed and effective resolution. Some ADC timing modes provide increased powerline noise rejection. On devices that have an AI Convert clock, this setting affects both the maximum and default values for AIConv.Rate. You must use the same ADC timing mode for all channels on a device, but you can use different ADC timing modes for different devices in the same task."	"attr29f9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.ADCCustomTimingMode"
	"Analog Input:General Properties:Digitizer/ADC:Custom Timing Mode"
	uL	readwrite		25	2F6B
	"Specifies the timing mode of the ADC when AI.ADCTimingMode is Custom."	"attr2f6b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "AI.Dither.Enable"
	"Analog Input:General Properties:Digitizer/ADC:Dither:Enable"
	bool	readwrite		25	68
	"Specifies whether to enable dithering.  Dithering adds Gaussian noise to the input signal. You can use dithering to achieve higher resolution measurements by over sampling the input signal and averaging the results."	"attr68.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AI.ChanCal.HasValidCalInfo"
	"Analog Input:General Properties:Channel Calibration:Has Valid Calibration Information"
	bool	readonly		25	2297
	"Indicates if the channel has calibration information."	"attr2297.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	@NoReset

attribute: "AI.ChanCal.EnableCal"
	"Analog Input:General Properties:Channel Calibration:Enable Calibration"
	bool	readwrite		25	2298
	"Specifies whether to enable the channel calibration associated with the channel."	"attr2298.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AI.ChanCal.ApplyCalIfExp"
	"Analog Input:General Properties:Channel Calibration:Apply Calibration If Expired"
	bool	readwrite		25	2299
	"Specifies whether to apply the channel calibration to the channel after the expiration date has passed."	"attr2299.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AI.ChanCal.CalDate"
	"Analog Input:General Properties:Channel Calibration:Calibration Date"
	timestamp	readwrite		25	229A
	"Specifies the last date and time that the channel underwent a channel calibration."	"attr229a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get229A	set229A	reset229A

attribute: "AI.ChanCal.ExpDate"
	"Analog Input:General Properties:Channel Calibration:Expiration Date"
	timestamp	readwrite		25	229B
	"Specifies the date and time that the channel calibration expires."	"attr229b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get229B	set229B	reset229B

attribute: "AI.ChanCal.ScaleType"
	"Analog Input:General Properties:Channel Calibration:Scaling Parameters:Scale Type"
	iL enum { "Polynomial"=10449, "Table"=10450, "None"=10230 }	readwrite		25	229C
	"Specifies the method or equation form that the calibration scale uses."	"attr229c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.ChanCal.Table.PreScaledVals"
	"Analog Input:General Properties:Channel Calibration:Scaling Parameters:Table:Pre-Scaled Values"
	fD1D	readwrite		25	229D
	"Specifies the reference values collected when calibrating the channel."	"attr229d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64VtrAP	setChannelF64VtrAP	resetChannelF64VtrAP

attribute: "AI.ChanCal.Table.ScaledVals"
	"Analog Input:General Properties:Channel Calibration:Scaling Parameters:Table:Scaled Values"
	fD1D	readwrite		25	229E
	"Specifies the acquired values collected when calibrating the channel."	"attr229e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64VtrAP	setChannelF64VtrAP	resetChannelF64VtrAP

attribute: "AI.ChanCal.Poly.ForwardCoeff"
	"Analog Input:General Properties:Channel Calibration:Scaling Parameters:Polynomial:Forward Coefficients"
	fD1D	readwrite		25	229F
	"Specifies the forward polynomial values used for calibrating the channel."	"attr229f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64VtrAP	setChannelF64VtrAP	resetChannelF64VtrAP

attribute: "AI.ChanCal.Poly.ReverseCoeff"
	"Analog Input:General Properties:Channel Calibration:Scaling Parameters:Polynomial:Reverse Coefficients"
	fD1D	readwrite		25	22A0
	"Specifies the reverse polynomial values used for calibrating the channel."	"attr22a0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64VtrAP	setChannelF64VtrAP	resetChannelF64VtrAP

attribute: "AI.ChanCal.OperatorName"
	"Analog Input:General Properties:Channel Calibration:Operator Name"
	string	readwrite		25	22A3
	"Specifies the name of the operator who performed the channel calibration."	"attr22a3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelWstringAP	setChannelWstringAP	resetChannelWstringAP

attribute: "AI.ChanCal.Desc"
	"Analog Input:General Properties:Channel Calibration:Description"
	string	readwrite		25	22A4
	"Specifies the description entered for the calibration of the channel."	"attr22a4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelWstringAP	setChannelWstringAP	resetChannelWstringAP

attribute: "AI.ChanCal.Verif.RefVals"
	"Analog Input:General Properties:Channel Calibration:Verification:Reference Values"
	fD1D	readwrite		25	22A1
	"Specifies the reference values collected when verifying the calibration. NI-DAQmx stores these values as a record of calibration accuracy and does not use them in the scaling process."	"attr22a1.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64VtrAP	setChannelF64VtrAP	resetChannelF64VtrAP

attribute: "AI.ChanCal.Verif.AcqVals"
	"Analog Input:General Properties:Channel Calibration:Verification:Acquired Values"
	fD1D	readwrite		25	22A2
	"Specifies the acquired values collected when verifying the calibration. NI-DAQmx stores these values as a record of calibration accuracy and does not use them in the scaling process."	"attr22a2.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64VtrAP	setChannelF64VtrAP	resetChannelF64VtrAP

attribute: "AI.Rng.High"
	"Analog Input:General Properties:Advanced:Range:High"
	fD	readwrite		25	1815
	"Specifies the upper limit of the input range of the device. This value is in the native units of the device. On E Series devices, for example, the native units is volts."	"attr1815.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Rng.Low"
	"Analog Input:General Properties:Advanced:Range:Low"
	fD	readwrite		25	1816
	"Specifies the lower limit of the input range of the device. This value is in the native units of the device. On E Series devices, for example, the native units is volts."	"attr1816.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.DCOffset"
	"Analog Input:General Properties:Advanced:DC Offset"
	fD	readwrite		25	2A89
	"Specifies the DC value to add to the input range of the device. Use AI.Rng.High and AI.Rng.Low to specify the input range. This offset is in the native units of the device ."	"attr2a89.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.Gain"
	"Analog Input:General Properties:Advanced:Gain"
	fD	readwrite		25	1818
	"Specifies a gain factor to apply to the channel."	"attr1818.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.SampAndHold.Enable"
	"Analog Input:General Properties:Advanced:Sample and Hold Enable"
	bool	readwrite		25	181A
	"Specifies whether to enable the sample and hold circuitry of the device. When you disable sample and hold circuitry, a small voltage offset might be introduced into the signal.  You can eliminate this offset by using AI.AutoZeroMode to perform an auto zero on the channel."	"attr181a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AI.AutoZeroMode"
	"Analog Input:General Properties:Advanced:High Accuracy Settings:Auto Zero Mode"
	iL enum { "None"=10230, "Once"=10244, "Every Sample"=10164 }	readwrite		25	1760
	"Specifies how often to measure ground. NI-DAQmx subtracts the measured ground voltage from every sample."	"attr1760.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumObservableAP	setChannelI32EnumObservableAP	resetChannelI32EnumObservableAP

attribute: "AI.Chop.Enable"
	"Analog Input:General Properties:Advanced:High Accuracy Settings:Chop:Enable"
	bool	readwrite		25	3143
	"Specifies whether the device will chop its inputs. Chopping removes offset voltages and other low frequency errors."	"attr3143.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AI.DataXferMaxRate"
	"Analog Input:General Properties:Advanced:Data Transfer and Memory:Data Transfer Maximum Rate"
	fD	readwrite		25	3117
	"Specifies the rate in B/s to transfer data from the device. If this value is not set, then the device will transfer data at a rate based on the bus detected. Modify this value to affect performance under different combinations of operating system, configuration, and device."	"attr3117.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.DataXferMech"
	"Analog Input:General Properties:Advanced:Data Transfer and Memory:Data Transfer Mechanism"
	iL enum { "DMA"=10054, "Interrupts"=10204, "Programmed I/O"=10264, "USB Bulk"=12590 }	readwrite		25	1821
	"Specifies the data transfer mode for the device."	"attr1821.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.DataXferReqCond"
	"Analog Input:General Properties:Advanced:Data Transfer and Memory:Data Transfer Request Condition"
	iL enum { "Onboard Memory More than Half Full"=10237, "Onboard Memory Not Empty"=10241, "Onboard Memory Custom Threshold"=12577, "When Acquisition Complete"=12546 }	readwrite		25	188B
	"Specifies under what condition to transfer data from the onboard memory of the device to the buffer."	"attr188b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.DataXferCustomThreshold"
	"Analog Input:General Properties:Advanced:Data Transfer and Memory:Data Transfer Custom Threshold"
	uL	readwrite		25	230C
	"Specifies the number of samples that must be in the FIFO to transfer data from the device if AI.DataXferReqCond is Onboard Memory Custom Threshold."	"attr230c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "AI.UsbXferReqSize"
	"Analog Input:General Properties:Advanced:Data Transfer and Memory:USB Transfer Request Size"
	uL	readwrite		25	2A8E
	"Specifies the maximum size of a USB transfer request in bytes. Modify this value to affect performance under different combinations of operating system and device."	"attr2a8e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "AI.UsbXferReqCount"
	"Analog Input:General Properties:Advanced:Data Transfer and Memory:USB Transfer Request Count"
	uL	readwrite		25	3000
	"Specifies the maximum number of simultaneous USB transfers used to stream data. Modify this value to affect performance under different combinations of operating system and device."	"attr3000.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "AI.MemMapEnable"
	"Analog Input:General Properties:Advanced:Data Transfer and Memory:Memory Mapping for Programmed IO Enable"
	bool	readwrite		25	188C
	"Specifies for NI-DAQmx to map hardware registers to the memory space of the application, if possible. Normally, NI-DAQmx maps hardware registers to memory accessible only to the kernel. Mapping the registers to the memory space of the application increases performance. However, if the application accesses the memory space mapped to the registers, it can adversely affect the operation of the device and possibly result in a system crash."	"attr188c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AI.RawDataCompressionType"
	"Analog Input:General Properties:Advanced:Data Transfer and Memory:Compression:Raw Data Compression Type"
	iL enum { "None"=10230, "Lossless Packing"=12555, "Lossy LSB Removal"=12556 }	readwrite		25	22D8
	"Specifies the type of compression to apply to raw samples returned from the device."	"attr22d8.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AI.LossyLSBRemoval.CompressedSampSize"
	"Analog Input:General Properties:Advanced:Data Transfer and Memory:Compression:Lossy LSB Removal:Compressed Sample Size"
	uL	readwrite		25	22D9
	"Specifies the number of bits to return in a raw sample when AI.RawDataCompressionType is set to Lossy LSB Removal."	"attr22d9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "AI.DevScalingCoeff"
	"Analog Input:General Properties:Advanced:Device Scaling Coefficients:Device Scaling Coefficients"
	fD1D	readonly		25	1930
	"Indicates the coefficients of a polynomial equation that NI-DAQmx uses to scale values from the native format of the device to volts. Each element of the array corresponds to a term of the equation. For example, if index two of the array is 4, the third term of the equation is 4x^2. Scaling coefficients do not account for any custom scales or sensors contained by the channel."	"attr1930.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64VtrAP	setChannelF64VtrAP	@NoReset

attribute: "AI.EnhancedAliasRejectionEnable"
	"Analog Input:General Properties:Advanced:Enhanced Alias Rejection Enable"
	bool	readwrite		25	2294
	"Specifies whether to enable enhanced alias rejection. Leave this property set to the default value for most applications."	"attr2294.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AI.OpenChanDetectEnable"
	"Analog Input:General Properties:Advanced:Open Channel Detection Enable"
	bool	readwrite		25	30FF
	"Specifies whether to enable open channel detection."	"attr30ff.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AI.InputLimitsFaultDetect.UpperLimit"
	"Analog Input:General Properties:Advanced:Input Limits Fault Detection:Upper Limit"
	fD	readwrite		25	318C
	"Specifies the level of the upper limit for input limits detection. An input sample outside the upper and lower bounds causes a fault. Note: Fault detection applies to both positive and negative inputs. For instance, if you specify a lower limit of 2 mA and an upper limit of 12 mA, NI-DAQmx detects a fault at 15 mA and -15 mA, but not at -6 mA because it is in the range of -12 mA to -2 mA."	"attr318c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.InputLimitsFaultDetect.LowerLimit"
	"Analog Input:General Properties:Advanced:Input Limits Fault Detection:Lower Limit"
	fD	readwrite		25	318D
	"Specifies the level of the lower limit for input limits detection. An input sample outside the upper and lower bounds causes a fault. Note: Fault detection applies to both positive and negative inputs. For instance, if you specify a lower limit of 2 mA and an upper limit of 12 mA, NI-DAQmx detects a fault at 15 mA and -15 mA, but not at -6 mA because it is in the range of -12 mA to -2 mA."	"attr318d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AI.InputLimitsFaultDetectEnable"
	"Analog Input:General Properties:Advanced:Input Limits Fault Detection:Enable"
	bool	readwrite		25	318E
	"Specifies whether to enable input limits fault detection."	"attr318e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AI.PowerSupplyFaultDetectEnable"
	"Analog Input:General Properties:Advanced:Power Supply Fault Detection:Enable"
	bool	readwrite		25	3191
	"Specifies whether to enable power supply fault detection."	"attr3191.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AI.OvercurrentDetectEnable"
	"Analog Input:General Properties:Advanced:Overcurrent Detection:Enable"
	bool	readwrite		25	3194
	"Specifies whether to enable overcurrent detection."	"attr3194.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AO.Max"
	"Analog Output:Maximum Value"
	fD	readwrite		25	1186
	"Specifies the maximum value you expect to generate. The value is in the units you specify with a units property. If you try to write a value larger than the maximum value, NI-DAQmx generates an error. NI-DAQmx might coerce this value to a smaller value if other task settings restrict the device from generating the desired maximum."	"attr1186.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AO.Min"
	"Analog Output:Minimum Value"
	fD	readwrite		25	1187
	"Specifies the minimum value you expect to generate. The value is in the units you specify with a units property. If you try to write a value smaller than the minimum value, NI-DAQmx generates an error. NI-DAQmx might coerce this value to a larger value if other task settings restrict the device from generating the desired minimum."	"attr1187.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AO.CustomScaleName"
	"Analog Output:Custom Scale Name"
	DAQScale	readwrite		25	1188
	"Specifies the name of a custom scale for the channel."	"attr1188.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelWstringScaleAP	setChannelWstringScaleAP	resetChannelWstringScaleAP

attribute: "AO.OutputType"
	"Analog Output:Output Type"
	iL enum { "Voltage"=10322, "Current"=10134, "Function Generation"=14750 }	readonly		25	1108
	"Indicates whether the channel generates voltage,  current, or a waveform."	"attr1108.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	@NoReset

attribute: "AO.Voltage.Units"
	"Analog Output:Voltage:Units"
	iL enum { "Volts"=10348, "From Custom Scale"=10065 }	readwrite		25	1184
	"Specifies in what units to generate voltage on the channel. Write data to the channel in the units you select."	"attr1184.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AO.Voltage.CurrentLimit"
	"Analog Output:Voltage:Current Limit"
	fD	readwrite		25	2A1D
	"Specifies the current limit, in amperes, for the voltage channel."	"attr2a1d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AO.Current.Units"
	"Analog Output:Current:Units"
	iL enum { "Amps"=10342, "From Custom Scale"=10065, "From TEDS"=12516 }	readwrite		25	1109
	"Specifies in what units to generate current on the channel. Write data to the channel in the units you select."	"attr1109.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AO.FuncGen.Type"
	"Analog Output:Function Generation:Type"
	iL enum { "Sine"=14751, "Triangle"=14752, "Square"=14753, "Sawtooth"=14754 }	readwrite		25	2A18
	"Specifies the kind of the waveform to generate."	"attr2a18.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AO.FuncGen.Freq"
	"Analog Output:Function Generation:Frequency"
	fD	readwrite		25	2A19
	"Specifies the frequency of the waveform to generate in hertz."	"attr2a19.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AO.FuncGen.Amplitude"
	"Analog Output:Function Generation:Amplitude"
	fD	readwrite		25	2A1A
	"Specifies the zero-to-peak amplitude of the waveform to generate in volts. Zero and negative values are valid."	"attr2a1a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AO.FuncGen.Offset"
	"Analog Output:Function Generation:Offset"
	fD	readwrite		25	2A1B
	"Specifies the voltage offset of the waveform to generate."	"attr2a1b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AO.FuncGen.Square.DutyCycle"
	"Analog Output:Function Generation:Square:DutyCycle"
	fD	readwrite		25	2A1C
	"Specifies the square wave duty cycle of the waveform to generate."	"attr2a1c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AO.FuncGen.ModulationType"
	"Analog Output:Function Generation:Modulation:Type"
	iL enum { "AM"=14756, "FM"=14757, "None"=10230 }	readwrite		25	2A22
	"Specifies if the device generates a modulated version of the waveform using the original waveform as a carrier and input from an external terminal as the signal."	"attr2a22.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AO.FuncGen.FMDeviation"
	"Analog Output:Function Generation:Modulation:FM Deviation"
	fD	readwrite		25	2A23
	"Specifies the FM deviation in hertz per volt when AO.FuncGen.ModulationType is FM."	"attr2a23.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AO.OutputImpedance"
	"Analog Output:General Properties:Output Configuration:Output Impedance"
	fD	readwrite		25	1490
	"Specifies in ohms the impedance of the analog output stage of the device."	"attr1490.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AO.LoadImpedance"
	"Analog Output:General Properties:Output Configuration:Load Impedance"
	fD	readwrite		25	121
	"Specifies in ohms the load impedance connected to the analog output channel."	"attr121.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AO.IdleOutputBehavior"
	"Analog Output:General Properties:Output Configuration:Idle Output Behavior"
	iL enum { "Zero Volts"=12526, "High-Impedance"=12527, "Maintain Existing Value"=12528 }	readwrite		25	2240
	"Specifies the state of the channel when no generation is in progress."	"attr2240.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AO.TermCfg"
	"Analog Output:General Properties:Output Configuration:Terminal Configuration"
	iL enum { "RSE"=10083, "Differential"=10106, "Pseudodifferential"=12529 }	readwrite		25	188E
	"Specifies the terminal configuration of the channel."	"attr188e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AO.CommonModeOffset"
	"Analog Output:General Properties:Output Configuration:Common Mode Offset"
	fD	readwrite		25	31CC
	"Specifies the common-mode offset of the AO channel. Use the property only when Terminal Configuration is set to Differential."	"attr31cc.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AO.ResolutionUnits"
	"Analog Output:General Properties:DAC:Resolution Units"
	iL enum { "Bits"=10109 }	readwrite		25	182B
	"Specifies the units of AO.Resolution."	"attr182b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AO.Resolution"
	"Analog Output:General Properties:DAC:Resolution Value"
	fD	readonly		25	182C
	"Indicates the resolution of the digital-to-analog converter of the channel. This value is in the units you specify with AO.ResolutionUnits."	"attr182c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	@NoReset

attribute: "AO.DAC.Rng.High"
	"Analog Output:General Properties:DAC:Range:High"
	fD	readwrite		25	182E
	"Specifies the upper limit of the output range of the device. This value is in the native units of the device. On E Series devices, for example, the native units is volts."	"attr182e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AO.DAC.Rng.Low"
	"Analog Output:General Properties:DAC:Range:Low"
	fD	readwrite		25	182D
	"Specifies the lower limit of the output range of the device. This value is in the native units of the device. On E Series devices, for example, the native units is volts."	"attr182d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AO.DAC.Ref.ConnToGnd"
	"Analog Output:General Properties:DAC:Reference Voltage:Connect DAC Reference to Ground"
	bool	readwrite		25	130
	"Specifies whether to ground the internal DAC reference. Grounding the internal DAC reference has the effect of grounding all analog output channels and stopping waveform generation across all analog output channels regardless of whether the channels belong to the current task. You can ground the internal DAC reference only when AO.DAC.Ref.Src is Internal and AO.DAC.Ref.AllowConnToGnd is TRUE."	"attr130.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AO.DAC.Ref.AllowConnToGnd"
	"Analog Output:General Properties:DAC:Reference Voltage:Allow Connecting DAC Reference to Ground at Runtime"
	bool	readwrite		25	1830
	"Specifies whether to allow grounding the internal DAC reference at run time. You must set this property to TRUE and set AO.DAC.Ref.Src to Internal before you can set AO.DAC.Ref.ConnToGnd to TRUE."	"attr1830.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AO.DAC.Ref.Src"
	"Analog Output:General Properties:DAC:Reference Voltage:Source"
	iL enum { "Internal"=10200, "External"=10167 }	readwrite		25	132
	"Specifies the source of the DAC reference voltage. The value of this voltage source determines the full-scale value of the DAC."	"attr132.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AO.DAC.Ref.ExtSrc"
	"Analog Output:General Properties:DAC:Reference Voltage:External Source"
	string	readwrite		25	2252
	"Specifies the source of the DAC reference voltage if AO.DAC.Ref.Src is External. The valid sources for this signal vary by device."	"attr2252.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelWstringAP	setChannelWstringAP	resetChannelWstringAP

attribute: "AO.DAC.Ref.Val"
	"Analog Output:General Properties:DAC:Reference Voltage:Value"
	fD	readwrite		25	1832
	"Specifies in volts the value of the DAC reference voltage. This voltage determines the full-scale range of the DAC. Smaller reference voltages result in smaller ranges, but increased resolution."	"attr1832.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AO.DAC.Offset.Src"
	"Analog Output:General Properties:DAC:Offset Voltage:Source"
	iL enum { "Internal"=10200, "External"=10167 }	readwrite		25	2253
	"Specifies the source of the DAC offset voltage. The value of this voltage source determines the full-scale value of the DAC."	"attr2253.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AO.DAC.Offset.ExtSrc"
	"Analog Output:General Properties:DAC:Offset Voltage:External Source"
	string	readwrite		25	2254
	"Specifies the source of the DAC offset voltage if AO.DAC.Offset.Src is External. The valid sources for this signal vary by device."	"attr2254.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelWstringAP	setChannelWstringAP	resetChannelWstringAP

attribute: "AO.DAC.Offset.Val"
	"Analog Output:General Properties:DAC:Offset Voltage:Value"
	fD	readwrite		25	2255
	"Specifies in volts the value of the DAC offset voltage. To achieve best accuracy, the DAC offset value should be hand calibrated."	"attr2255.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AO.ReglitchEnable"
	"Analog Output:General Properties:DAC:Reglitching Enable"
	bool	readwrite		25	133
	"Specifies whether to enable reglitching.  The output of a DAC normally glitches whenever the DAC is updated with a new value. The amount of glitching differs from code to code and is generally largest at major code transitions.  Reglitching generates uniform glitch energy at each code transition and provides for more uniform glitches.  Uniform glitch energy makes it easier to filter out the noise introduced from glitching during spectrum analysis."	"attr133.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AO.FilterDelay"
	"Analog Output:General Properties:Filter:Filter Delay"
	fD	readwrite		25	3075
	"Specifies the amount of time between when the sample is written by the host device and when the sample is output by the DAC. This value is in the units you specify with AO.FilterDelayUnits."	"attr3075.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AO.FilterDelayUnits"
	"Analog Output:General Properties:Filter:Filter Delay Units"
	iL enum { "Seconds"=10364, "Sample Clock Periods"=10286 }	readwrite		25	3076
	"Specifies the units of AO.FilterDelay and AO.FilterDelayAdjustment."	"attr3076.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AO.FilterDelayAdjustment"
	"Analog Output:General Properties:Filter:Filter Delay Adjustment"
	fD	readwrite		25	3072
	"Specifies an additional amount of time to wait between when the sample is written by the host device and when the sample is output by the DAC. This delay adjustment is in addition to the value indicated by AO.FilterDelay. This delay adjustment is in the units you specify with AO.FilterDelayUnits."	"attr3072.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AO.Gain"
	"Analog Output:General Properties:Advanced:Gain:Gain Value"
	fD	readwrite		25	118
	"Specifies in decibels the gain factor to apply to the channel."	"attr118.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "AO.UseOnlyOnBrdMem"
	"Analog Output:General Properties:Advanced:Data Transfer and Memory:Use Only Onboard Memory"
	bool	readwrite		25	183A
	"Specifies whether to write samples directly to the onboard memory of the device, bypassing the memory buffer. Generally, you cannot update onboard memory directly after you start the task. Onboard memory includes data FIFOs."	"attr183a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AO.DataXferMech"
	"Analog Output:General Properties:Advanced:Data Transfer and Memory:Data Transfer Mechanism"
	iL enum { "DMA"=10054, "Interrupts"=10204, "Programmed I/O"=10264, "USB Bulk"=12590 }	readwrite		25	134
	"Specifies the data transfer mode for the device."	"attr134.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AO.DataXferReqCond"
	"Analog Output:General Properties:Advanced:Data Transfer and Memory:Data Transfer Request Condition"
	iL enum { "Onboard Memory Empty"=10235, "Onboard Memory Half Full or Less"=10239, "Onboard Memory Less than Full"=10242 }	readwrite		25	183C
	"Specifies under what condition to transfer data from the buffer to the onboard memory of the device."	"attr183c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "AO.UsbXferReqSize"
	"Analog Output:General Properties:Advanced:Data Transfer and Memory:USB Transfer Request Size"
	uL	readwrite		25	2A8F
	"Specifies the maximum size of a USB transfer request in bytes. Modify this value to affect performance under different combinations of operating system and device."	"attr2a8f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "AO.UsbXferReqCount"
	"Analog Output:General Properties:Advanced:Data Transfer and Memory:USB Transfer Request Count"
	uL	readwrite		25	3001
	"Specifies the maximum number of simultaneous USB transfers used to stream data. Modify this value to affect performance under different combinations of operating system and device."	"attr3001.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "AO.MemMapEnable"
	"Analog Output:General Properties:Advanced:Data Transfer and Memory:Memory Mapping for Programmed IO Enable"
	bool	readwrite		25	188F
	"Specifies for NI-DAQmx to map hardware registers to the memory space of the application, if possible. Normally, NI-DAQmx maps hardware registers to memory accessible only to the kernel. Mapping the registers to the memory space of the application increases performance. However, if the application accesses the memory space mapped to the registers, it can adversely affect the operation of the device and possibly result in a system crash."	"attr188f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "AO.DevScalingCoeff"
	"Analog Output:General Properties:Advanced:Device Scaling Coefficients:Device Scaling Coefficients"
	fD1D	readonly		25	1931
	"Indicates the coefficients of a linear equation that NI-DAQmx uses to scale values from a voltage to the native format of the device. Each element of the array corresponds to a term of the equation. The first element of the array corresponds to the y-intercept, and the second element corresponds to the slope. Scaling coefficients do not account for any custom scales that may be applied to the channel."	"attr1931.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64VtrAP	setChannelF64VtrAP	@NoReset

attribute: "AO.EnhancedImageRejectionEnable"
	"Analog Output:General Properties:Advanced:Enhanced Image Rejection Enable"
	bool	readwrite		25	2241
	"Specifies whether to enable the DAC interpolation filter. Disable the interpolation filter to improve DAC signal-to-noise ratio at the expense of degraded image rejection."	"attr2241.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "DI.InvertLines"
	"Digital Input:Invert Lines"
	bool	readwrite		25	793
	"Specifies whether to invert the lines in the channel. If you set this property to TRUE, the lines are at high logic when off and at low logic when on."	"attr793.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "DI.NumLines"
	"Digital Input:Number of Lines"
	uL	readonly		25	2178
	"Indicates the number of digital lines in the channel."	"attr2178.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	@NoReset

attribute: "DI.DigFltr.Enable"
	"Digital Input:Digital Filter:Enable"
	bool	readwrite		25	21D6
	"Specifies whether to enable the digital filter for the line(s) or port(s). You can enable the filter on a line-by-line basis. You do not have to enable the filter for all lines in a channel."	"attr21d6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "DI.DigFltr.MinPulseWidth"
	"Digital Input:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	21D7
	"Specifies in seconds the minimum pulse width the filter recognizes as a valid high or low state transition."	"attr21d7.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "DI.DigFltr.EnableBusMode"
	"Digital Input:Digital Filter:Enable Bus Mode"
	bool	readwrite		25	2EFE
	"Specifies whether to enable bus mode for digital filtering. If you set this property to TRUE, NI-DAQmx treats all lines that use common filtering settings as a bus. If any line in the bus has jitter, all lines in the bus hold state until the entire bus stabilizes, or until 2 times the minimum pulse width elapses. If you set this property to FALSE, NI-DAQmx filters all lines individually. Jitter in one line does not affect other lines."	"attr2efe.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "DI.DigFltr.TimebaseSrc"
	"Digital Input:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	2ED4
	"Specifies the terminal of the signal to use as the timebase of the digital filter."	"attr2ed4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "DI.DigFltr.TimebaseRate"
	"Digital Input:Digital Filter:Timebase:Rate"
	fD	readwrite		25	2ED5
	"Specifies in hertz the rate of the digital filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr2ed5.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "DI.DigSync.Enable"
	"Digital Input:Digital Synchronization:Enable"
	bool	readwrite		25	2ED6
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr2ed6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "DI.Tristate"
	"Digital Input:Tristate"
	bool	readwrite		25	1890
	"Specifies whether to tristate the lines in the channel. If you set this property to TRUE, NI-DAQmx tristates the lines in the channel. If you set this property to FALSE, NI-DAQmx does not modify the configuration of the lines even if the lines were previously tristated. Set this property to FALSE to read lines in other tasks or to read output-only lines."	"attr1890.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "DI.LogicFamily"
	"Digital Input:Logic Family"
	iL enum { "2.5 V"=14620, "3.3 V"=14621, "5.0 V"=14619 }	readwrite		25	296D
	"Specifies the logic family to use for acquisition. A logic family corresponds to voltage thresholds that are compatible with a group of voltage standards. Refer to the device documentation for information on the logic high and logic low voltages for these logic families."	"attr296d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "DI.DataXferMech"
	"Digital Input:General Properties:Advanced:Data Transfer and Memory:Data Transfer Mechanism"
	iL enum { "DMA"=10054, "Interrupts"=10204, "Programmed I/O"=10264, "USB Bulk"=12590 }	readwrite		25	2263
	"Specifies the data transfer mode for the device."	"attr2263.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "DI.DataXferReqCond"
	"Digital Input:General Properties:Advanced:Data Transfer and Memory:Data Transfer Request Condition"
	iL enum { "Onboard Memory More than Half Full"=10237, "Onboard Memory Not Empty"=10241, "Onboard Memory Custom Threshold"=12577, "When Acquisition Complete"=12546 }	readwrite		25	2264
	"Specifies under what condition to transfer data from the onboard memory of the device to the buffer."	"attr2264.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "DI.UsbXferReqSize"
	"Digital Input:General Properties:Advanced:Data Transfer and Memory:USB Transfer Request Size"
	uL	readwrite		25	2A90
	"Specifies the maximum size of a USB transfer request in bytes. Modify this value to affect performance under different combinations of operating system and device."	"attr2a90.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "DI.UsbXferReqCount"
	"Digital Input:General Properties:Advanced:Data Transfer and Memory:USB Transfer Request Count"
	uL	readwrite		25	3002
	"Specifies the maximum number of simultaneous USB transfers used to stream data. Modify this value to affect performance under different combinations of operating system and device."	"attr3002.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "DI.MemMapEnable"
	"Digital Input:General Properties:Advanced:Data Transfer and Memory:Memory Mapping for Programmed IO Enable"
	bool	readwrite		25	296A
	"Specifies for NI-DAQmx to map hardware registers to the memory space of the application, if possible. Normally, NI-DAQmx maps hardware registers to memory accessible only to the kernel. Mapping the registers to the memory space of the application increases performance. However, if the application accesses the memory space mapped to the registers, it can adversely affect the operation of the device and possibly result in a system crash."	"attr296a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "DI.AcquireOn"
	"Digital Input:General Properties:Advanced:Acquire On"
	iL enum { "Sample Clock Active Edge"=14617, "Sample Clock Inactive Edge"=14618 }	readwrite		25	2966
	"Specifies on which edge of the sample clock to acquire samples."	"attr2966.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "DO.OutputDriveType"
	"Digital Output:Output Drive Type"
	iL enum { "Active Drive"=12573, "Open Collector"=12574 }	readwrite		25	1137
	"Specifies the drive type for digital output channels."	"attr1137.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "DO.InvertLines"
	"Digital Output:Invert Lines"
	bool	readwrite		25	1133
	"Specifies whether to invert the lines in the channel. If you set this property to TRUE, the lines are at high logic when off and at low logic when on."	"attr1133.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "DO.NumLines"
	"Digital Output:Number of Lines"
	uL	readonly		25	2179
	"Indicates the number of digital lines in the channel."	"attr2179.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	@NoReset

attribute: "DO.Tristate"
	"Digital Output:Tristate"
	bool	readwrite		25	18F3
	"Specifies whether to stop driving the channel and set it to a high-impedance state. You must commit the task for this setting to take effect."	"attr18f3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "DO.LineStates.StartState"
	"Digital Output:Line States:Start State"
	iL enum { "High"=10192, "Low"=10214, "Tristate"=10310, "No Change"=10160 }	readwrite		25	2972
	"Specifies the state of the lines in a digital output task when the task starts."	"attr2972.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "DO.LineStates.PausedState"
	"Digital Output:Line States:Paused State"
	iL enum { "High"=10192, "Low"=10214, "Tristate"=10310, "No Change"=10160 }	readwrite		25	2967
	"Specifies the state of the lines in a digital output task when the task pauses."	"attr2967.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "DO.LineStates.DoneState"
	"Digital Output:Line States:Done State"
	iL enum { "High"=10192, "Low"=10214, "Tristate"=10310, "No Change"=10160 }	readwrite		25	2968
	"Specifies the state of the lines in a digital output task when the task completes execution."	"attr2968.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "DO.LogicFamily"
	"Digital Output:Logic Family"
	iL enum { "2.5 V"=14620, "3.3 V"=14621, "5.0 V"=14619 }	readwrite		25	296E
	"Specifies the logic family to use for generation. A logic family corresponds to voltage thresholds that are compatible with a group of voltage standards. Refer to the device documentation for information on the logic high and logic low voltages for these logic families."	"attr296e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "DO.Overcurrent.Limit"
	"Digital Output:Overcurrent:Current Limit"
	fD	readwrite		25	2A85
	"Specifies the current threshold in Amperes for the channel. A value of 0 means the channel observes no limit. Devices can monitor only a finite number of current thresholds simultaneously. If you attempt to monitor additional thresholds, NI-DAQmx returns an error."	"attr2a85.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "DO.Overcurrent.AutoReenable"
	"Digital Output:Overcurrent:Automatic Re-enable"
	bool	readwrite		25	2A86
	"Specifies whether to automatically reenable channels after they no longer exceed the current limit specified by DO.Overcurrent.Limit."	"attr2a86.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "DO.Overcurrent.ReenablePeriod"
	"Digital Output:Overcurrent:Re-enable Period"
	fD	readwrite		25	2A87
	"Specifies the delay in seconds between the time a channel no longer exceeds the current limit and the reactivation of that channel, if DO.Overcurrent.AutoReenable is TRUE."	"attr2a87.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "DO.UseOnlyOnBrdMem"
	"Digital Output:General Properties:Advanced:Data Transfer and Memory:Use Only Onboard Memory"
	bool	readwrite		25	2265
	"Specifies whether to write samples directly to the onboard memory of the device, bypassing the memory buffer. Generally, you cannot update onboard memory after you start the task. Onboard memory includes data FIFOs."	"attr2265.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "DO.DataXferMech"
	"Digital Output:General Properties:Advanced:Data Transfer and Memory:Data Transfer Mechanism"
	iL enum { "DMA"=10054, "Interrupts"=10204, "Programmed I/O"=10264, "USB Bulk"=12590 }	readwrite		25	2266
	"Specifies the data transfer mode for the device."	"attr2266.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "DO.DataXferReqCond"
	"Digital Output:General Properties:Advanced:Data Transfer and Memory:Data Transfer Request Condition"
	iL enum { "Onboard Memory Empty"=10235, "Onboard Memory Half Full or Less"=10239, "Onboard Memory Less than Full"=10242 }	readwrite		25	2267
	"Specifies under what condition to transfer data from the buffer to the onboard memory of the device."	"attr2267.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "DO.UsbXferReqSize"
	"Digital Output:General Properties:Advanced:Data Transfer and Memory:USB Transfer Request Size"
	uL	readwrite		25	2A91
	"Specifies the maximum size of a USB transfer request in bytes. Modify this value to affect performance under different combinations of operating system and device."	"attr2a91.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "DO.UsbXferReqCount"
	"Digital Output:General Properties:Advanced:Data Transfer and Memory:USB Transfer Request Count"
	uL	readwrite		25	3003
	"Specifies the maximum number of simultaneous USB transfers used to stream data. Modify this value to affect performance under different combinations of operating system and device."	"attr3003.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "DO.MemMapEnable"
	"Digital Output:General Properties:Advanced:Data Transfer and Memory:Memory Mapping for Programmed IO Enable"
	bool	readwrite		25	296B
	"Specifies for NI-DAQmx to map hardware registers to the memory space of the application, if possible. Normally, NI-DAQmx maps hardware registers to memory accessible only to the kernel. Mapping the registers to the memory space of the application increases performance. However, if the application accesses the memory space mapped to the registers, it can adversely affect the operation of the device and possibly result in a system crash."	"attr296b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "DO.GenerateOn"
	"Digital Output:General Properties:Advanced:Generate On"
	iL enum { "Sample Clock Active Edge"=14617, "Sample Clock Inactive Edge"=14618 }	readwrite		25	2969
	"Specifies on which edge of the sample clock to generate samples."	"attr2969.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Max"
	"Counter Input:Maximum Value"
	fD	readwrite		25	189C
	"Specifies the maximum value you expect to measure. This value is in the units you specify with a units property. When you query this property, it returns the coerced maximum value that the hardware can measure with the current settings."	"attr189c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Min"
	"Counter Input:Minimum Value"
	fD	readwrite		25	189D
	"Specifies the minimum value you expect to measure. This value is in the units you specify with a units property. When you query this property, it returns the coerced minimum value that the hardware can measure with the current settings."	"attr189d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.CustomScaleName"
	"Counter Input:Custom Scale Name"
	DAQScale	readwrite		25	189E
	"Specifies the name of a custom scale for the channel."	"attr189e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelWstringScaleAP	setChannelWstringScaleAP	resetChannelWstringScaleAP

attribute: "CI.MeasType"
	"Counter Input:Measurement Type"
	iL enum { "Count Edges"=10125, "Frequency"=10179, "Period"=10256, "Pulse Width"=10359, "Semi Period"=10289, "Pulse Frequency"=15864, "Pulse Time"=15865, "Pulse Ticks"=15866, "Duty Cycle"=16070, "Position:Angular Encoder"=10360, "Position:Linear Encoder"=10361, "Velocity:Angular Encoder"=16078, "Velocity:Linear Encoder"=16079, "Two Edge Separation"=10267, "GPS Timestamp"=10362 }	readonly		25	18A0
	"Indicates the measurement to take with the channel."	"attr18a0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	@NoReset

attribute: "CI.Freq.Units"
	"Counter Input:Frequency:Units"
	iL enum { "Hz"=10373, "Ticks"=10304, "From Custom Scale"=10065 }	readwrite		25	18A1
	"Specifies the units to use to return frequency measurements."	"attr18a1.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Freq.Term"
	"Counter Input:Frequency:Input:Terminal"
	DAQTerminal	readwrite		25	18A2
	"Specifies the input terminal of the signal to measure."	"attr18a2.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.Freq.TermCfg"
	"Counter Input:Frequency:Input:Terminal Configuration"
	iL enum { "Differential"=10106, "RSE"=10083 }	readwrite		25	3097
	"Specifies the input terminal configuration."	"attr3097.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Freq.LogicLvlBehavior"
	"Counter Input:Frequency:Input:Logic Level Behavior"
	iL enum { "Logic Level Pull-up"=16064, "None"=10230 }	readwrite		25	3098
	"Specifies the logic level behavior on the input line."	"attr3098.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Freq.ThreshVoltage"
	"Counter Input:Frequency:Input:Threshold Level"
	fD	readwrite		25	31AB
	"Specifies the voltage level at which to recognize waveform repetitions. Select a voltage level that occurs only once within the entire period of a waveform. You also can select a voltage that occurs only once while the voltage rises or falls."	"attr31ab.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Freq.Hyst"
	"Counter Input:Frequency:Input:Hysteresis"
	fD	readwrite		25	31AC
	"Specifies a hysteresis level to apply to CI.Freq.ThreshVoltage. When CI.Freq.StartingEdge is rising, the source signal must first fall below CI.Freq.ThreshVoltage minus the hysteresis before a rising edge is detected at CI.Freq.ThreshVoltage. When CI.Freq.StartingEdge is falling, the source signal must first rise above CI.Freq.ThreshVoltage plus the hysteresis before a falling edge is detected at CI.Freq.ThreshVoltage."	"attr31ac.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Freq.DigFltr.Enable"
	"Counter Input:Frequency:Input:Digital Filter:Enable"
	bool	readwrite		25	21E7
	"Specifies whether to apply the pulse width filter to the signal."	"attr21e7.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.Freq.DigFltr.MinPulseWidth"
	"Counter Input:Frequency:Input:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	21E8
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr21e8.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Freq.DigFltr.TimebaseSrc"
	"Counter Input:Frequency:Input:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	21E9
	"Specifies the input terminal of the signal to use as the timebase of the pulse width filter."	"attr21e9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.Freq.DigFltr.TimebaseRate"
	"Counter Input:Frequency:Input:Digital Filter:Timebase:Rate"
	fD	readwrite		25	21EA
	"Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr21ea.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Freq.DigSync.Enable"
	"Counter Input:Frequency:Input:Digital Synchronization:Enable"
	bool	readwrite		25	21EB
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr21eb.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.Freq.StartingEdge"
	"Counter Input:Frequency:Starting Edge"
	iL enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	799
	"Specifies between which edges to measure the frequency of the signal."	"attr799.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Freq.MeasMeth"
	"Counter Input:Frequency:Measurement Specifications:Method"
	iL enum { "Low Frequency with 1 Counter"=10105, "High Frequency with 2 Counters"=10157, "Large Range with 2 Counters"=10205, "Dynamic Averaging"=16065 }	readwrite		25	144
	"Specifies the method to use to measure the frequency of the signal."	"attr144.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Freq.EnableAveraging"
	"Counter Input:Frequency:Measurement Specifications:Enable Averaging"
	bool	readwrite		25	2ED0
	"Specifies whether to enable averaging mode for Sample Clock-timed frequency measurements."	"attr2ed0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.Freq.MeasTime"
	"Counter Input:Frequency:Measurement Specifications:High Frequency:Measurement Time"
	fD	readwrite		25	145
	"Specifies in seconds the length of time to measure the frequency of the signal if CI.Freq.MeasMeth is High Frequency with 2 Counters. Measurement accuracy increases with increased measurement time and with increased signal frequency. If you measure a high-frequency signal for too long, however, the count register could roll over, which results in an incorrect measurement."	"attr145.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Freq.Div"
	"Counter Input:Frequency:Measurement Specifications:Large Range:Divisor"
	uL	readwrite		25	147
	"Specifies the value by which to divide the input signal if  CI.Freq.MeasMeth is Large Range with 2 Counters. The larger the divisor, the more accurate the measurement. However, too large a value could cause the count register to roll over, which results in an incorrect measurement."	"attr147.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "CI.Period.Units"
	"Counter Input:Period:Units"
	iL enum { "Seconds"=10364, "Ticks"=10304, "From Custom Scale"=10065 }	readwrite		25	18A3
	"Specifies the unit to use to return period measurements."	"attr18a3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Period.Term"
	"Counter Input:Period:Input:Terminal"
	DAQTerminal	readwrite		25	18A4
	"Specifies the input terminal of the signal to measure."	"attr18a4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.Period.TermCfg"
	"Counter Input:Period:Input:Terminal Configuration"
	iL enum { "Differential"=10106, "RSE"=10083 }	readwrite		25	3099
	"Specifies the input terminal configuration."	"attr3099.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Period.LogicLvlBehavior"
	"Counter Input:Period:Input:Logic Level Behavior"
	iL enum { "Logic Level Pull-up"=16064, "None"=10230 }	readwrite		25	309A
	"Specifies the logic level behavior on the input line."	"attr309a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Period.ThreshVoltage"
	"Counter Input:Period:Input:Threshold Level"
	fD	readwrite		25	31AD
	"Specifies the voltage level at which to recognize waveform repetitions. Select a voltage level that occurs only once within the entire period of a waveform. You also can select a voltage that occurs only once while the voltage rises or falls."	"attr31ad.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Period.Hyst"
	"Counter Input:Period:Input:Hysteresis"
	fD	readwrite		25	31AE
	"Specifies a hysteresis level to apply to CI.Period.ThreshVoltage. When CI.Period.StartingEdge is rising, the source signal must first fall below CI.Period.ThreshVoltage minus the hysteresis before a rising edge is detected at CI.Period.ThreshVoltage. When CI.Period.StartingEdge is falling, the source signal must first rise above CI.Period.ThreshVoltage plus the hysteresis before a falling edge is detected at CI.Period.ThreshVoltage."	"attr31ae.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Period.DigFltr.Enable"
	"Counter Input:Period:Input:Digital Filter:Enable"
	bool	readwrite		25	21EC
	"Specifies whether to apply the pulse width filter to the signal."	"attr21ec.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.Period.DigFltr.MinPulseWidth"
	"Counter Input:Period:Input:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	21ED
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr21ed.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Period.DigFltr.TimebaseSrc"
	"Counter Input:Period:Input:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	21EE
	"Specifies the input terminal of the signal to use as the timebase of the pulse width filter."	"attr21ee.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.Period.DigFltr.TimebaseRate"
	"Counter Input:Period:Input:Digital Filter:Timebase:Rate"
	fD	readwrite		25	21EF
	"Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr21ef.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Period.DigSync.Enable"
	"Counter Input:Period:Input:Digital Synchronization:Enable"
	bool	readwrite		25	21F0
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr21f0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.Period.StartingEdge"
	"Counter Input:Period:Starting Edge"
	iL enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	852
	"Specifies between which edges to measure the period of the signal."	"attr852.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Period.MeasMeth"
	"Counter Input:Period:Measurement Specifications:Method"
	iL enum { "Low Frequency with 1 Counter"=10105, "High Frequency with 2 Counters"=10157, "Large Range with 2 Counters"=10205, "Dynamic Averaging"=16065 }	readwrite		25	192C
	"Specifies the method to use to measure the period of the signal."	"attr192c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Period.EnableAveraging"
	"Counter Input:Period:Measurement Specifications:Enable Averaging"
	bool	readwrite		25	2ED1
	"Specifies whether to enable averaging mode for Sample Clock-timed period measurements."	"attr2ed1.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.Period.MeasTime"
	"Counter Input:Period:Measurement Specifications:High Frequency:Measurement Time"
	fD	readwrite		25	192D
	"Specifies in seconds the length of time to measure the period of the signal if CI.Period.MeasMeth is High Frequency with 2 Counters. Measurement accuracy increases with increased measurement time and with increased signal frequency. If you measure a high-frequency signal for too long, however, the count register could roll over, which results in an incorrect measurement."	"attr192d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Period.Div"
	"Counter Input:Period:Measurement Specifications:Large Range:Divisor"
	uL	readwrite		25	192E
	"Specifies the value by which to divide the input signal if CI.Period.MeasMeth is Large Range with 2 Counters. The larger the divisor, the more accurate the measurement. However, too large a value could cause the count register to roll over, which results in an incorrect measurement."	"attr192e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "CI.CountEdges.Term"
	"Counter Input:Count Edges:Input:Terminal"
	DAQTerminal	readwrite		25	18C7
	"Specifies the input terminal of the signal to measure."	"attr18c7.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.CountEdges.TermCfg"
	"Counter Input:Count Edges:Input:Terminal Configuration"
	iL enum { "Differential"=10106, "RSE"=10083 }	readwrite		25	309B
	"Specifies the input terminal configuration."	"attr309b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.CountEdges.LogicLvlBehavior"
	"Counter Input:Count Edges:Input:Logic Level Behavior"
	iL enum { "Logic Level Pull-up"=16064, "None"=10230 }	readwrite		25	309C
	"Specifies the logic level behavior on the input line."	"attr309c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.CountEdges.ThreshVoltage"
	"Counter Input:Count Edges:Input:Threshold Level"
	fD	readwrite		25	31AF
	"Specifies the voltage level at which to recognize waveform repetitions. Select a voltage level that occurs only once within the entire period of a waveform. You also can select a voltage that occurs only once while the voltage rises or falls."	"attr31af.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.CountEdges.Hyst"
	"Counter Input:Count Edges:Input:Hysteresis"
	fD	readwrite		25	31B0
	"Specifies a hysteresis level to apply to CI.CountEdges.ThreshVoltage. When CI.CountEdges.ActiveEdge is rising, the source signal must first fall below CI.CountEdges.ThreshVoltage minus the hysteresis before a rising edge is detected at CI.CountEdges.ThreshVoltage. When CI.CountEdges.ActiveEdge is falling, the source signal must first rise above CI.CountEdges.ThreshVoltage plus the hysteresis before a falling edge is detected at CI.CountEdges.ThreshVoltage."	"attr31b0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.CountEdges.DigFltr.Enable"
	"Counter Input:Count Edges:Input:Digital Filter:Enable"
	bool	readwrite		25	21F6
	"Specifies whether to apply the pulse width filter to the signal."	"attr21f6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.CountEdges.DigFltr.MinPulseWidth"
	"Counter Input:Count Edges:Input:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	21F7
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr21f7.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.CountEdges.DigFltr.TimebaseSrc"
	"Counter Input:Count Edges:Input:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	21F8
	"Specifies the input terminal of the signal to use as the timebase of the pulse width filter."	"attr21f8.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.CountEdges.DigFltr.TimebaseRate"
	"Counter Input:Count Edges:Input:Digital Filter:Timebase:Rate"
	fD	readwrite		25	21F9
	"Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr21f9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.CountEdges.DigSync.Enable"
	"Counter Input:Count Edges:Input:Digital Synchronization:Enable"
	bool	readwrite		25	21FA
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr21fa.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.CountEdges.Dir"
	"Counter Input:Count Edges:Count Direction:Direction"
	iL enum { "Count Up"=10128, "Count Down"=10124, "Externally Controlled"=10326 }	readwrite		25	696
	"Specifies whether to increment or decrement the counter on each edge."	"attr696.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.CountEdges.DirTerm"
	"Counter Input:Count Edges:Count Direction:Input:Terminal"
	DAQTerminal	readwrite		25	21E1
	"Specifies the source terminal of the digital signal that controls the count direction if CI.CountEdges.Dir is Externally Controlled."	"attr21e1.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.CountEdges.CountDir.TermCfg"
	"Counter Input:Count Edges:Count Direction:Input:Terminal Configuration"
	iL enum { "Differential"=10106, "RSE"=10083 }	readwrite		25	309D
	"Specifies the input terminal configuration."	"attr309d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.CountEdges.CountDir.LogicLvlBehavior"
	"Counter Input:Count Edges:Count Direction:Input:Logic Level Behavior"
	iL enum { "Logic Level Pull-up"=16064, "None"=10230 }	readwrite		25	309E
	"Specifies the logic level behavior on the count reset line."	"attr309e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.CountEdges.CountDir.ThreshVoltage"
	"Counter Input:Count Edges:Count Direction:Input:Threshold Level"
	fD	readwrite		25	31B1
	"Specifies the voltage level applied to the Count Direction terminal. When the signal is above this threshold, the counter counts up. When the signal is below this threshold, the counter counts down."	"attr31b1.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.CountEdges.CountDir.Hyst"
	"Counter Input:Count Edges:Count Direction:Input:Hysteresis"
	fD	readwrite		25	31B2
	"Specifies a hysteresis level applied to the CI.CountEdges.CountDir.ThreshVoltage. The source signal must fall below CI.CountEdges.CountDir.ThreshVoltage minus the hysteresis before a change in count direction occurs."	"attr31b2.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.CountEdges.CountDir.DigFltr.Enable"
	"Counter Input:Count Edges:Count Direction:Input:Digital Filter:Enable"
	bool	readwrite		25	21F1
	"Specifies whether to apply the pulse width filter to the signal."	"attr21f1.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.CountEdges.CountDir.DigFltr.MinPulseWidth"
	"Counter Input:Count Edges:Count Direction:Input:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	21F2
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr21f2.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.CountEdges.CountDir.DigFltr.TimebaseSrc"
	"Counter Input:Count Edges:Count Direction:Input:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	21F3
	"Specifies the input terminal of the signal to use as the timebase of the pulse width filter."	"attr21f3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.CountEdges.CountDir.DigFltr.TimebaseRate"
	"Counter Input:Count Edges:Count Direction:Input:Digital Filter:Timebase:Rate"
	fD	readwrite		25	21F4
	"Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr21f4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.CountEdges.CountDir.DigSync.Enable"
	"Counter Input:Count Edges:Count Direction:Input:Digital Synchronization:Enable"
	bool	readwrite		25	21F5
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr21f5.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.CountEdges.InitialCnt"
	"Counter Input:Count Edges:Initial Count"
	uL	readwrite		25	698
	"Specifies the starting value from which to count."	"attr698.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "CI.CountEdges.ActiveEdge"
	"Counter Input:Count Edges:Active Edge"
	iL enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	697
	"Specifies on which edges to increment or decrement the counter."	"attr697.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.CountEdges.CountReset.Enable"
	"Counter Input:Count Edges:Count Reset:Enable"
	bool	readwrite		25	2FAF
	"Specifies whether to reset the count on the active edge specified with CI.CountEdges.CountReset.Term."	"attr2faf.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.CountEdges.CountReset.ResetCnt"
	"Counter Input:Count Edges:Count Reset:Reset Count"
	uL	readwrite		25	2FB0
	"Specifies the value to reset the count to."	"attr2fb0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "CI.CountEdges.CountReset.Term"
	"Counter Input:Count Edges:Count Reset:Input:Terminal"
	DAQTerminal	readwrite		25	2FB1
	"Specifies the input terminal of the signal to reset the count."	"attr2fb1.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.CountEdges.CountReset.TermCfg"
	"Counter Input:Count Edges:Count Reset:Input:Terminal Configuration"
	iL enum { "Differential"=10106, "RSE"=10083 }	readwrite		25	309F
	"Specifies the input terminal configuration."	"attr309f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.CountEdges.CountReset.LogicLvlBehavior"
	"Counter Input:Count Edges:Count Reset:Input:Logic Level Behavior"
	iL enum { "Logic Level Pull-up"=16064, "None"=10230 }	readwrite		25	30A0
	"Specifies the logic level behavior on the count reset line."	"attr30a0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.CountEdges.CountReset.ThreshVoltage"
	"Counter Input:Count Edges:Count Reset:Input:Threshold Level"
	fD	readwrite		25	31B3
	"Specifies the voltage level at which to recognize the counter reset event."	"attr31b3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.CountEdges.CountReset.Hyst"
	"Counter Input:Count Edges:Count Reset:Input:Hysteresis"
	fD	readwrite		25	31B4
	"Specifies a hysteresis level applied to CI.CountEdges.CountReset.ThreshVoltage. When CI.CountEdges.CountReset.ActiveEdge is rising, the source signal must first fall below CI.CountEdges.CountReset.ThreshVoltage minus the hysteresis before a rising edge is detected at CI.CountEdges.CountReset.ThreshVoltage. When CI.CountEdges.CountReset.ActiveEdge is falling, the source signal must first rise above CI.CountEdges.CountReset.ThreshVoltage plus the hysteresis before a falling edge is detected at CI.CountEdges.CountReset.ThreshVoltage."	"attr31b4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.CountEdges.CountReset.DigFltr.Enable"
	"Counter Input:Count Edges:Count Reset:Input:Digital Filter:Enable"
	bool	readwrite		25	2FB3
	"Specifies whether to apply the pulse width filter to the signal."	"attr2fb3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.CountEdges.CountReset.DigFltr.MinPulseWidth"
	"Counter Input:Count Edges:Count Reset:Input:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	2FB4
	"Specifies the minimum pulse width the filter recognizes."	"attr2fb4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.CountEdges.CountReset.DigFltr.TimebaseSrc"
	"Counter Input:Count Edges:Count Reset:Input:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	2FB5
	"Specifies the input of the signal to use as the timebase of the pulse width filter."	"attr2fb5.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.CountEdges.CountReset.DigFltr.TimebaseRate"
	"Counter Input:Count Edges:Count Reset:Input:Digital Filter:Timebase:Rate"
	fD	readwrite		25	2FB6
	"Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr2fb6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.CountEdges.CountReset.DigSync.Enable"
	"Counter Input:Count Edges:Count Reset:Input:Digital Synchronization:Enable"
	bool	readwrite		25	2FB7
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr2fb7.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.CountEdges.CountReset.ActiveEdge"
	"Counter Input:Count Edges:Count Reset:Active Edge"
	iL enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	2FB2
	"Specifies on which edge of the signal to reset the count."	"attr2fb2.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.CountEdges.Gate.Enable"
	"Counter Input:Count Edges:Gate:Enable"
	bool	readwrite		25	30ED
	"Specifies whether to enable the functionality to gate the counter input signal for a count edges measurement."	"attr30ed.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.CountEdges.Gate.Term"
	"Counter Input:Count Edges:Gate:Input:Terminal"
	DAQTerminal	readwrite		25	30EE
	"Specifies the gate terminal."	"attr30ee.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.CountEdges.Gate.TermCfg"
	"Counter Input:Count Edges:Gate:Input:Terminal Configuration"
	iL enum { "Differential"=10106, "RSE"=10083 }	readwrite		25	30EF
	"Specifies the gate terminal configuration."	"attr30ef.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.CountEdges.Gate.LogicLvlBehavior"
	"Counter Input:Count Edges:Gate:Input:Logic Level Behavior"
	iL enum { "Logic Level Pull-up"=16064, "None"=10230 }	readwrite		25	30F0
	"Specifies the logic level behavior on the gate input line."	"attr30f0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.CountEdges.Gate.ThreshVoltage"
	"Counter Input:Count Edges:Gate:Input:Threshold Level"
	fD	readwrite		25	31B5
	"Specifies the voltage level at which to recognize the counter gate signal."	"attr31b5.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.CountEdges.Gate.Hyst"
	"Counter Input:Count Edges:Gate:Input:Hysteresis"
	fD	readwrite		25	31B6
	"Specifies a hysteresis level applied to the CI.CountEdges.Gate.ThreshVoltage. When CI.CountEdges.Gate.When is High, the source signal must fall below CI.CountEdges.Gate.ThreshVoltage minus the hysteresis before the counter resumes counting. When CI.CountEdges.Gate.When is Low, the source signal must rise above CI.CountEdges.Gate.ThreshVoltage plus the hysteresis before the counter resumes counting."	"attr31b6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.CountEdges.Gate.DigFltr.Enable"
	"Counter Input:Count Edges:Gate:Input:Digital Filter:Enable"
	bool	readwrite		25	30F1
	"Specifies whether to apply the pulse width filter to the gate input signal."	"attr30f1.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.CountEdges.Gate.DigFltr.MinPulseWidth"
	"Counter Input:Count Edges:Gate:Input:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	30F2
	"Specifies in seconds the minimum pulse width the digital filter recognizes."	"attr30f2.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.CountEdges.Gate.DigFltr.TimebaseSrc"
	"Counter Input:Count Edges:Gate:Input:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	30F3
	"Specifies the input terminal of the signal to use as the timebase of the pulse width filter."	"attr30f3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.CountEdges.Gate..DigFltr.TimebaseRate"
	"Counter Input:Count Edges:Gate:Input:Digital Filter:Timebase:Rate"
	fD	readwrite		25	30F4
	"Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr30f4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.CountEdges.Gate.When"
	"Counter Input:Count Edges:Gate:Pause When"
	iL enum { "High"=10192, "Low"=10214 }	readwrite		25	30F5
	"Specifies whether the counter gates input pulses while the signal is high or low."	"attr30f5.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.DutyCycle.Term"
	"Counter Input:Duty Cycle:Input:Terminal"
	DAQTerminal	readwrite		25	308D
	"Specifies the input terminal of the signal to measure."	"attr308d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.DutyCycle.TermCfg"
	"Counter Input:Duty Cycle:Input:Terminal Configuration"
	iL enum { "Differential"=10106, "RSE"=10083 }	readwrite		25	30A1
	"Specifies the input terminal configuration."	"attr30a1.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.DutyCycle.LogicLvlBehavior"
	"Counter Input:Duty Cycle:Input:Logic Level Behavior"
	iL enum { "Logic Level Pull-up"=16064, "None"=10230 }	readwrite		25	30A2
	"Specifies the logic level behavior on the input line."	"attr30a2.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.DutyCycle.DigFltr.Enable"
	"Counter Input:Duty Cycle:Input:Digital Filter:Enable"
	bool	readwrite		25	308E
	"Specifies whether to apply the pulse width filter to the signal."	"attr308e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.DutyCycle.DigFltr.MinPulseWidth"
	"Counter Input:Duty Cycle:Input:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	308F
	"Specifies in seconds the minimum pulse width the digital filter recognizes."	"attr308f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.DutyCycle.DigFltr.TimebaseSrc"
	"Counter Input:Duty Cycle:Input:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	3090
	"Specifies the input terminal of the signal to use as the timebase of the pulse width filter."	"attr3090.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.DutyCycle.DigFltr.TimebaseRate"
	"Counter Input:Duty Cycle:Input:Digital Filter:Timebase:Rate"
	fD	readwrite		25	3091
	"Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr3091.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.DutyCycle.StartingEdge"
	"Counter Input:Duty Cycle:StartingEdge"
	iL enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	3092
	"Specifies which edge of the input signal to begin the duty cycle measurement."	"attr3092.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.AngEncoder.Units"
	"Counter Input:Position:Angular Encoder:Units"
	iL enum { "Degrees"=10146, "Radians"=10273, "Ticks"=10304, "From Custom Scale"=10065 }	readwrite		25	18A6
	"Specifies the units to use to return angular position measurements from the channel."	"attr18a6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.AngEncoder.PulsesPerRev"
	"Counter Input:Position:Angular Encoder:Pulses Per Revolution"
	uL	readwrite		25	875
	"Specifies the number of pulses the encoder generates per revolution. This value is the number of pulses on either signal A or signal B, not the total number of pulses on both signal A and signal B."	"attr875.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "CI.AngEncoder.InitialAngle"
	"Counter Input:Position:Angular Encoder:Initial Angle"
	fD	readwrite		25	881
	"Specifies the starting angle of the encoder. This value is in the units you specify with CI.AngEncoder.Units."	"attr881.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.LinEncoder.Units"
	"Counter Input:Position:Linear Encoder:Units"
	iL enum { "Meters"=10219, "Inches"=10379, "Ticks"=10304, "From Custom Scale"=10065 }	readwrite		25	18A9
	"Specifies the units to use to return linear encoder measurements from the channel."	"attr18a9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.LinEncoder.DistPerPulse"
	"Counter Input:Position:Linear Encoder:Distance Per Pulse"
	fD	readwrite		25	911
	"Specifies the distance to measure for each pulse the encoder generates on signal A or signal B. This value is in the units you specify with CI.LinEncoder.Units."	"attr911.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.LinEncoder.InitialPos"
	"Counter Input:Position:Linear Encoder:Initial Position"
	fD	readwrite		25	915
	"Specifies the position of the encoder when the measurement begins. This value is in the units you specify with CI.LinEncoder.Units."	"attr915.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Encoder.DecodingType"
	"Counter Input:Position:Decoding Type"
	iL enum { "X1"=10090, "X2"=10091, "X4"=10092, "Two Pulse Counting"=10313 }	readwrite		25	21E6
	"Specifies how to count and interpret the pulses the encoder generates on signal A and signal B. X1, X2, and X4 are valid for quadrature encoders only. Two Pulse Counting is valid for two-pulse encoders only."	"attr21e6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Encoder.AInputTerm"
	"Counter Input:Position:A Input:Terminal"
	DAQTerminal	readwrite		25	219D
	"Specifies the terminal to which signal A is connected."	"attr219d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.Encoder.AInput.TermCfg"
	"Counter Input:Position:A Input:Terminal Configuration"
	iL enum { "Differential"=10106, "RSE"=10083 }	readwrite		25	30A3
	"Specifies the input terminal configuration."	"attr30a3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Encoder.AInput.LogicLvlBehavior"
	"Counter Input:Position:A Input:Logic Level Behavior"
	iL enum { "Logic Level Pull-up"=16064, "None"=10230 }	readwrite		25	30A4
	"Specifies the logic level behavior on the input line."	"attr30a4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Encoder.AInput.DigFltr.Enable"
	"Counter Input:Position:A Input:Digital Filter:Enable"
	bool	readwrite		25	21FB
	"Specifies whether to apply the pulse width filter to the signal."	"attr21fb.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.Encoder.AInput.DigFltr.MinPulseWidth"
	"Counter Input:Position:A Input:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	21FC
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr21fc.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Encoder.AInput.DigFltr.TimebaseSrc"
	"Counter Input:Position:A Input:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	21FD
	"Specifies the input terminal of the signal to use as the timebase of the pulse width filter."	"attr21fd.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.Encoder.AInput.DigFltr.TimebaseRate"
	"Counter Input:Position:A Input:Digital Filter:Timebase:Rate"
	fD	readwrite		25	21FE
	"Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr21fe.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Encoder.AInput.DigSync.Enable"
	"Counter Input:Position:A Input:Digital Synchronization:Enable"
	bool	readwrite		25	21FF
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr21ff.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.Encoder.BInputTerm"
	"Counter Input:Position:B Input:Terminal"
	DAQTerminal	readwrite		25	219E
	"Specifies the terminal to which signal B is connected."	"attr219e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.Encoder.BInput.TermCfg"
	"Counter Input:Position:B Input:Terminal Configuration"
	iL enum { "Differential"=10106, "RSE"=10083 }	readwrite		25	30A5
	"Specifies the input terminal configuration."	"attr30a5.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Encoder.BInput.LogicLvlBehavior"
	"Counter Input:Position:B Input:Logic Level Behavior"
	iL enum { "Logic Level Pull-up"=16064, "None"=10230 }	readwrite		25	30A6
	"Specifies the logic level behavior on the input line."	"attr30a6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Encoder.BInput.DigFltr.Enable"
	"Counter Input:Position:B Input:Digital Filter:Enable"
	bool	readwrite		25	2200
	"Specifies whether to apply the pulse width filter to the signal."	"attr2200.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.Encoder.BInput.DigFltr.MinPulseWidth"
	"Counter Input:Position:B Input:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	2201
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr2201.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Encoder.BInput.DigFltr.TimebaseSrc"
	"Counter Input:Position:B Input:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	2202
	"Specifies the input terminal of the signal to use as the timebase of the pulse width filter."	"attr2202.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.Encoder.BInput.DigFltr.TimebaseRate"
	"Counter Input:Position:B Input:Digital Filter:Timebase:Rate"
	fD	readwrite		25	2203
	"Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr2203.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Encoder.BInput.DigSync.Enable"
	"Counter Input:Position:B Input:Digital Synchronization:Enable"
	bool	readwrite		25	2204
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr2204.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.Encoder.ZInputTerm"
	"Counter Input:Position:Z Input:Terminal"
	DAQTerminal	readwrite		25	219F
	"Specifies the terminal to which signal Z is connected."	"attr219f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.Encoder.ZInput.TermCfg"
	"Counter Input:Position:Z Input:Terminal Configuration"
	iL enum { "Differential"=10106, "RSE"=10083 }	readwrite		25	30A7
	"Specifies the input terminal configuration."	"attr30a7.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Encoder.ZInput.LogicLvlBehavior"
	"Counter Input:Position:Z Input:Logic Level Behavior"
	iL enum { "Logic Level Pull-up"=16064, "None"=10230 }	readwrite		25	30A8
	"Specifies the logic level behavior on the input line."	"attr30a8.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Encoder.ZInput.DigFltr.Enable"
	"Counter Input:Position:Z Input:Digital Filter:Enable"
	bool	readwrite		25	2205
	"Specifies whether to apply the pulse width filter to the signal."	"attr2205.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.Encoder.ZInput.DigFltr.MinPulseWidth"
	"Counter Input:Position:Z Input:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	2206
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr2206.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Encoder.ZInput.DigFltr.TimebaseSrc"
	"Counter Input:Position:Z Input:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	2207
	"Specifies the input terminal of the signal to use as the timebase of the pulse width filter."	"attr2207.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.Encoder.ZInput.DigFltr.TimebaseRate"
	"Counter Input:Position:Z Input:Digital Filter:Timebase:Rate"
	fD	readwrite		25	2208
	"Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr2208.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Encoder.ZInput.DigSync.Enable"
	"Counter Input:Position:Z Input:Digital Synchronization:Enable"
	bool	readwrite		25	2209
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr2209.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.Encoder.ZIndexEnable"
	"Counter Input:Position:Z Index Enable"
	bool	readwrite		25	890
	"Specifies whether to use Z indexing for the channel."	"attr890.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.Encoder.ZIndexVal"
	"Counter Input:Position:Z Index Value"
	fD	readwrite		25	888
	"Specifies the value to which to reset the measurement when signal Z is high and signal A and signal B are at the states you specify with CI.Encoder.ZIndexPhase. Specify this value in the units of the measurement."	"attr888.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Encoder.ZIndexPhase"
	"Counter Input:Position:Z Index Phase"
	iL enum { "A High B High"=10040, "A High B Low"=10041, "A Low B High"=10042, "A Low B Low"=10043 }	readwrite		25	889
	"Specifies the states at which signal A and signal B must be while signal Z is high for NI-DAQmx to reset the measurement. If signal Z is never high while signal A and signal B are high, for example, you must choose a phase other than A High B High."	"attr889.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.PulseWidth.Units"
	"Counter Input:Pulse Width:Units"
	iL enum { "Seconds"=10364, "Ticks"=10304, "From Custom Scale"=10065 }	readwrite		25	823
	"Specifies the units to use to return pulse width measurements."	"attr823.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.PulseWidth.Term"
	"Counter Input:Pulse Width:Input:Terminal"
	DAQTerminal	readwrite		25	18AA
	"Specifies the input terminal of the signal to measure."	"attr18aa.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.PulseWidth.TermCfg"
	"Counter Input:Pulse Width:Input:Terminal Configuration"
	iL enum { "Differential"=10106, "RSE"=10083 }	readwrite		25	30A9
	"Specifies the input terminal configuration."	"attr30a9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.PulseWidth.LogicLvlBehavior"
	"Counter Input:Pulse Width:Input:Logic Level Behavior"
	iL enum { "Logic Level Pull-up"=16064, "None"=10230 }	readwrite		25	30AA
	"Specifies the logic level behavior on the input line."	"attr30aa.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.PulseWidth.DigFltr.Enable"
	"Counter Input:Pulse Width:Input:Digital Filter:Enable"
	bool	readwrite		25	220A
	"Specifies whether to apply the pulse width filter to the signal."	"attr220a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.PulseWidth.DigFltr.MinPulseWidth"
	"Counter Input:Pulse Width:Input:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	220B
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr220b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.PulseWidth.DigFltr.TimebaseSrc"
	"Counter Input:Pulse Width:Input:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	220C
	"Specifies the input terminal of the signal to use as the timebase of the pulse width filter."	"attr220c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.PulseWidth.DigFltr.TimebaseRate"
	"Counter Input:Pulse Width:Input:Digital Filter:Timebase:Rate"
	fD	readwrite		25	220D
	"Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr220d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.PulseWidth.DigSync.Enable"
	"Counter Input:Pulse Width:Input:Digital Synchronization:Enable"
	bool	readwrite		25	220E
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr220e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.PulseWidth.StartingEdge"
	"Counter Input:Pulse Width:Starting Edge"
	iL enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	825
	"Specifies on which edge of the input signal to begin each pulse width measurement."	"attr825.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Timestamp.Units"
	"Counter Input:Timestamp:Units"
	iL enum { "Seconds"=10364, "From Custom Scale"=10065 }	readwrite		25	22B3
	"Specifies the units to use to return timestamp measurements."	"attr22b3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Timestamp.InitialSeconds"
	"Counter Input:Timestamp:Initial Seconds"
	uL	readwrite		25	22B4
	"Specifies the number of seconds that elapsed since the beginning of the current year. This value is ignored if  CI.GPS.SyncMethod is IRIG-B."	"attr22b4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "CI.GPS.SyncMethod"
	"Counter Input:Timestamp:GPS:Synchronization Method"
	iL enum { "IRIG-B"=10070, "PPS"=10080, "None"=10230 }	readwrite		25	1092
	"Specifies the method to use to synchronize the counter to a GPS receiver."	"attr1092.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.GPS.SyncSrc"
	"Counter Input:Timestamp:GPS:Synchronization Source"
	DAQTerminal	readwrite		25	1093
	"Specifies the terminal to which the GPS synchronization signal is connected."	"attr1093.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.Velocity.AngEncoder.Units"
	"Counter Input:Velocity:Angular Encoder:Units"
	iL enum { "RPM"=16080, "Radians/s"=16081, "Degrees/s"=16082, "From Custom Scale"=10065 }	readwrite		25	30D8
	"Specifies the units to use to return angular velocity counter measurements."	"attr30d8.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Velocity.AngEncoder.PulsesPerRev"
	"Counter Input:Velocity:Angular Encoder:Pulses Per Revolution"
	uL	readwrite		25	30D9
	"Specifies the number of pulses the encoder generates per revolution. This value is the number of pulses on either signal A or signal B, not the total number of pulses on both signal A and signal B."	"attr30d9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "CI.Velocity.LinEncoder.Units"
	"Counter Input:Velocity:Linear Encoder:Units"
	iL enum { "m/s"=15959, "in/s"=15960, "From Custom Scale"=10065 }	readwrite		25	30DA
	"Specifies the units to use to return linear encoder velocity measurements from the channel."	"attr30da.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Velocity.LinEncoder.DistPerPulse"
	"Counter Input:Velocity:Linear Encoder:Distance per Pulse"
	fD	readwrite		25	30DB
	"Specifies the distance to measure for each pulse the encoder generates on signal A or signal B. This value is in the units you specify in CI.Velocity.LinEncoder.DistUnits."	"attr30db.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Velocity.Encoder.DecodingType"
	"Counter Input:Velocity:Decoding Type"
	iL enum { "X1"=10090, "X2"=10091, "X4"=10092, "Two Pulse Counting"=10313 }	readwrite		25	30DC
	"Specifies how to count and interpret the pulses the encoder generates on signal A and signal B. X1, X2, and X4 are valid for quadrature encoders only. Two Pulse Counting is valid for two-pulse encoders only."	"attr30dc.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Velocity.AInput.Term"
	"Counter Input:Velocity:A Input:Terminal"
	DAQTerminal	readwrite		25	30DD
	"Specifies the terminal to which signal A is connected."	"attr30dd.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.Velocity.AInput.TermCfg"
	"Counter Input:Velocity:A Input:Terminal Configuration"
	iL enum { "Differential"=10106, "RSE"=10083 }	readwrite		25	30DE
	"Specifies the input terminal configuration."	"attr30de.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Velocity.AInput.LogicLvlBehavior"
	"Counter Input:Velocity:A Input:Logic Level Behavior"
	iL enum { "Logic Level Pull-up"=16064, "None"=10230 }	readwrite		25	30DF
	"Specifies the logic level behavior of the input terminal."	"attr30df.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Velocity.AInput.DigFltr.Enable"
	"Counter Input:Velocity:A Input:Digital Filter:Enable"
	bool	readwrite		25	30E0
	"Specifies whether to apply the pulse width filter to the signal."	"attr30e0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.Velocity.AInput.DigFltr.MinPulseWidth"
	"Counter Input:Velocity:A Input:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	30E1
	"Specifies in seconds the minimum pulse width the digital filter recognizes."	"attr30e1.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Velocity.AInput.DigFltr.TimebaseSrc"
	"Counter Input:Velocity:A Input:Digital Filter:Timebase Source"
	DAQTerminal	readwrite		25	30E2
	"Specifies the input terminal of the signal to use as the timebase of the pulse width filter."	"attr30e2.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.Velocity.AInput.DigFltr.TimebaseRate"
	"Counter Input:Velocity:A Input:Digital Filter:Timebase Rate"
	fD	readwrite		25	30E3
	"Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr30e3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Velocity.BInput.Term"
	"Counter Input:Velocity:B Input:Terminal"
	DAQTerminal	readwrite		25	30E4
	"Specifies the terminal to which signal B is connected."	"attr30e4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.Velocity.BInput.TermCfg"
	"Counter Input:Velocity:B Input:Terminal Configuration"
	iL enum { "Differential"=10106, "RSE"=10083 }	readwrite		25	30E5
	"Specifies the input terminal configuration."	"attr30e5.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Velocity.BInput.LogicLvlBehavior"
	"Counter Input:Velocity:B Input:Logic Level Behavior"
	iL enum { "Logic Level Pull-up"=16064, "None"=10230 }	readwrite		25	30E6
	"Specifies the logic level behavior of the input terminal."	"attr30e6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Velocity.BInput.DigFltr.Enable"
	"Counter Input:Velocity:B Input:Digital Filter:Enable"
	bool	readwrite		25	30E7
	"Specifies whether to apply the pulse width filter to the signal."	"attr30e7.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.Velocity.BInput.DigFltr.MinPulseWidth"
	"Counter Input:Velocity:B Input:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	30E8
	"Specifies in seconds the minimum pulse width the digital filter recognizes."	"attr30e8.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Velocity.BInput.DigFltr.TimebaseSrc"
	"Counter Input:Velocity:B Input:Digital Filter:Timebase Source"
	DAQTerminal	readwrite		25	30E9
	"Specifies the input terminal of the signal to use as the timebase of the pulse width filter."	"attr30e9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.Velocity.BInput.DigFltr.TimebaseRate"
	"Counter Input:Velocity:B Input:Digital Filter:Timebase Rate"
	fD	readwrite		25	30EA
	"Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr30ea.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Velocity.MeasTime"
	"Counter Input:Velocity:Advanced:Measurement Time"
	fD	readwrite		25	30EB
	"Specifies in seconds the length of time to measure the velocity of the signal."	"attr30eb.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Velocity.Div"
	"Counter Input:Velocity:Advanced:Divisor"
	uL	readwrite		25	30EC
	"Specifies the value by which to divide the input signal."	"attr30ec.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "CI.TwoEdgeSep.Units"
	"Counter Input:Two Edge Separation:Units"
	iL enum { "Seconds"=10364, "Ticks"=10304, "From Custom Scale"=10065 }	readwrite		25	18AC
	"Specifies the units to use to return two-edge separation measurements from the channel."	"attr18ac.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.TwoEdgeSep.First.Term"
	"Counter Input:Two Edge Separation:First:Input:Terminal"
	DAQTerminal	readwrite		25	18AD
	"Specifies the source terminal of the digital signal that starts each measurement."	"attr18ad.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.TwoEdgeSep.First.TermCfg"
	"Counter Input:Two Edge Separation:First:Input:Terminal Configuration"
	iL enum { "Differential"=10106, "RSE"=10083 }	readwrite		25	30AB
	"Specifies the input terminal configuration."	"attr30ab.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.TwoEdgeSep.First.LogicLvlBehavior"
	"Counter Input:Two Edge Separation:First:Input:Logic Level Behavior"
	iL enum { "Logic Level Pull-up"=16064, "None"=10230 }	readwrite		25	30AC
	"Specifies the logic level behavior on the input line."	"attr30ac.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.TwoEdgeSep.First.DigFltr.Enable"
	"Counter Input:Two Edge Separation:First:Input:Digital Filter:Enable"
	bool	readwrite		25	220F
	"Specifies whether to apply the pulse width filter to the signal."	"attr220f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.TwoEdgeSep.First.DigFltr.MinPulseWidth"
	"Counter Input:Two Edge Separation:First:Input:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	2210
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr2210.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.TwoEdgeSep.First.DigFltr.TimebaseSrc"
	"Counter Input:Two Edge Separation:First:Input:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	2211
	"Specifies the input terminal of the signal to use as the timebase of the pulse width filter."	"attr2211.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.TwoEdgeSep.First.DigFltr.TimebaseRate"
	"Counter Input:Two Edge Separation:First:Input:Digital Filter:Timebase:Rate"
	fD	readwrite		25	2212
	"Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr2212.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.TwoEdgeSep.First.DigSync.Enable"
	"Counter Input:Two Edge Separation:First:Input:Digital Synchronization:Enable"
	bool	readwrite		25	2213
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr2213.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.TwoEdgeSep.First.Edge"
	"Counter Input:Two Edge Separation:First:Edge"
	iL enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	833
	"Specifies on which edge of the first signal to start each measurement."	"attr833.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.TwoEdgeSep.Second.Term"
	"Counter Input:Two Edge Separation:Second:Input:Terminal"
	DAQTerminal	readwrite		25	18AE
	"Specifies the source terminal of the digital signal that stops each measurement."	"attr18ae.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.TwoEdgeSep.Second.TermCfg"
	"Counter Input:Two Edge Separation:Second:Input:Terminal Configuration"
	iL enum { "Differential"=10106, "RSE"=10083 }	readwrite		25	30AD
	"Specifies the input terminal configuration."	"attr30ad.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.TwoEdgeSep.Second.LogicLvlBehavior"
	"Counter Input:Two Edge Separation:Second:Input:Logic Level Behavior"
	iL enum { "Logic Level Pull-up"=16064, "None"=10230 }	readwrite		25	30AE
	"Specifies the logic level behavior on the count reset line."	"attr30ae.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.TwoEdgeSep.Second.DigFltr.Enable"
	"Counter Input:Two Edge Separation:Second:Input:Digital Filter:Enable"
	bool	readwrite		25	2214
	"Specifies whether to apply the pulse width filter to the signal."	"attr2214.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.TwoEdgeSep.Second.DigFltr.MinPulseWidth"
	"Counter Input:Two Edge Separation:Second:Input:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	2215
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr2215.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.TwoEdgeSep.Second.DigFltr.TimebaseSrc"
	"Counter Input:Two Edge Separation:Second:Input:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	2216
	"Specifies the input terminal of the signal to use as the timebase of the pulse width filter."	"attr2216.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.TwoEdgeSep.Second.DigFltr.TimebaseRate"
	"Counter Input:Two Edge Separation:Second:Input:Digital Filter:Timebase:Rate"
	fD	readwrite		25	2217
	"Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr2217.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.TwoEdgeSep.Second.DigSync.Enable"
	"Counter Input:Two Edge Separation:Second:Input:Digital Synchronization:Enable"
	bool	readwrite		25	2218
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr2218.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.TwoEdgeSep.Second.Edge"
	"Counter Input:Two Edge Separation:Second:Edge"
	iL enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	834
	"Specifies on which edge of the second signal to stop each measurement."	"attr834.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.SemiPeriod.Units"
	"Counter Input:Semi-Period:Units"
	iL enum { "Seconds"=10364, "Ticks"=10304, "From Custom Scale"=10065 }	readwrite		25	18AF
	"Specifies the units to use to return semi-period measurements."	"attr18af.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.SemiPeriod.Term"
	"Counter Input:Semi-Period:Input:Terminal"
	DAQTerminal	readwrite		25	18B0
	"Specifies the input terminal of the signal to measure."	"attr18b0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.SemiPeriod.TermCfg"
	"Counter Input:Semi-Period:Input:Terminal Configuration"
	iL enum { "Differential"=10106, "RSE"=10083 }	readwrite		25	30AF
	"Specifies the input terminal configuration."	"attr30af.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.SemiPeriod.LogicLvlBehavior"
	"Counter Input:Semi-Period:Input:Logic Level Behavior"
	iL enum { "Logic Level Pull-up"=16064, "None"=10230 }	readwrite		25	30B0
	"Specifies the logic level behavior on the count reset line."	"attr30b0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.SemiPeriod.DigFltr.Enable"
	"Counter Input:Semi-Period:Input:Digital Filter:Enable"
	bool	readwrite		25	2219
	"Specifies whether to apply the pulse width filter to the signal."	"attr2219.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.SemiPeriod.DigFltr.MinPulseWidth"
	"Counter Input:Semi-Period:Input:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	221A
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr221a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.SemiPeriod.DigFltr.TimebaseSrc"
	"Counter Input:Semi-Period:Input:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	221B
	"Specifies the input terminal of the signal to use as the timebase of the pulse width filter."	"attr221b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.SemiPeriod.DigFltr.TimebaseRate"
	"Counter Input:Semi-Period:Input:Digital Filter:Timebase:Rate"
	fD	readwrite		25	221C
	"Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr221c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.SemiPeriod.DigSync.Enable"
	"Counter Input:Semi-Period:Input:Digital Synchronization:Enable"
	bool	readwrite		25	221D
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr221d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.SemiPeriod.StartingEdge"
	"Counter Input:Semi-Period:Starting Edge"
	iL enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	22FE
	"Specifies on which edge of the input signal to begin semi-period measurement. Semi-period measurements alternate between high time and low time, starting on this edge."	"attr22fe.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Pulse.Freq.Units"
	"Counter Input:Pulse:Frequency:Units"
	iL enum { "Hz"=10373 }	readwrite		25	2F0B
	"Specifies the units to use to return pulse specifications in terms of frequency."	"attr2f0b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Pulse.Freq.Term"
	"Counter Input:Pulse:Frequency:Input:Terminal"
	DAQTerminal	readwrite		25	2F04
	"Specifies the input terminal of the signal to measure."	"attr2f04.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.Pulse.Freq.TermCfg"
	"Counter Input:Pulse:Frequency:Input:Terminal Configuration"
	iL enum { "Differential"=10106, "RSE"=10083 }	readwrite		25	30B1
	"Specifies the input terminal configuration."	"attr30b1.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Pulse.Freq.LogicLvlBehavior"
	"Counter Input:Pulse:Frequency:Input:Logic Level Behavior"
	iL enum { "Logic Level Pull-up"=16064, "None"=10230 }	readwrite		25	30B2
	"Specifies the logic level behavior on the count reset line."	"attr30b2.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Pulse.Freq.DigFltr.Enable"
	"Counter Input:Pulse:Frequency:Input:Digital Filter:Enable"
	bool	readwrite		25	2F06
	"Specifies whether to apply a digital filter to the signal to measure."	"attr2f06.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.Pulse.Freq.DigFltr.MinPulseWidth"
	"Counter Input:Pulse:Frequency:Input:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	2F07
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr2f07.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Pulse.Freq.DigFltr.TimebaseSrc"
	"Counter Input:Pulse:Frequency:Input:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	2F08
	"Specifies the terminal of the signal to use as the timebase of the digital filter."	"attr2f08.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.Pulse.Freq.DigFltr.TimebaseRate"
	"Counter Input:Pulse:Frequency:Input:Digital Filter:Timebase:Rate"
	fD	readwrite		25	2F09
	"Specifies in hertz the rate of the digital filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr2f09.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Pulse.Freq.DigSync.Enable"
	"Counter Input:Pulse:Frequency:Input:Digital Synchronization:Enable"
	bool	readwrite		25	2F0A
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr2f0a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.Pulse.Freq.StartingEdge"
	"Counter Input:Pulse:Frequency:Starting Edge"
	iL enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	2F05
	"Specifies on which edge of the input signal to begin pulse measurement."	"attr2f05.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Pulse.Time.Units"
	"Counter Input:Pulse:Time:Units"
	iL enum { "Seconds"=10364 }	readwrite		25	2F13
	"Specifies the units to use to return pulse specifications in terms of high time and low time."	"attr2f13.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Pulse.Time.Term"
	"Counter Input:Pulse:Time:Input:Terminal"
	DAQTerminal	readwrite		25	2F0C
	"Specifies the input terminal of the signal to measure."	"attr2f0c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.Pulse.Time.TermCfg"
	"Counter Input:Pulse:Time:Input:Terminal Configuration"
	iL enum { "Differential"=10106, "RSE"=10083 }	readwrite		25	30B3
	"Specifies the input terminal configuration."	"attr30b3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Pulse.Time.LogicLvlBehavior"
	"Counter Input:Pulse:Time:Input:Logic Level Behavior"
	iL enum { "Logic Level Pull-up"=16064, "None"=10230 }	readwrite		25	30B4
	"Specifies the logic level behavior on the count reset line."	"attr30b4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Pulse.Time.DigFltr.Enable"
	"Counter Input:Pulse:Time:Input:Digital Filter:Enable"
	bool	readwrite		25	2F0E
	"Specifies whether to apply a digital filter to the signal to measure."	"attr2f0e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.Pulse.Time.DigFltr.MinPulseWidth"
	"Counter Input:Pulse:Time:Input:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	2F0F
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr2f0f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Pulse.Time.DigFltr.TimebaseSrc"
	"Counter Input:Pulse:Time:Input:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	2F10
	"Specifies the terminal of the signal to use as the timebase of the digital filter."	"attr2f10.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.Pulse.Time.DigFltr.TimebaseRate"
	"Counter Input:Pulse:Time:Input:Digital Filter:Timebase:Rate"
	fD	readwrite		25	2F11
	"Specifies in hertz the rate of the digital filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr2f11.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Pulse.Time.DigSync.Enable"
	"Counter Input:Pulse:Time:Input:Digital Synchronization:Enable"
	bool	readwrite		25	2F12
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr2f12.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.Pulse.Time.StartingEdge"
	"Counter Input:Pulse:Time:Starting Edge"
	iL enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	2F0D
	"Specifies on which edge of the input signal to begin pulse measurement."	"attr2f0d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Pulse.Ticks.Term"
	"Counter Input:Pulse:Ticks:Input:Terminal"
	DAQTerminal	readwrite		25	2F14
	"Specifies the input terminal of the signal to measure."	"attr2f14.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.Pulse.Ticks.TermCfg"
	"Counter Input:Pulse:Ticks:Input:Terminal Configuration"
	iL enum { "Differential"=10106, "RSE"=10083 }	readwrite		25	30B5
	"Specifies the input terminal configuration."	"attr30b5.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Pulse.Ticks.LogicLvlBehavior"
	"Counter Input:Pulse:Ticks:Input:Logic Level Behavior"
	iL enum { "Logic Level Pull-up"=16064, "None"=10230 }	readwrite		25	30B6
	"Specifies the logic level behavior on the count reset line."	"attr30b6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Pulse.Ticks.DigFltr.Enable"
	"Counter Input:Pulse:Ticks:Input:Digital Filter:Enable"
	bool	readwrite		25	2F16
	"Specifies whether to apply a digital filter to the signal to measure."	"attr2f16.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.Pulse.Ticks.DigFltr.MinPulseWidth"
	"Counter Input:Pulse:Ticks:Input:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	2F17
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr2f17.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Pulse.Ticks.DigFltr.TimebaseSrc"
	"Counter Input:Pulse:Ticks:Input:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	2F18
	"Specifies the terminal of the signal to use as the timebase of the digital filter."	"attr2f18.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.Pulse.Ticks.DigFltr.TimebaseRate"
	"Counter Input:Pulse:Ticks:Input:Digital Filter:Timebase:Rate"
	fD	readwrite		25	2F19
	"Specifies in hertz the rate of the digital filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr2f19.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Pulse.Ticks.DigSync.Enable"
	"Counter Input:Pulse:Ticks:Input:Digital Synchronization:Enable"
	bool	readwrite		25	2F1A
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr2f1a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.Pulse.Ticks.StartingEdge"
	"Counter Input:Pulse:Ticks:Starting Edge"
	iL enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	2F15
	"Specifies on which edge of the input signal to begin pulse measurement."	"attr2f15.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.CtrTimebaseSrc"
	"Counter Input:General Properties:Counter Timebase:Source"
	DAQTerminal	readwrite		25	143
	"Specifies the terminal of the timebase to use for the counter."	"attr143.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.CtrTimebaseRate"
	"Counter Input:General Properties:Counter Timebase:Rate"
	fD	readwrite		25	18B2
	"Specifies in Hertz the frequency of the counter timebase. Specifying the rate of a counter timebase allows you to take measurements in terms of time or frequency rather than in ticks of the timebase. If you use an external timebase and do not specify the rate, you can take measurements only in terms of ticks of the timebase."	"attr18b2.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.CtrTimebaseActiveEdge"
	"Counter Input:General Properties:Counter Timebase:Active Edge"
	iL enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	142
	"Specifies whether a timebase cycle is from rising edge to rising edge or from falling edge to falling edge."	"attr142.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.CtrTimebase.DigFltr.Enable"
	"Counter Input:General Properties:Counter Timebase:Digital Filter:Enable"
	bool	readwrite		25	2271
	"Specifies whether to apply the pulse width filter to the signal."	"attr2271.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.CtrTimebase.DigFltr.MinPulseWidth"
	"Counter Input:General Properties:Counter Timebase:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	2272
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr2272.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.CtrTimebase.DigFltr.TimebaseSrc"
	"Counter Input:General Properties:Counter Timebase:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	2273
	"Specifies the input terminal of the signal to use as the timebase of the pulse width filter."	"attr2273.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CI.CtrTimebase.DigFltr.TimebaseRate"
	"Counter Input:General Properties:Counter Timebase:Digital Filter:Timebase:Rate"
	fD	readwrite		25	2274
	"Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr2274.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.CtrTimebase.DigSync.Enable"
	"Counter Input:General Properties:Counter Timebase:Digital Synchronization:Enable"
	bool	readwrite		25	2275
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr2275.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.ThreshVoltage"
	"Counter Input:General Properties:Input Configuration:Voltage Threshold Level"
	fD	readwrite		25	30B7
	"Specifies the digital threshold value in Volts for high and low input transitions. Some devices do not support this for differential channels."	"attr30b7.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Filter.Enable"
	"Counter Input:General Properties:Filter:Enable"
	bool	readwrite		25	31B7
	"Specifies the corresponding filter enable/disable state."	"attr31b7.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.Filter.Freq"
	"Counter Input:General Properties:Filter:Frequency"
	fD	readwrite		25	31B8
	"Specifies the corresponding filter frequency (cutoff or center) of the filter response."	"attr31b8.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CI.Filter.Response"
	"Counter Input:General Properties:Filter:Response"
	iL enum { "Comb"=16152, "Bessel"=16153, "Brickwall"=16155, "Butterworth"=16076 }	readwrite		25	31B9
	"Specifies the corresponding filter response and defines the shape of the filter response."	"attr31b9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Filter.Order"
	"Counter Input:General Properties:Filter:Order"
	uL	readwrite		25	31BA
	"Specifies the corresponding filter order and defines the slope of the filter response."	"attr31ba.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "CI.FilterDelay"
	"Counter Input:General Properties:Filter:Filter Delay"
	fD	readonly		25	31BB
	"Indicates the amount of time between when the input signal transitions and when the filtered sample is read by the host device. This value is in the units specified with CI.FilterDelayUnits."	"attr31bb.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	@NoReset

attribute: "CI.FilterDelayUnits"
	"Counter Input:General Properties:Filter:Filter Delay Units"
	iL enum { "Seconds"=10364, "Sample Clock Periods"=10286 }	readwrite		25	31BC
	"Specifies the units of CI.FilterDelay."	"attr31bc.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.Count"
	"Counter Input:General Properties:More:Count"
	uL	readonly		25	148
	"Indicates the current value of the count register."	"attr148.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	@NoReset

attribute: "CI.OutputState"
	"Counter Input:General Properties:More:Output State"
	iL enum { "High"=10192, "Low"=10214 }	readonly		25	149
	"Indicates the current state of the out terminal of the counter."	"attr149.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	@NoReset

attribute: "CI.TCReached"
	"Counter Input:General Properties:More:Terminal Count Reached"
	bool	readonly		25	150
	"Indicates whether the counter rolled over. When you query this property, NI-DAQmx resets it to FALSE."	"attr150.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	@NoReset

attribute: "CI.CtrTimebaseMasterTimebaseDiv"
	"Counter Input:General Properties:More:Counter Timebase Master Timebase Divisor"
	uL	readwrite		25	18B3
	"Specifies the divisor for an external counter timebase. You can divide the counter timebase in order to measure slower signals without causing the count register to roll over."	"attr18b3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "CI.SampClkOverrunBehavior"
	"Counter Input:General Properties:More:Sample Clock Overrun Behavior"
	iL enum { "Repeated Data"=16062, "Sentinel Value"=16063 }	readwrite		25	3093
	"Specifies the counter behavior when data is read but a new value was not detected during a sample clock."	"attr3093.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumObservableAP	setChannelI32EnumObservableAP	resetChannelI32EnumObservableAP

attribute: "CI.SampClkOverrunSentinelVal"
	"Counter Input:General Properties:More:Sample Clock Overrun Sentinel Value"
	iL	readwrite		25	3094
	"Specifies the sentinel value returned when the No New Sample Behavior is set to Sentinel Value."	"attr3094.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32AP	setChannelI32AP	resetChannelI32AP

attribute: "CI.DataXferMech"
	"Counter Input:General Properties:More:Advanced:Data Transfer and Memory:Data Transfer Mechanism"
	iL enum { "DMA"=10054, "Interrupts"=10204, "Programmed I/O"=10264, "USB Bulk"=12590 }	readwrite		25	200
	"Specifies the data transfer mode for the channel."	"attr200.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.DataXferReqCond"
	"Counter Input:General Properties:More:Advanced:Data Transfer and Memory:Data Transfer Request Condition"
	iL enum { "Onboard Memory More than Half Full"=10237, "Onboard Memory Not Empty"=10241, "Onboard Memory Custom Threshold"=12577, "When Acquisition Complete"=12546 }	readwrite		25	2EFB
	"Specifies under what condition to transfer data from the onboard memory of the device to the buffer."	"attr2efb.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CI.UsbXferReqSize"
	"Counter Input:General Properties:More:Advanced:Data Transfer and Memory:USB Transfer Request Size"
	uL	readwrite		25	2A92
	"Specifies the maximum size of a USB transfer request in bytes. Modify this value to affect performance under different combinations of operating system and device."	"attr2a92.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "CI.UsbXferReqCount"
	"Counter Input:General Properties:More:Advanced:Data Transfer and Memory:USB Transfer Request Count"
	uL	readwrite		25	3004
	"Specifies the maximum number of simultaneous USB transfers used to stream data. Modify this value to affect performance under different combinations of operating system and device."	"attr3004.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "CI.MemMapEnable"
	"Counter Input:General Properties:More:Advanced:Data Transfer and Memory:Memory Mapping for Programmed IO Enable"
	bool	readwrite		25	2ED2
	"Specifies for NI-DAQmx to map hardware registers to the memory space of the application, if possible. Normally, NI-DAQmx maps hardware registers to memory accessible only to the kernel. Mapping the registers to the memory space of the application increases performance. However, if the application accesses the memory space mapped to the registers, it can adversely affect the operation of the device and possibly result in a system crash."	"attr2ed2.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.NumPossiblyInvalidSamps"
	"Counter Input:General Properties:More:Advanced:Data Transfer and Memory:Number Of Possibly Invalid Samples"
	uL	readonly		25	193C
	"Indicates the number of samples that the device might have overwritten before it could transfer them to the buffer."	"attr193c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	@NoReset

attribute: "CI.DupCountPrevention"
	"Counter Input:General Properties:More:Advanced:Duplicate Count Prevention"
	bool	readwrite		25	21AC
	"Specifies whether to enable duplicate count prevention for the channel. Duplicate count prevention is enabled by default. Setting  CI.Prescaler disables duplicate count prevention unless you explicitly enable it."	"attr21ac.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CI.Prescaler"
	"Counter Input:General Properties:More:Advanced:Prescaler"
	uL	readwrite		25	2239
	"Specifies the divisor to apply to the signal you connect to the counter source terminal. Scaled data that you read takes this setting into account. You should use a prescaler only when you connect an external signal to the counter source terminal and when that signal has a higher frequency than the fastest onboard timebase. Setting this value disables duplicate count prevention unless you explicitly set CI.DupCountPrevention to TRUE."	"attr2239.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "CI.MaxMeasPeriod"
	"Counter Input:General Properties:More:Advanced:Maximum Measurable Period"
	fD	readwrite		25	3095
	"Specifies the maximum period (in seconds) in which the device will recognize signals. For frequency measurements, a signal with a higher period than the one set in this property will return 0 Hz. For duty cycle, the device will return 0 or 1 depending on the state of the line during the max defined period of time. Period measurements will return NaN. Pulse width measurement will return zero."	"attr3095.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CO.OutputType"
	"Counter Output:Output Type"
	iL enum { "Pulse:Time"=10269, "Pulse:Frequency"=10119, "Pulse:Ticks"=10268 }	readonly		25	18B5
	"Indicates how to define pulses generated on the channel."	"attr18b5.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	@NoReset

attribute: "CO.Pulse.IdleState"
	"Counter Output:Pulse:Idle State"
	iL enum { "High"=10192, "Low"=10214 }	readwrite		25	1170
	"Specifies the resting state of the output terminal."	"attr1170.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CO.Pulse.Term"
	"Counter Output:Pulse:Output Terminal"
	DAQTerminal	readwrite		25	18E1
	"Specifies on which terminal to generate pulses."	"attr18e1.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CO.Pulse.Time.Units"
	"Counter Output:Pulse:Time:Units"
	iL enum { "Seconds"=10364 }	readwrite		25	18D6
	"Specifies the units in which to define high and low pulse time."	"attr18d6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CO.Pulse.HighTime"
	"Counter Output:Pulse:Time:High Time"
	fD	readwrite		25	18BA
	"Specifies the amount of time that the pulse is at a high voltage. This value is in the units you specify with CO.Pulse.Time.Units or when you create the channel."	"attr18ba.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CO.Pulse.LowTime"
	"Counter Output:Pulse:Time:Low Time"
	fD	readwrite		25	18BB
	"Specifies the amount of time that the pulse is at a low voltage. This value is in the units you specify with CO.Pulse.Time.Units or when you create the channel."	"attr18bb.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CO.Pulse.Time.InitialDelay"
	"Counter Output:Pulse:Time:Initial Delay"
	fD	readwrite		25	18BC
	"Specifies in seconds the amount of time to wait before generating the first pulse."	"attr18bc.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CO.Pulse.DutyCyc"
	"Counter Output:Pulse:Frequency:Duty Cycle"
	fD	readwrite		25	1176
	"Specifies the duty cycle of the pulses. The duty cycle of a signal is the width of the pulse divided by period. NI-DAQmx uses this ratio and the pulse frequency to determine the width of the pulses and the delay between pulses."	"attr1176.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CO.Pulse.Freq.Units"
	"Counter Output:Pulse:Frequency:Units"
	iL enum { "Hz"=10373 }	readwrite		25	18D5
	"Specifies the units in which to define pulse frequency."	"attr18d5.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CO.Pulse.Freq"
	"Counter Output:Pulse:Frequency:Frequency"
	fD	readwrite		25	1178
	"Specifies the frequency of the pulses to generate. This value is in the units you specify with CO.Pulse.Freq.Units or when you create the channel."	"attr1178.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CO.Pulse.Freq.InitialDelay"
	"Counter Output:Pulse:Frequency:Initial Delay"
	fD	readwrite		25	299
	"Specifies in seconds the amount of time to wait before generating the first pulse."	"attr299.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CO.Pulse.HighTicks"
	"Counter Output:Pulse:Ticks:High Ticks"
	uL	readwrite		25	1169
	"Specifies the number of ticks the pulse is high."	"attr1169.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "CO.Pulse.LowTicks"
	"Counter Output:Pulse:Ticks:Low Ticks"
	uL	readwrite		25	1171
	"Specifies the number of ticks the pulse is low."	"attr1171.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "CO.Pulse.Ticks.InitialDelay"
	"Counter Output:Pulse:Ticks:Initial Delay"
	uL	readwrite		25	298
	"Specifies the number of ticks to wait before generating the first pulse."	"attr298.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "CO.CtrTimebaseSrc"
	"Counter Output:General Properties:Counter Timebase:Source"
	DAQTerminal	readwrite		25	339
	"Specifies the terminal of the timebase to use for the counter. Typically, NI-DAQmx uses one of the internal counter timebases when generating pulses. Use this property to specify an external timebase and produce custom pulse widths that are not possible using the internal timebases."	"attr339.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CO.CtrTimebaseRate"
	"Counter Output:General Properties:Counter Timebase:Rate"
	fD	readwrite		25	18C2
	"Specifies in Hertz the frequency of the counter timebase. Specifying the rate of a counter timebase allows you to define output pulses in seconds rather than in ticks of the timebase. If you use an external timebase and do not specify the rate, you can define output pulses only in ticks of the timebase."	"attr18c2.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CO.CtrTimebaseActiveEdge"
	"Counter Output:General Properties:Counter Timebase:Active Edge"
	iL enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	341
	"Specifies whether a timebase cycle is from rising edge to rising edge or from falling edge to falling edge."	"attr341.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CO.CtrTimebase.DigFltr.Enable"
	"Counter Output:General Properties:Counter Timebase:Digital Filter:Enable"
	bool	readwrite		25	2276
	"Specifies whether to apply the pulse width filter to the signal."	"attr2276.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CO.CtrTimebase.DigFltr.MinPulseWidth"
	"Counter Output:General Properties:Counter Timebase:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	2277
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr2277.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CO.CtrTimebase.DigFltr.TimebaseSrc"
	"Counter Output:General Properties:Counter Timebase:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	2278
	"Specifies the input terminal of the signal to use as the timebase of the pulse width filter."	"attr2278.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelTerminalAP	setChannelTerminalAP	resetChannelTerminalAP

attribute: "CO.CtrTimebase.DigFltr.TimebaseRate"
	"Counter Output:General Properties:Counter Timebase:Digital Filter:Timebase:Rate"
	fD	readwrite		25	2279
	"Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr2279.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelF64AP	setChannelF64AP	resetChannelF64AP

attribute: "CO.CtrTimebase.DigSync.Enable"
	"Counter Output:General Properties:Counter Timebase:Digital Synchronization:Enable"
	bool	readwrite		25	227A
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr227a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CO.Count"
	"Counter Output:General Properties:More:Count"
	uL	readonly		25	293
	"Indicates the current value of the count register."	"attr293.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	@NoReset

attribute: "CO.OutputState"
	"Counter Output:General Properties:More:Output State"
	iL enum { "High"=10192, "Low"=10214 }	readonly		25	294
	"Indicates the current state of the output terminal of the counter."	"attr294.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	@NoReset

attribute: "CO.AutoIncrCnt"
	"Counter Output:General Properties:More:Auto Increment Count"
	uL	readwrite		25	295
	"Specifies a number of timebase ticks by which to increase the time spent in the idle state for each successive pulse."	"attr295.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "CO.CtrTimebaseMasterTimebaseDiv"
	"Counter Output:General Properties:More:Counter Timebase Master Timebase Divisor"
	uL	readwrite		25	18C3
	"Specifies the divisor for an external counter timebase. You can divide the counter timebase in order to generate slower signals without causing the count register to roll over."	"attr18c3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "CO.PulseDone"
	"Counter Output:General Properties:More:Pulse Done"
	bool	readonly		25	190E
	"Indicates if the task completed pulse generation. Use this value for retriggerable pulse generation when you need to determine if the device generated the current pulse. For retriggerable tasks, when you query this property, NI-DAQmx resets it to FALSE."	"attr190e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	@NoReset

attribute: "CO.EnableInitialDelayOnRetrigger"
	"Counter Output:General Properties:More:Enable Initial Delay on Retrigger"
	bool	readwrite		25	2EC9
	"Specifies whether to apply the initial delay to retriggered pulse trains."	"attr2ec9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CO.ConstrainedGenMode"
	"Counter Output:General Properties:More:Advanced:Constrained Generation Mode"
	iL enum { "Unconstrained"=14708, "Fixed High Frequency"=14709, "Fixed Low Frequency"=14710, "Fixed 50 Percent Duty Cycle"=14711 }	readwrite		25	29F2
	"Specifies constraints to apply when the counter generates pulses. Constraining the counter reduces the device resources required for counter operation. Constraining the counter can also allow additional analog or counter tasks on the device to run concurrently. For continuous counter tasks, NI-DAQmx consumes no device resources when the counter is constrained. For finite counter tasks, resource use increases with the frequency regardless of the constraint mode. However, fixed frequency constraints significantly reduce resource usage, and fixed duty cycle constraint marginally reduces it."	"attr29f2.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CO.UseOnlyOnBrdMem"
	"Counter Output:General Properties:More:Advanced:Data Transfer and Memory:Use Only Onboard Memory"
	bool	readwrite		25	2ECB
	"Specifies whether to write samples directly to the onboard memory of the device, bypassing the memory buffer. Generally, you cannot update onboard memory directly after you start the task. Onboard memory includes data FIFOs."	"attr2ecb.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CO.DataXferMech"
	"Counter Output:General Properties:More:Advanced:Data Transfer and Memory:Data Transfer Mechanism"
	iL enum { "DMA"=10054, "Interrupts"=10204, "Programmed I/O"=10264, "USB Bulk"=12590 }	readwrite		25	2ECC
	"Specifies the data transfer mode for the device. For buffered operations, use DMA or USB Bulk. For non-buffered operations, use Polled."	"attr2ecc.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CO.DataXferReqCond"
	"Counter Output:General Properties:More:Advanced:Data Transfer and Memory:Data Transfer Request Condition"
	iL enum { "Onboard Memory Empty"=10235, "Onboard Memory Half Full or Less"=10239, "Onboard Memory Less than Full"=10242 }	readwrite		25	2ECD
	"Specifies under what condition to transfer data from the buffer to the onboard memory of the device."	"attr2ecd.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP

attribute: "CO.UsbXferReqSize"
	"Counter Output:General Properties:More:Advanced:Data Transfer and Memory:USB Transfer Request Size"
	uL	readwrite		25	2A93
	"Specifies the maximum size of a USB transfer request in bytes. Modify this value to affect performance under different combinations of operating system and device."	"attr2a93.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "CO.UsbXferReqCount"
	"Counter Output:General Properties:More:Advanced:Data Transfer and Memory:USB Transfer Request Count"
	uL	readwrite		25	3005
	"Specifies the maximum number of simultaneous USB transfers used to stream data. Modify this value to affect performance under different combinations of operating system and device."	"attr3005.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "CO.MemMapEnable"
	"Counter Output:General Properties:More:Advanced:Data Transfer and Memory:Memory Mapping for Programmed IO Enable"
	bool	readwrite		25	2ED3
	"Specifies for NI-DAQmx to map hardware registers to the memory space of the application, if possible. Normally, NI-DAQmx maps hardware registers to memory accessible only to the kernel. Mapping the registers to the memory space of the application increases performance. However, if the application accesses the memory space mapped to the registers, it can adversely affect the operation of the device and possibly result in a system crash."	"attr2ed3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	resetChannelBoolAP

attribute: "CO.Prescaler"
	"Counter Output:General Properties:More:Advanced:Prescaler"
	uL	readwrite		25	226D
	"Specifies the divisor to apply to the signal you connect to the counter source terminal. Pulse generations defined by frequency or time take this setting into account, but pulse generations defined by ticks do not. You should use a prescaler only when you connect an external signal to the counter source terminal and when that signal has a higher frequency than the fastest onboard timebase."	"attr226d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelU32AP	setChannelU32AP	resetChannelU32AP

attribute: "CO.RdyForNewVal"
	"Counter Output:General Properties:More:Advanced:Ready For New Value"
	bool	readonly		25	22FF
	"Indicates whether the counter is ready for new continuous pulse train values."	"attr22ff.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelBoolAP	setChannelBoolAP	@NoReset

attribute: "ChanType"
	"General Properties:Channel Type"
	iL enum { "Analog Input"=10100, "Analog Output"=10102, "Digital Input"=10151, "Digital Output"=10153, "Counter Input"=10131, "Counter Output"=10132 }	readonly		25	187F
	"Indicates the type of the virtual channel."	"attr187f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	@NoReset

attribute: "PhysicalChanName"
	"General Properties:Physical Channel Name"
	DAQPhysChan	readwrite		25	18F5
	"Specifies the name of the physical channel upon which this virtual channel is based."	"attr18f5.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get18F5	set18F5	@NoReset

attribute: "Descr"
	"General Properties:Description"
	string	readwrite		25	1926
	"Specifies a user-defined description for the channel."	"attr1926.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelWstringAP	setChannelWstringAP	resetChannelWstringAP

attribute: "IsGlobal"
	"General Properties:Is Global"
	bool	readonly		25	2304
	"Indicates whether the channel is a global channel."	"attr2304.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2304	set2304	@NoReset

attribute: "SyncUnlockBehavior"
	"General Properties:Synchronization Unlock Behavior"
	iL enum { "Stop Task and Error"=15862, "Ignore Lost Sync Lock"=16129 }	readwrite		25	313C
	"Specifies the action to take if the target loses its synchronization to the grand master."	"attr313c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getChannelI32EnumAP	setChannelI32EnumAP	resetChannelI32EnumAP


///// DAQmx Device Class Definition /////
class: "DAQmx Device"
genericType: NIDAQ
termName: "reference"
termNameOut: "reference"
hasActiveProp: yes
className: "DAQmx Device"
super: "DAQ Object"
flags: 10

attribute: "ActiveDev"
	"Active Device"
	DAQDevice	writeonly		27	1854
	"Specifies the device from which to retrieve properties."	"attr1854.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1854	set1854	@NoReset

attribute: "DevIsSimulated"
	"Device Is Simulated"
	bool	readonly		25	22CA
	"Indicates if the device is a simulated device."	"attr22ca.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get22CA	set22CA	@NoReset

attribute: "ProductCategory"
	"Identification:Product Category"
	iL enum { "M Series DAQ"=14643, "X Series DAQ"=15858, "E Series DAQ"=14642, "S Series DAQ"=14644, "B Series DAQ"=14662, "SC Series DAQ"=14645, "USB DAQ"=14646, "AO Series"=14647, "Digital I/O"=14648, "TIO Series"=14661, "Dynamic Signal Acquisition"=14649, "Switches"=14650, "CompactDAQ Chassis"=14658, "CompactRIO Chassis"=16144, "C Series Module"=14659, "SCXI Module"=14660, "SCC Connector Block"=14704, "SCC Module"=14705, "NI ELVIS"=14755, "Network DAQ"=14829, "SC Express"=15886, "FieldDAQ"=16151, "Unknown"=12588 }	readonly		25	29A9
	"Indicates the product category of the device. This category corresponds to the category displayed in MAX when creating NI-DAQmx simulated devices."	"attr29a9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get29A9	set29A9	@NoReset

attribute: "ProductType"
	"Identification:Product Type"
	string	readonly		25	631
	"Indicates the product name of the device."	"attr631.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get631	set631	@NoReset

attribute: "ProductNum"
	"Identification:Product Number"
	uL	readonly		25	231D
	"Indicates the unique hardware identification number for the device."	"attr231d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get231D	set231D	@NoReset

attribute: "DevSerialNum"
	"Identification:Device Serial Number"
	uL	readonly		25	632
	"Indicates the serial number of the device. This value is zero if the device does not have a serial number."	"attr632.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get632	set632	@NoReset

attribute: "Accessory.ProductTypes"
	"Identification:Accessory:Product Types"
	string1D	readonly		25	2F6D
	"Indicates the model names of accessories connected to the device. Each array element corresponds to a connector. For example, index 0 corresponds to connector 0. The array contains an empty string for each connector with no accessory connected."	"attr2f6d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2F6D	set2F6D	@NoReset

attribute: "Accessory.ProductNums"
	"Identification:Accessory:Product Numbers"
	uL1D	readonly		25	2F6E
	"Indicates the unique hardware identification number for accessories connected to the device. Each array element corresponds to a connector. For example, index 0 corresponds to connector 0. The array contains 0 for each connector with no accessory connected."	"attr2f6e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2F6E	set2F6E	@NoReset

attribute: "Accessory.SerialNums"
	"Identification:Accessory:Serial Numbers"
	uL1D	readonly		25	2F6F
	"Indicates the serial number for accessories connected to the device. Each array element corresponds to a connector. For example, index 0 corresponds to connector 0. The array contains 0 for each connector with no accessory connected."	"attr2f6f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2F6F	set2F6F	@NoReset

attribute: "CarrierSerialNum"
	"Identification:Carrier Serial Number"
	uL	readonly		25	2A8A
	"Indicates the serial number of the device carrier. This value is zero if the carrier does not have a serial number."	"attr2a8a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2A8A	set2A8A	@NoReset

attribute: "FieldDAQ.DevName"
	"Identification:FieldDAQ:Device Name"
	DAQDevice	readonly		25	3171
	"Indicates the parent device which this bank is located in."	"attr3171.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get3171	set3171	@NoReset

attribute: "FieldDAQ.BankDevNames"
	"Identification:FieldDAQ:Bank Device Names"
	array {1, DAQDevice}	readonly		25	3178
	"Indicates an array containing the names of the banks in the FieldDAQ."	"attr3178.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get3178	set3178	@NoReset

attribute: "Chassis.ModuleDevNames"
	"Chassis:Module Device Names"
	array {1, DAQDevice}	readonly		25	29B6
	"Indicates an array containing the names of the modules in the chassis."	"attr29b6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get29B6	set29B6	@NoReset

attribute: "AnlgTrigSupported"
	"Triggering:Analog Triggering Supported"
	bool	readonly		25	2984
	"Indicates if the device supports analog triggering."	"attr2984.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesBoolAP	setCapabilitiesBoolAP	@NoReset

attribute: "DigTrigSupported"
	"Triggering:Digital Triggering Supported"
	bool	readonly		25	2985
	"Indicates if the device supports digital triggering."	"attr2985.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesBoolAP	setCapabilitiesBoolAP	@NoReset

attribute: "TimeTrigSupported"
	"Triggering:Time Triggering Supported"
	bool	readonly		25	301F
	"Indicates whether the device supports time triggering."	"attr301f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesBoolAP	setCapabilitiesBoolAP	@NoReset

attribute: "AI.PhysicalChans"
	"I/O Type:Analog Input:Physical Channels"
	array {1, DAQPhysChan}	readonly		25	231E
	"Indicates an array containing the names of the analog input physical channels available on the device."	"attr231e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get231E	set231E	@NoReset

attribute: "AI.MeasTypes"
	"I/O Type:Analog Input:Measurement Types"
	iL1D enum { "Voltage"=10322, "Voltage RMS"=10350, "Current"=10134, "Current RMS"=10351, "More:Voltage:Custom with Excitation"=10323, "More:Bridge (V/V)"=15908, "Frequency"=10181, "Resistance"=10278, "Temperature:Thermocouple"=10303, "Temperature:Thermistor"=10302, "Temperature:RTD"=10301, "Temperature:Built-in Sensor"=10311, "Strain Gage"=10300, "Rosette Strain Gage"=15980, "Position:LVDT"=10352, "Position:RVDT"=10353, "Position:Eddy Current Proximity Probe"=14835, "Accelerometer"=10356, "Acceleration:Charge"=16104, "Acceleration:4 Wire DC Voltage"=16106, "Velocity:IEPE Sensor"=15966, "Force:Bridge"=15899, "Force:IEPE Sensor"=15895, "Pressure:Bridge"=15902, "Sound Pressure:Microphone"=10354, "Torque:Bridge"=15905, "TEDS Sensor"=12531, "Charge"=16105 }	readonly		25	2FD2
	"Indicates the measurement types supported by the physical channels of the device. Refer to AI.MeasTypes for information on specific channels."	"attr2fd2.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2FD2	set2FD2	@NoReset

attribute: "AI.MaxSingleChanRate"
	"I/O Type:Analog Input:Timing:Maximum Single Channel Rate"
	fD	readonly		25	298C
	"Indicates the maximum rate for an analog input task if the task contains only a single channel from this device."	"attr298c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64AP	setCapabilitiesF64AP	@NoReset

attribute: "AI.MaxMultiChanRate"
	"I/O Type:Analog Input:Timing:Maximum Multiple Channel Rate"
	fD	readonly		25	298D
	"Indicates the maximum sampling rate for an analog input task from this device. To find the maximum rate for the task, take the minimum of AI.MaxSingleChanRate or the indicated sampling rate of this device divided by the number of channels to acquire data from (including cold-junction compensation and autozero channels)."	"attr298d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64AP	setCapabilitiesF64AP	@NoReset

attribute: "AI.MinRate"
	"I/O Type:Analog Input:Timing:Minimum Rate"
	fD	readonly		25	298E
	"Indicates the minimum rate for an analog input task on this device. NI-DAQmx returns a warning or error if you attempt to sample at a slower rate."	"attr298e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64AP	setCapabilitiesF64AP	@NoReset

attribute: "AI.SimultaneousSamplingSupported"
	"I/O Type:Analog Input:Timing:Simultaneous Sampling Supported"
	bool	readonly		25	298F
	"Indicates if the device supports simultaneous sampling."	"attr298f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesBoolAP	setCapabilitiesBoolAP	@NoReset

attribute: "AI.NumSampTimingEngines"
	"I/O Type:Analog Input:Timing:Number of Sample Timing Engines"
	uL	readonly		25	3163
	"Indicates the number of Analog Input sample timing engines supported by the device."	"attr3163.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesU32AP	setCapabilitiesU32AP	@NoReset

attribute: "AI.SampModes"
	"I/O Type:Analog Input:Timing:Sample Modes"
	iL1D enum { "Finite Samples"=10178, "Continuous Samples"=10123, "Hardware Timed Single Point"=12522 }	readonly		25	2FDC
	"Indicates sample modes supported by devices that support sample clocked analog input."	"attr2fdc.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesI32EnumVtrAP	setCapabilitiesI32EnumVtrAP	@NoReset

attribute: "AI.NumSyncPulseSrcs"
	"I/O Type:Analog Input:Timing:Number of Synchronization Pulse Sources"
	uL	readonly		25	3164
	"Indicates the number of Analog Input synchronization pulse sources supported by the device."	"attr3164.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesU32AP	setCapabilitiesU32AP	@NoReset

attribute: "AI.TrigUsage"
	"I/O Type:Analog Input:Trigger:Trigger Usage"
	iL1D enum { "Advance"=12488, "Pause"=12489, "Reference"=12490, "Start"=12491, "Handshake"=10389, "Arm Start"=14641 }	readonly		25	2986
	"Indicates the triggers supported by this device for an analog input task."	"attr2986.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesI32EnumVtrAP	setCapabilitiesI32EnumVtrAP	@NoReset

attribute: "AI.Voltage.Rngs"
	"I/O Type:Analog Input:Voltage:Ranges"
	fD1D	readonly		25	2990
	"Indicates pairs of input voltage ranges supported by this device. Each pair consists of the low value, followed by the high value."	"attr2990.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64VtrAP	setCapabilitiesF64VtrAP	@NoReset

attribute: "AI.Voltage.IntExcit.DiscreteVals"
	"I/O Type:Analog Input:Voltage:Internal Excitation:Discrete Values"
	fD1D	readonly		25	29C9
	"Indicates the set of discrete internal voltage excitation values supported by this device. If the device supports ranges of internal excitation values, use AI.Voltage.IntExcit.RangeVals to determine supported excitation values."	"attr29c9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64VtrAP	setCapabilitiesF64VtrAP	@NoReset

attribute: "AI.Voltage.IntExcit.RangeVals"
	"I/O Type:Analog Input:Voltage:Internal Excitation:Range Values"
	fD1D	readonly		25	29CA
	"Indicates pairs of internal voltage excitation ranges supported by this device. Each pair consists of the low value, followed by the high value. If the device supports a set of discrete internal excitation values, use AI.Voltage.IntExcit.DiscreteVals to determine the supported excitation values."	"attr29ca.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64VtrAP	setCapabilitiesF64VtrAP	@NoReset

attribute: "AI.Charge.Rngs"
	"I/O Type:Analog Input:Charge:Ranges"
	fD1D	readonly		25	3111
	"Indicates in coulombs pairs of input charge ranges for the device. Each pair consists of the low value followed by the high value."	"attr3111.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64VtrAP	setCapabilitiesF64VtrAP	@NoReset

attribute: "AI.Current.Rngs"
	"I/O Type:Analog Input:Current:Ranges"
	fD1D	readonly		25	2991
	"Indicates the pairs of current input ranges supported by this device. Each pair consists of the low value, followed by the high value."	"attr2991.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64VtrAP	setCapabilitiesF64VtrAP	@NoReset

attribute: "AI.Current.IntExcit.DiscreteVals"
	"I/O Type:Analog Input:Current:Internal Excitation:Discrete Values"
	fD1D	readonly		25	29CB
	"Indicates the set of discrete internal current excitation values supported by this device."	"attr29cb.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64VtrAP	setCapabilitiesF64VtrAP	@NoReset

attribute: "AI.Bridge.Rngs"
	"I/O Type:Analog Input:Bridge:Ranges"
	fD1D	readonly		25	2FD0
	"Indicates pairs of input voltage ratio ranges, in volts per volt, supported by devices that acquire using ratiometric measurements. Each pair consists of the low value followed by the high value."	"attr2fd0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64VtrAP	setCapabilitiesF64VtrAP	@NoReset

attribute: "AI.Resistance.Rngs"
	"I/O Type:Analog Input:Resistance:Ranges"
	fD1D	readonly		25	2A15
	"Indicates pairs of input resistance ranges, in ohms, supported by devices that have the necessary signal conditioning to measure resistances. Each pair consists of the low value followed by the high value."	"attr2a15.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64VtrAP	setCapabilitiesF64VtrAP	@NoReset

attribute: "AI.Freq.Rngs"
	"I/O Type:Analog Input:Frequency:Ranges"
	fD1D	readonly		25	2992
	"Indicates the pairs of frequency input ranges supported by this device. Each pair consists of the low value, followed by the high value."	"attr2992.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64VtrAP	setCapabilitiesF64VtrAP	@NoReset

attribute: "AI.Gains"
	"I/O Type:Analog Input:Gains"
	fD1D	readonly		25	2993
	"Indicates the input gain settings supported by this device."	"attr2993.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64VtrAP	setCapabilitiesF64VtrAP	@NoReset

attribute: "AI.Couplings"
	"I/O Type:Analog Input:Couplings"
	iL1D enum { "AC"=10045, "DC"=10050, "GND"=10066 }	readonly		25	2994
	"Indicates the coupling types supported by this device."	"attr2994.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesI32EnumVtrAP	setCapabilitiesI32EnumVtrAP	@NoReset

attribute: "AI.Lowpass.CutoffFreq.DiscreteVals"
	"I/O Type:Analog Input:Filter:Analog Low Pass:Cutoff Frequency:Discrete Values"
	fD1D	readonly		25	2995
	"Indicates the set of discrete lowpass cutoff frequencies supported by this device. If the device supports ranges of lowpass cutoff frequencies, use AI.Lowpass.CutoffFreq.RangeVals to determine supported frequencies."	"attr2995.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64VtrAP	setCapabilitiesF64VtrAP	@NoReset

attribute: "AI.Lowpass.CutoffFreq.RangeVals"
	"I/O Type:Analog Input:Filter:Analog Low Pass:Cutoff Frequency:Range Values"
	fD1D	readonly		25	29CF
	"Indicates pairs of lowpass cutoff frequency ranges supported by this device. Each pair consists of the low value, followed by the high value. If the device supports a set of discrete lowpass cutoff frequencies, use AI.Lowpass.CutoffFreq.DiscreteVals to determine the supported  frequencies."	"attr29cf.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64VtrAP	setCapabilitiesF64VtrAP	@NoReset

attribute: "AI.DigFltr.Types"
	"I/O Type:Analog Input:Filter:Digital Filter:Types"
	iL1D enum { "Lowpass"=16071, "Highpass"=16072, "Bandpass"=16073, "Notch"=16074, "Custom"=10137 }	readonly		25	3107
	"Indicates the AI digital filter types supported by the device."	"attr3107.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesI32EnumVtrAP	setCapabilitiesI32EnumVtrAP	@NoReset

attribute: "AI.DigFltr.Lowpass.CutoffFreq.DiscreteVals"
	"I/O Type:Analog Input:Filter:Digital Filter:Low Pass:Cutoff Frequency:Discrete Values"
	fD1D	readonly		25	30C8
	"Indicates the set of discrete lowpass cutoff frequencies supported by this device. If the device supports ranges of lowpass cutoff frequencies, use AI.DigFltr.Lowpass.CutoffFreq.RangeVals to determine supported frequencies."	"attr30c8.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64VtrAP	setCapabilitiesF64VtrAP	@NoReset

attribute: "AI.DigFltr.Lowpass.CutoffFreq.RangeVals"
	"I/O Type:Analog Input:Filter:Digital Filter:Low Pass:Cutoff Frequency:Range Values"
	fD1D	readonly		25	30C9
	"Indicates pairs of lowpass cutoff frequency ranges supported by this device. Each pair consists of the low value, followed by the high value. If the device supports a set of discrete lowpass cutoff frequencies, use AI.DigFltr.Lowpass.CutoffFreq.DiscreteVals to determine the supported frequencies."	"attr30c9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64VtrAP	setCapabilitiesF64VtrAP	@NoReset

attribute: "AO.PhysicalChans"
	"I/O Type:Analog Output:Physical Channels"
	array {1, DAQPhysChan}	readonly		25	231F
	"Indicates an array containing the names of the analog output physical channels available on the device."	"attr231f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get231F	set231F	@NoReset

attribute: "AO.OutputTypes"
	"I/O Type:Analog Output:Output Types"
	iL1D enum { "Voltage"=10322, "Current"=10134, "Function Generation"=14750 }	readonly		25	2FD3
	"Indicates the generation types supported by the physical channels of the device. Refer to AO.OutputTypes for information on specific channels."	"attr2fd3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2FD3	set2FD3	@NoReset

attribute: "AO.MaxRate"
	"I/O Type:Analog Output:Timing:Maximum Rate"
	fD	readonly		25	2997
	"Indicates the maximum analog output rate of the device."	"attr2997.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64AP	setCapabilitiesF64AP	@NoReset

attribute: "AO.MinRate"
	"I/O Type:Analog Output:Timing:Minimum Rate"
	fD	readonly		25	2998
	"Indicates the minimum analog output rate of the device."	"attr2998.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64AP	setCapabilitiesF64AP	@NoReset

attribute: "AO.SampClkSupported"
	"I/O Type:Analog Output:Timing:Sample Clock Supported"
	bool	readonly		25	2996
	"Indicates if the device supports the sample clock timing  type for analog output tasks."	"attr2996.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesBoolAP	setCapabilitiesBoolAP	@NoReset

attribute: "AO.NumSampTimingEngines"
	"I/O Type:Analog Output:Timing:Number of Sample Timing Engines"
	uL	readonly		25	3165
	"Indicates the number of Analog Output sample timing engines supported by the device."	"attr3165.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesU32AP	setCapabilitiesU32AP	@NoReset

attribute: "AO.SampModes"
	"I/O Type:Analog Output:Timing:Sample Modes"
	iL1D enum { "Finite Samples"=10178, "Continuous Samples"=10123, "Hardware Timed Single Point"=12522 }	readonly		25	2FDD
	"Indicates sample modes supported by devices that support sample clocked analog output."	"attr2fdd.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesI32EnumVtrAP	setCapabilitiesI32EnumVtrAP	@NoReset

attribute: "AO.NumSyncPulseSrcs"
	"I/O Type:Analog Output:Timing:Number of Synchronization Pulse Sources"
	uL	readonly		25	3166
	"Indicates the number of Analog Output synchronization pulse sources supported by the device."	"attr3166.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesU32AP	setCapabilitiesU32AP	@NoReset

attribute: "AO.TrigUsage"
	"I/O Type:Analog Output:Trigger:Trigger Usage"
	iL1D enum { "Advance"=12488, "Pause"=12489, "Reference"=12490, "Start"=12491, "Handshake"=10389, "Arm Start"=14641 }	readonly		25	2987
	"Indicates the triggers supported by this device for analog output tasks."	"attr2987.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesI32EnumVtrAP	setCapabilitiesI32EnumVtrAP	@NoReset

attribute: "AO.Voltage.Rngs"
	"I/O Type:Analog Output:Voltage:Ranges"
	fD1D	readonly		25	299B
	"Indicates pairs of output voltage ranges supported by this device. Each pair consists of the low value, followed by the high value."	"attr299b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64VtrAP	setCapabilitiesF64VtrAP	@NoReset

attribute: "AO.Current.Rngs"
	"I/O Type:Analog Output:Current:Ranges"
	fD1D	readonly		25	299C
	"Indicates pairs of output current ranges supported by this device. Each pair consists of the low value, followed by the high value."	"attr299c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64VtrAP	setCapabilitiesF64VtrAP	@NoReset

attribute: "AO.Gains"
	"I/O Type:Analog Output:Gains"
	fD1D	readonly		25	299D
	"Indicates the output gain settings supported by this device."	"attr299d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64VtrAP	setCapabilitiesF64VtrAP	@NoReset

attribute: "DI.Lines"
	"I/O Type:Digital Input:Lines"
	array {1, DAQPhysChan}	readonly		25	2320
	"Indicates an array containing the names of the digital input lines available on the device."	"attr2320.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2320	set2320	@NoReset

attribute: "DI.Ports"
	"I/O Type:Digital Input:Ports"
	array {1, DAQPhysChan}	readonly		25	2321
	"Indicates an array containing the names of the digital input ports available on the device."	"attr2321.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2321	set2321	@NoReset

attribute: "DI.MaxRate"
	"I/O Type:Digital Input:Timing:Maximum Rate"
	fD	readonly		25	2999
	"Indicates the maximum digital input rate of the device."	"attr2999.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64AP	setCapabilitiesF64AP	@NoReset

attribute: "DI.NumSampTimingEngines"
	"I/O Type:Digital Input:Timing:Number of Sample Timing Engines"
	uL	readonly		25	3167
	"Indicates the number of Digital Input sample timing engines supported by the device."	"attr3167.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesU32AP	setCapabilitiesU32AP	@NoReset

attribute: "DI.TrigUsage"
	"I/O Type:Digital Input:Trigger:Trigger Usage"
	iL1D enum { "Advance"=12488, "Pause"=12489, "Reference"=12490, "Start"=12491, "Handshake"=10389, "Arm Start"=14641 }	readonly		25	2988
	"Indicates the triggers supported by this device for digital input tasks."	"attr2988.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesI32EnumVtrAP	setCapabilitiesI32EnumVtrAP	@NoReset

attribute: "DO.Lines"
	"I/O Type:Digital Output:Lines"
	array {1, DAQPhysChan}	readonly		25	2322
	"Indicates an array containing the names of the digital output lines available on the device."	"attr2322.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2322	set2322	@NoReset

attribute: "DO.Ports"
	"I/O Type:Digital Output:Ports"
	array {1, DAQPhysChan}	readonly		25	2323
	"Indicates an array containing the names of the digital output ports available on the device."	"attr2323.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2323	set2323	@NoReset

attribute: "DO.MaxRate"
	"I/O Type:Digital Output:Timing:Maximum Rate"
	fD	readonly		25	299A
	"Indicates the maximum digital output rate of the device."	"attr299a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64AP	setCapabilitiesF64AP	@NoReset

attribute: "DO.NumSampTimingEngines"
	"I/O Type:Digital Output:Timing:Number of Sample Timing Engines"
	uL	readonly		25	3168
	"Indicates the number of Digital Output synchronization pulse sources supported by the device."	"attr3168.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesU32AP	setCapabilitiesU32AP	@NoReset

attribute: "DO.TrigUsage"
	"I/O Type:Digital Output:Trigger:Trigger Usage"
	iL1D enum { "Advance"=12488, "Pause"=12489, "Reference"=12490, "Start"=12491, "Handshake"=10389, "Arm Start"=14641 }	readonly		25	2989
	"Indicates the triggers supported by this device for digital output tasks."	"attr2989.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesI32EnumVtrAP	setCapabilitiesI32EnumVtrAP	@NoReset

attribute: "CI.PhysicalChans"
	"I/O Type:Counter Input:Physical Channels"
	array {1, DAQPhysChan}	readonly		25	2324
	"Indicates an array containing the names of the counter input physical channels available on the device."	"attr2324.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2324	set2324	@NoReset

attribute: "CI.MeasTypes"
	"I/O Type:Counter Input:Measurement Types"
	iL1D enum { "Count Edges"=10125, "Frequency"=10179, "Period"=10256, "Pulse Width"=10359, "Semi Period"=10289, "Pulse Frequency"=15864, "Pulse Time"=15865, "Pulse Ticks"=15866, "Duty Cycle"=16070, "Position:Angular Encoder"=10360, "Position:Linear Encoder"=10361, "Velocity:Angular Encoder"=16078, "Velocity:Linear Encoder"=16079, "Two Edge Separation"=10267, "GPS Timestamp"=10362 }	readonly		25	2FD4
	"Indicates the measurement types supported by the physical channels of the device. Refer to CI.MeasTypes for information on specific channels."	"attr2fd4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2FD4	set2FD4	@NoReset

attribute: "CI.TrigUsage"
	"I/O Type:Counter Input:Trigger:Trigger Usage"
	iL1D enum { "Advance"=12488, "Pause"=12489, "Reference"=12490, "Start"=12491, "Handshake"=10389, "Arm Start"=14641 }	readonly		25	298A
	"Indicates the triggers supported by this device for counter input tasks."	"attr298a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesI32EnumVtrAP	setCapabilitiesI32EnumVtrAP	@NoReset

attribute: "CI.SampClkSupported"
	"I/O Type:Counter Input:Timing:Sample Clock Supported"
	bool	readonly		25	299E
	"Indicates if the device supports the sample clock timing type for counter input tasks."	"attr299e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesBoolAP	setCapabilitiesBoolAP	@NoReset

attribute: "CI.SampModes"
	"I/O Type:Counter Input:Timing:Sample Modes"
	iL1D enum { "Finite Samples"=10178, "Continuous Samples"=10123, "Hardware Timed Single Point"=12522 }	readonly		25	2FDE
	"Indicates sample modes supported by devices that support sample clocked counter input."	"attr2fde.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesI32EnumVtrAP	setCapabilitiesI32EnumVtrAP	@NoReset

attribute: "CI.MaxSize"
	"I/O Type:Counter Input:Maximum Size"
	uL	readonly		25	299F
	"Indicates in bits the size of the counters on the device."	"attr299f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesU32AP	setCapabilitiesU32AP	@NoReset

attribute: "CI.MaxTimebase"
	"I/O Type:Counter Input:Maximum Timebase"
	fD	readonly		25	29A0
	"Indicates in hertz the maximum counter timebase frequency."	"attr29a0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64AP	setCapabilitiesF64AP	@NoReset

attribute: "CO.PhysicalChans"
	"I/O Type:Counter Output:Physical Channels"
	array {1, DAQPhysChan}	readonly		25	2325
	"Indicates an array containing the names of the counter output physical channels available on the device."	"attr2325.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2325	set2325	@NoReset

attribute: "CO.OutputTypes"
	"I/O Type:Counter Output:Output Types"
	iL1D enum { "Pulse:Time"=10269, "Pulse:Frequency"=10119, "Pulse:Ticks"=10268 }	readonly		25	2FD5
	"Indicates the generation types supported by the physical channels of the device. Refer to CO.OutputTypes for information on specific channels."	"attr2fd5.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2FD5	set2FD5	@NoReset

attribute: "CO.SampClkSupported"
	"I/O Type:Counter Output:Timing:Sample Clock Supported"
	bool	readonly		25	2F5B
	"Indicates if the device supports Sample Clock timing for counter output tasks."	"attr2f5b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesBoolAP	setCapabilitiesBoolAP	@NoReset

attribute: "CO.SampModes"
	"I/O Type:Counter Output:Timing:SampleModes"
	iL1D enum { "Finite Samples"=10178, "Continuous Samples"=10123, "Hardware Timed Single Point"=12522 }	readonly		25	2FDF
	"Indicates sample modes supported by devices that support sample clocked counter output."	"attr2fdf.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesI32EnumVtrAP	setCapabilitiesI32EnumVtrAP	@NoReset

attribute: "CO.TrigUsage"
	"I/O Type:Counter Output:Trigger:Trigger Usage"
	iL1D enum { "Advance"=12488, "Pause"=12489, "Reference"=12490, "Start"=12491, "Handshake"=10389, "Arm Start"=14641 }	readonly		25	298B
	"Indicates the triggers supported by this device for counter output tasks."	"attr298b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesI32EnumVtrAP	setCapabilitiesI32EnumVtrAP	@NoReset

attribute: "CO.MaxSize"
	"I/O Type:Counter Output:Maximum Size"
	uL	readonly		25	29A1
	"Indicates in bits the size of the counters on the device."	"attr29a1.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesU32AP	setCapabilitiesU32AP	@NoReset

attribute: "CO.MaxTimebase"
	"I/O Type:Counter Output:Maximum Timebase"
	fD	readonly		25	29A2
	"Indicates in hertz the maximum counter timebase frequency."	"attr29a2.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64AP	setCapabilitiesF64AP	@NoReset

attribute: "TEDS.HWTEDSSupported"
	"TEDS:Hardware TEDS Supported"
	bool	readonly		25	2FD6
	"Indicates whether the device supports hardware TEDS."	"attr2fd6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2FD6	set2FD6	@NoReset

attribute: "NumDMAChans"
	"Bus:Number of DMA Channels"
	uL	readonly		25	233C
	"Indicates the number of DMA channels on the device."	"attr233c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesU32AP	setCapabilitiesU32AP	@NoReset

attribute: "BusType"
	"Location:Bus Type"
	iL enum { "PCI"=12582, "PCIe"=13612, "PXI"=12583, "PXIe"=14706, "SCXI"=12584, "SCC"=14707, "PCCard"=12585, "USB"=12586, "CompactDAQ"=14637, "CompactRIO"=16143, "TCP/IP"=14828, "Unknown"=12588, "SwitchBlock"=15870 }	readonly		25	2326
	"Indicates the bus type of the device."	"attr2326.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2326	set2326	@NoReset

attribute: "PCI.BusNum"
	"Location:PCI:Bus Number"
	uL	readonly		25	2327
	"Indicates the PCI bus number of the device."	"attr2327.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2327	set2327	@NoReset

attribute: "PCI.DevNum"
	"Location:PCI:Device Number"
	uL	readonly		25	2328
	"Indicates the PCI slot number of the device."	"attr2328.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2328	set2328	@NoReset

attribute: "PXI.ChassisNum"
	"Location:PXI:Chassis Number"
	uL	readonly		25	2329
	"Indicates the PXI chassis number of the device, as identified in MAX."	"attr2329.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2329	set2329	@NoReset

attribute: "PXI.SlotNum"
	"Location:PXI:Slot Number"
	uL	readonly		25	232A
	"Indicates the PXI slot number of the device."	"attr232a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get232A	set232A	@NoReset

attribute: "CompactDAQ.ChassisDevName"
	"Location:CompactDAQ:Chassis Device Name"
	DAQDevice	readonly		25	29B7
	"Indicates the name of the CompactDAQ chassis that contains this module."	"attr29b7.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get29B7	set29B7	@NoReset

attribute: "CompactDAQ.SlotNum"
	"Location:CompactDAQ:Slot Number"
	uL	readonly		25	29B8
	"Indicates the slot number in which this module is located in the CompactDAQ chassis."	"attr29b8.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get29B8	set29B8	@NoReset

attribute: "CompactRIO.ChassisDevName"
	"Location:CompactRIO:Chassis Device Name"
	DAQDevice	readonly		25	3161
	"Indicates the name of the CompactRIO chassis that contains this module."	"attr3161.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get3161	set3161	@NoReset

attribute: "CompactRIO.SlotNum"
	"Location:CompactRIO:Slot Number"
	uL	readonly		25	3162
	"Indicates the slot number of the CompactRIO chassis where this module is located."	"attr3162.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get3162	set3162	@NoReset

attribute: "TCPIP.Hostname"
	"Location:TCP/IP:Hostname"
	string	readonly		25	2A8B
	"Indicates the IPv4 hostname of the device."	"attr2a8b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2A8B	set2A8B	@NoReset

attribute: "TCPIP.EthernetIP"
	"Location:TCP/IP:Ethernet IP Address"
	string	readonly		25	2A8C
	"Indicates the IPv4 address of the Ethernet interface in dotted decimal format. This property returns 0.0.0.0 if the Ethernet interface cannot acquire an address."	"attr2a8c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2A8C	set2A8C	@NoReset

attribute: "TCPIP.WirelessIP"
	"Location:TCP/IP:Wireless IP Address"
	string	readonly		25	2A8D
	"Indicates the IPv4 address of the 802.11 wireless interface in dotted decimal format. This property returns 0.0.0.0 if the wireless interface cannot acquire an address."	"attr2a8d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2A8D	set2A8D	@NoReset

attribute: "Terminals"
	"Terminals"
	array {1, DAQTerminal}	readonly		25	2A40
	"Indicates a list of all terminals on the device."	"attr2a40.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2A40	set2A40	@NoReset

attribute: "NumTimeTrigs"
	"Time:Number of Time Triggers"
	uL	readonly		25	3141
	"Indicates the number of time triggers available on the device."	"attr3141.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesU32AP	setCapabilitiesU32AP	@NoReset

attribute: "NumTimestampEngines"
	"Time:Number of Timestamp Engines"
	uL	readonly		25	3142
	"Indicates the number of timestamp engines available on the device."	"attr3142.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesU32AP	setCapabilitiesU32AP	@NoReset


///// DAQmx Export Signal Class Definition /////
class: "DAQmx Export Signal"
genericType: NIDAQ
termName: "task"
termNameOut: "task out"
hasActiveProp: yes
className: "DAQmx Export Signal"
super: "DAQ Object"
flags: 2

attribute: "AIConvClk.OutputTerm"
	"Clocks:AI Convert Clock:Output Terminal"
	DAQTerminal	readwrite		25	1687
	"Specifies the terminal to which to route the AI Convert Clock."	"attr1687.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalVtrAP	setTimingTerminalVtrAP	resetTimingTerminalVtrAP

attribute: "AIConvClk.Pulse.Polarity"
	"Clocks:AI Convert Clock:Pulse:Polarity"
	iL enum { "Active High"=10095, "Active Low"=10096 }	readonly		25	1688
	"Indicates the polarity of the exported AI Convert Clock. The polarity is fixed and independent of the active edge of the source of the AI Convert Clock."	"attr1688.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	@NoReset

attribute: "10MHzRefClk.OutputTerm"
	"Clocks:10MHz Reference Clock:Output Terminal"
	DAQTerminal	readwrite		25	226E
	"Specifies the terminal to which to route the 10MHz Clock."	"attr226e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalVtrAP	setTimingTerminalVtrAP	resetTimingTerminalVtrAP

attribute: "20MHzTimebase.OutputTerm"
	"Clocks:20MHz Timebase:Output Terminal"
	DAQTerminal	readwrite		25	1657
	"Specifies the terminal to which to route the 20MHz Timebase."	"attr1657.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalVtrAP	setTimingTerminalVtrAP	resetTimingTerminalVtrAP

attribute: "SampClk.OutputBehavior"
	"Clocks:Sample Clock:Output Behavior"
	iL enum { "Pulse"=10265, "Level"=10210 }	readwrite		25	186B
	"Specifies whether the exported Sample Clock issues a pulse at the beginning of a sample or changes to a high state for the duration of the sample."	"attr186b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "SampClk.OutputTerm"
	"Clocks:Sample Clock:Output Terminal"
	DAQTerminal	readwrite		25	1663
	"Specifies the terminal to which to route the Sample Clock."	"attr1663.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalVtrAP	setTimingTerminalVtrAP	resetTimingTerminalVtrAP

attribute: "SampClk.DelayOffset"
	"Clocks:Sample Clock:Delay Offset"
	fD	readwrite		25	21C4
	"Specifies in seconds the amount of time to offset the exported Sample clock.  Refer to timing diagrams for generation applications in the device documentation for more information about this value."	"attr21c4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "SampClk.Pulse.Polarity"
	"Clocks:Sample Clock:Pulse:Polarity"
	iL enum { "Active High"=10095, "Active Low"=10096 }	readwrite		25	1664
	"Specifies the polarity of the exported Sample Clock if SampClk.OutputBehavior is Pulse."	"attr1664.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "SampClkTimebase.OutputTerm"
	"Clocks:Sample Clock Timebase:Output Terminal"
	DAQTerminal	readwrite		25	18F9
	"Specifies the terminal to which to route the Sample Clock Timebase."	"attr18f9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalVtrAP	setTimingTerminalVtrAP	resetTimingTerminalVtrAP

attribute: "DividedSampClkTimebase.OutputTerm"
	"Clocks:Divided Sample Clock Timebase:Output Terminal"
	DAQTerminal	readwrite		25	21A1
	"Specifies the terminal to which to route the Divided Sample Clock Timebase."	"attr21a1.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalVtrAP	setTimingTerminalVtrAP	resetTimingTerminalVtrAP

attribute: "AdvTrig.OutputTerm"
	"Triggers:Advance Trigger:Output Terminal"
	DAQTerminal	readwrite		25	1645
	"Specifies the terminal to which to route the Advance Trigger."	"attr1645.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalVtrAP	setTimingTerminalVtrAP	resetTimingTerminalVtrAP

attribute: "AdvTrig.Pulse.Polarity"
	"Triggers:Advance Trigger:Pulse:Polarity"
	iL enum { "Active High"=10095, "Active Low"=10096 }	readonly		25	1646
	"Indicates the polarity of the exported Advance Trigger."	"attr1646.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	@NoReset

attribute: "AdvTrig.Pulse.WidthUnits"
	"Triggers:Advance Trigger:Pulse:Width Units"
	iL enum { "Seconds"=10364 }	readwrite		25	1647
	"Specifies the units of AdvTrig.Pulse.Width."	"attr1647.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "AdvTrig.Pulse.Width"
	"Triggers:Advance Trigger:Pulse:Width Value"
	fD	readwrite		25	1648
	"Specifies the width of an exported Advance Trigger pulse. Specify this value in the units you specify with AdvTrig.Pulse.WidthUnits."	"attr1648.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "PauseTrig.OutputTerm"
	"Triggers:Pause Trigger:Output Terminal"
	DAQTerminal	readwrite		25	1615
	"Specifies the terminal to which to route the Pause Trigger."	"attr1615.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalVtrAP	setTimingTerminalVtrAP	resetTimingTerminalVtrAP

attribute: "PauseTrig.Lvl.ActiveLvl"
	"Triggers:Pause Trigger:Level:Active Level"
	iL enum { "Active High"=10095, "Active Low"=10096 }	readwrite		25	1616
	"Specifies the active level of the exported Pause Trigger."	"attr1616.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "RefTrig.OutputTerm"
	"Triggers:Reference Trigger:Output Terminal"
	DAQTerminal	readwrite		25	590
	"Specifies the terminal to which to route the Reference Trigger."	"attr590.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalVtrAP	setTimingTerminalVtrAP	resetTimingTerminalVtrAP

attribute: "RefTrig.Pulse.Polarity"
	"Triggers:Reference Trigger:Pulse:Polarity"
	iL enum { "Active High"=10095, "Active Low"=10096 }	readwrite		25	591
	"Specifies the polarity of the exported Reference Trigger."	"attr591.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "StartTrig.OutputTerm"
	"Triggers:Start Trigger:Output Terminal"
	DAQTerminal	readwrite		25	584
	"Specifies the terminal to which to route the Start Trigger."	"attr584.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalVtrAP	setTimingTerminalVtrAP	resetTimingTerminalVtrAP

attribute: "StartTrig.Pulse.Polarity"
	"Triggers:Start Trigger:Pulse:Polarity"
	iL enum { "Active High"=10095, "Active Low"=10096 }	readwrite		25	585
	"Specifies the polarity of the exported Start Trigger."	"attr585.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "AdvCmpltEvent.OutputTerm"
	"Events:Advance Complete Event:Output Terminal"
	DAQTerminal	readwrite		25	1651
	"Specifies the terminal to which to route the Advance Complete Event."	"attr1651.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalVtrAP	setTimingTerminalVtrAP	resetTimingTerminalVtrAP

attribute: "AdvCmpltEvent.Delay"
	"Events:Advance Complete Event:Delay Value"
	fD	readwrite		25	1757
	"Specifies the output signal delay in periods of the sample clock."	"attr1757.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "AdvCmpltEvent.Pulse.Polarity"
	"Events:Advance Complete Event:Pulse:Polarity"
	iL enum { "Active High"=10095, "Active Low"=10096 }	readwrite		25	1652
	"Specifies the polarity of the exported Advance Complete Event."	"attr1652.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "AdvCmpltEvent.Pulse.Width"
	"Events:Advance Complete Event:Pulse:Width Value"
	fD	readwrite		25	1654
	"Specifies the width of the exported Advance Complete Event pulse."	"attr1654.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "AIHoldCmpltEvent.OutputTerm"
	"Events:AI Hold Complete Event:Output Terminal"
	DAQTerminal	readwrite		25	18ED
	"Specifies the terminal to which to route the AI Hold Complete Event."	"attr18ed.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalVtrAP	setTimingTerminalVtrAP	resetTimingTerminalVtrAP

attribute: "AIHoldCmpltEvent.Pulse.Polarity"
	"Events:AI Hold Complete Event:Pulse:Polarity"
	iL enum { "Active High"=10095, "Active Low"=10096 }	readwrite		25	18EE
	"Specifies the polarity of an exported AI Hold Complete Event pulse."	"attr18ee.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "ChangeDetectEvent.OutputTerm"
	"Events:Change Detection Event:Output Terminal"
	DAQTerminal	readwrite		25	2197
	"Specifies the terminal to which to route the Change Detection Event."	"attr2197.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalVtrAP	setTimingTerminalVtrAP	resetTimingTerminalVtrAP

attribute: "ChangeDetectEvent.Pulse.Polarity"
	"Events:Change Detection Event:Pulse:Polarity"
	iL enum { "Active High"=10095, "Active Low"=10096 }	readwrite		25	2303
	"Specifies the polarity of an exported Change Detection Event pulse."	"attr2303.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "CtrOutEvent.OutputTerm"
	"Events:Counter Output Event:Output Terminal"
	DAQTerminal	readwrite		25	1717
	"Specifies the terminal to which to route the Counter Output Event."	"attr1717.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalVtrAP	setTimingTerminalVtrAP	resetTimingTerminalVtrAP

attribute: "CtrOutEvent.OutputBehavior"
	"Events:Counter Output Event:Output Behavior"
	iL enum { "Pulse"=10265, "Toggle"=10307 }	readwrite		25	174F
	"Specifies whether the exported Counter Output Event pulses or changes from one state to the other when the counter reaches terminal count."	"attr174f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "CtrOutEvent.Pulse.Polarity"
	"Events:Counter Output Event:Pulse:Polarity"
	iL enum { "Active High"=10095, "Active Low"=10096 }	readwrite		25	1718
	"Specifies the polarity of the pulses at the output terminal of the counter when CtrOutEvent.OutputBehavior is Pulse. NI-DAQmx ignores this property if CtrOutEvent.OutputBehavior is Toggle."	"attr1718.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "CtrOutEvent.Toggle.IdleState"
	"Events:Counter Output Event:Toggle:Idle State"
	iL enum { "High"=10192, "Low"=10214 }	readwrite		25	186A
	"Specifies the initial state of the output terminal of the counter when CtrOutEvent.OutputBehavior is Toggle. The terminal enters this state when NI-DAQmx commits the task."	"attr186a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "HshkEvent.OutputTerm"
	"Events:Handshake Event:Output Terminal"
	DAQTerminal	readwrite		25	22BA
	"Specifies the terminal to which to route the Handshake Event."	"attr22ba.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalVtrAP	setTimingTerminalVtrAP	resetTimingTerminalVtrAP

attribute: "HshkEvent.OutputBehavior"
	"Events:Handshake Event:Output Behavior"
	iL enum { "Interlocked"=12549, "Pulse"=10265 }	readwrite		25	22BB
	"Specifies the output behavior of the Handshake Event."	"attr22bb.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "HshkEvent.Delay"
	"Events:Handshake Event:Delay Value"
	fD	readwrite		25	22BC
	"Specifies the number of seconds to delay after the Handshake Trigger deasserts before asserting the Handshake Event."	"attr22bc.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "HshkEvent.Interlocked.AssertedLvl"
	"Events:Handshake Event:Interlocked:Asserted Level"
	iL enum { "High"=10192, "Low"=10214 }	readwrite		25	22BD
	"Specifies the asserted level of the exported Handshake Event if HshkEvent.OutputBehavior is Interlocked."	"attr22bd.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "HshkEvent.Interlocked.AssertOnStart"
	"Events:Handshake Event:Interlocked:Assert on Start"
	bool	readwrite		25	22BE
	"Specifies to assert the Handshake Event when the task starts if HshkEvent.OutputBehavior is Interlocked."	"attr22be.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "HshkEvent.Interlocked.DeassertDelay"
	"Events:Handshake Event:Interlocked:Deassert Delay Value"
	fD	readwrite		25	22BF
	"Specifies in seconds the amount of time to wait after the Handshake Trigger asserts before deasserting the Handshake Event if HshkEvent.OutputBehavior is Interlocked."	"attr22bf.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "HshkEvent.Pulse.Polarity"
	"Events:Handshake Event:Pulse:Polarity"
	iL enum { "Active High"=10095, "Active Low"=10096 }	readwrite		25	22C0
	"Specifies the polarity of the exported Handshake Event if HshkEvent.OutputBehavior is Pulse."	"attr22c0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "HshkEvent.Pulse.Width"
	"Events:Handshake Event:Pulse:Width Value"
	fD	readwrite		25	22C1
	"Specifies in seconds the pulse width of the exported Handshake Event if HshkEvent.OutputBehavior is Pulse."	"attr22c1.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "RdyForXferEvent.OutputTerm"
	"Events:Ready For Transfer Event:Output Terminal"
	DAQTerminal	readwrite		25	22B5
	"Specifies the terminal to which to route the Ready for Transfer Event."	"attr22b5.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalVtrAP	setTimingTerminalVtrAP	resetTimingTerminalVtrAP

attribute: "RdyForXferEvent.Lvl.ActiveLvl"
	"Events:Ready For Transfer Event:Level:Active Level"
	iL enum { "Active High"=10095, "Active Low"=10096 }	readwrite		25	22B6
	"Specifies the active level of the exported Ready for Transfer Event."	"attr22b6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "RdyForXferEvent.DeassertCond"
	"Events:Ready For Transfer Event:Deassert Condition"
	iL enum { "Onboard Memory More than Half Full"=10237, "Onboard Memory Full"=10236, "Onboard Memory Custom Threshold"=12577 }	readwrite		25	2963
	"Specifies when the ready for transfer event deasserts."	"attr2963.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "RdyForXferEvent.DeassertCondCustomThreshold"
	"Events:Ready For Transfer Event:Deassert Condition Custom Threshold"
	uL	readwrite		25	2964
	"Specifies in samples the threshold below which the Ready for Transfer Event deasserts. This threshold is an amount of space available in the onboard memory of the device. RdyForXferEvent.DeassertCond must be Onboard Memory Custom Threshold to use a custom threshold."	"attr2964.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingU32AP	setTimingU32AP	resetTimingU32AP

attribute: "DataActiveEvent.OutputTerm"
	"Events:Data Active Event:Output Terminal"
	DAQTerminal	readwrite		25	1633
	"Specifies the terminal to which to export the Data Active Event."	"attr1633.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalVtrAP	setTimingTerminalVtrAP	resetTimingTerminalVtrAP

attribute: "DataActiveEvent.Lvl.ActiveLvl"
	"Events:Data Active Event:Level:Active Level"
	iL enum { "Active High"=10095, "Active Low"=10096 }	readwrite		25	1634
	"Specifies the polarity of the exported Data Active Event."	"attr1634.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "RdyForStartEvent.OutputTerm"
	"Events:Ready For Start Event:Output Terminal"
	DAQTerminal	readwrite		25	1609
	"Specifies the terminal to which to route the Ready for Start Event."	"attr1609.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalVtrAP	setTimingTerminalVtrAP	resetTimingTerminalVtrAP

attribute: "RdyForStartEvent.Lvl.ActiveLvl"
	"Events:Ready For Start Event:Level:Active Level"
	iL enum { "Active High"=10095, "Active Low"=10096 }	readwrite		25	1751
	"Specifies the polarity of the exported Ready for Start Event."	"attr1751.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "SyncPulseEvent.OutputTerm"
	"Events:Synchronization Pulse Event:Output Terminal"
	DAQTerminal	readwrite		25	223C
	"Specifies the terminal to which to route the Synchronization Pulse Event."	"attr223c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalVtrAP	setTimingTerminalVtrAP	resetTimingTerminalVtrAP

attribute: "WatchdogExpiredEvent.OutputTerm"
	"Events:Watchdog Timer Expired Event:Output Terminal"
	DAQTerminal	readwrite		25	21AA
	"Specifies the terminal  to which to route the Watchdog Timer Expired Event."	"attr21aa.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalVtrAP	setTimingTerminalVtrAP	resetTimingTerminalVtrAP


///// DAQmx Persisted Channel Class Definition /////
class: "DAQmx Persisted Channel"
genericType: NIDAQ
termName: "reference"
termNameOut: "reference"
hasActiveProp: yes
className: "DAQmx Persisted Channel"
super: "DAQ Object"
flags: 10

attribute: "ActiveChan"
	"Active Channel"
	DAQChannel	writeonly		27	22CF
	"Specifies the saved global channel to which subsequent properties apply."	"attr22cf.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get22CF	set22CF	@NoReset

attribute: "Author"
	"Author"
	string	readonly		25	22D0
	"Indicates the author of the global channel."	"attr22d0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get22D0	set22D0	@NoReset

attribute: "AllowInteractiveEditing"
	"Allow Interactive Editing?"
	bool	readonly		25	22D1
	"Indicates whether the global channel can be edited in the DAQ Assistant."	"attr22d1.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get22D1	set22D1	@NoReset

attribute: "AllowInteractiveDeletion"
	"Allow Interactive Deletion?"
	bool	readonly		25	22D2
	"Indicates whether the global channel can be deleted through MAX."	"attr22d2.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get22D2	set22D2	@NoReset


///// DAQmx Persisted Scale Class Definition /////
class: "DAQmx Persisted Scale"
genericType: NIDAQ
termName: "reference"
termNameOut: "reference"
hasActiveProp: yes
className: "DAQmx Persisted Scale"
super: "DAQ Object"
flags: 10

attribute: "ActiveScale"
	"Active Scale"
	DAQScale	writeonly		27	22D3
	"Specifies the saved custom scale to which subsequent properties apply."	"attr22d3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get22D3	set22D3	@NoReset

attribute: "Author"
	"Author"
	string	readonly		25	22D4
	"Indicates the author of the custom scale."	"attr22d4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get22D4	set22D4	@NoReset

attribute: "AllowInteractiveEditing"
	"Allow Interactive Editing?"
	bool	readonly		25	22D5
	"Indicates whether the custom scale can be edited in the DAQ Assistant."	"attr22d5.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get22D5	set22D5	@NoReset

attribute: "AllowInteractiveDeletion"
	"Allow Interactive Deletion?"
	bool	readonly		25	22D6
	"Indicates whether the custom scale can be deleted through MAX."	"attr22d6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get22D6	set22D6	@NoReset


///// DAQmx Persisted Task Class Definition /////
class: "DAQmx Persisted Task"
genericType: NIDAQ
termName: "reference"
termNameOut: "reference"
hasActiveProp: yes
className: "DAQmx Persisted Task"
super: "DAQ Object"
flags: 10

attribute: "ActiveTask"
	"Active Task"
	DAQTask	writeonly		27	22CB
	"Specifies the saved task to which subsequent properties apply."	"attr22cb.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get22CB	set22CB	@NoReset

attribute: "Author"
	"Author"
	string	readonly		25	22CC
	"Indicates the author of the task."	"attr22cc.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get22CC	set22CC	@NoReset

attribute: "AllowInteractiveEditing"
	"Allow Interactive Editing?"
	bool	readonly		25	22CD
	"Indicates whether the task can be edited in the DAQ Assistant."	"attr22cd.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get22CD	set22CD	@NoReset

attribute: "AllowInteractiveDeletion"
	"Allow Interactive Deletion?"
	bool	readonly		25	22CE
	"Indicates whether the task can be deleted through MAX."	"attr22ce.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get22CE	set22CE	@NoReset


///// DAQmx Physical Channel Class Definition /////
class: "DAQmx Physical Channel"
genericType: NIDAQ
termName: "reference"
termNameOut: "reference"
hasActiveProp: yes
className: "DAQmx Physical Channel"
super: "DAQ Object"
flags: 10

attribute: "ActivePhysicalChans"
	"Active Physical Channels"
	DAQPhysChan	writeonly		27	21D9
	"Specifies the physical channel from which to retrieve properties."	"attr21d9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get21D9	set21D9	@NoReset

attribute: "AI.MeasTypes"
	"Analog Input:Measurement Types"
	iL1D enum { "Voltage"=10322, "Voltage RMS"=10350, "Current"=10134, "Current RMS"=10351, "More:Voltage:Custom with Excitation"=10323, "More:Bridge (V/V)"=15908, "Frequency"=10181, "Resistance"=10278, "Temperature:Thermocouple"=10303, "Temperature:Thermistor"=10302, "Temperature:RTD"=10301, "Temperature:Built-in Sensor"=10311, "Strain Gage"=10300, "Rosette Strain Gage"=15980, "Position:LVDT"=10352, "Position:RVDT"=10353, "Position:Eddy Current Proximity Probe"=14835, "Accelerometer"=10356, "Acceleration:Charge"=16104, "Acceleration:4 Wire DC Voltage"=16106, "Velocity:IEPE Sensor"=15966, "Force:Bridge"=15899, "Force:IEPE Sensor"=15895, "Pressure:Bridge"=15902, "Sound Pressure:Microphone"=10354, "Torque:Bridge"=15905, "TEDS Sensor"=12531, "Charge"=16105 }	readonly		25	2FD7
	"Indicates the measurement types supported by the channel."	"attr2fd7.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2FD7	set2FD7	@NoReset

attribute: "AI.TermCfgs"
	"Analog Input:Input Configuration:Terminal Configurations"
	iL1D enum { "RSE"=10083, "NRSE"=10078, "Differential"=10106, "Pseudodifferential"=12529 }	readonly		25	2342
	"Indicates the list of terminal configurations supported by the channel."	"attr2342.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesI32EnumVtrAP	setCapabilitiesI32EnumVtrAP	@NoReset

attribute: "AI.InputSrcs"
	"Analog Input:Input Configuration:Input Sources"
	string1D	readonly		25	2FD8
	"Indicates the list of input sources supported by the channel. Channels may support using the signal from the I/O connector or one of several calibration signals."	"attr2fd8.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesWstringVtrAP	setCapabilitiesWstringVtrAP	@NoReset

attribute: "AI.SensorPower.Types"
	"Analog Input:Signal Conditioning:Sensor Power:Types"
	iL1D enum { "DC"=10050, "AC"=10045, "BipolarDC"=16147 }	readonly		25	3179
	"Indicates the types of power supplied to the sensor supported by this channel."	"attr3179.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesI32EnumVtrAP	setCapabilitiesI32EnumVtrAP	@NoReset

attribute: "AI.SensorPower.VoltageRangeVals"
	"Analog Input:Signal Conditioning:Sensor Power:Voltage Range Values"
	fD1D	readonly		25	317A
	"Indicates pairs of sensor power voltage ranges supported by this channel. Each pair consists of the low value followed by the high value."	"attr317a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64VtrAP	setCapabilitiesF64VtrAP	@NoReset

attribute: "AI.PowerControl.Voltage"
	"Analog Input:Signal Conditioning:Sensor Power:Power Control:Voltage"
	fD	readwrite		25	316C
	"Specifies the voltage level for the sensor's power supply."	"attr316c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64AP	setCapabilitiesF64AP	resetCapabilitiesF64AP

attribute: "AI.PowerControl.Enable"
	"Analog Input:Signal Conditioning:Sensor Power:Power Control:Enable"
	bool	readwrite		25	316D
	"Specifies whether to turn on the sensor's power supply."	"attr316d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesBoolAP	setCapabilitiesBoolAP	resetCapabilitiesBoolAP

attribute: "AI.PowerControl.Type"
	"Analog Input:Signal Conditioning:Sensor Power:Power Control:Type"
	iL enum { "DC"=10050, "AC"=10045, "BipolarDC"=16147 }	readwrite		25	316E
	"Specifies the type of power supplied to the sensor."	"attr316e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesI32EnumAP	setCapabilitiesI32EnumAP	resetCapabilitiesI32EnumAP

attribute: "AI.SensorPower.OpenChan"
	"Analog Input:Signal Conditioning:Sensor Power:Status:Open Channel"
	bool	readonly		25	317C
	"Indicates whether there is an open channel or undercurrent condition on the channel."	"attr317c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesBoolAP	setCapabilitiesBoolAP	@NoReset

attribute: "AI.SensorPower.Overcurrent"
	"Analog Input:Signal Conditioning:Sensor Power:Status:Overcurrent"
	bool	readonly		25	317D
	"Indicates whether there is an overcurrent condition on the channel."	"attr317d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesBoolAP	setCapabilitiesBoolAP	@NoReset

attribute: "AO.OutputTypes"
	"Analog Output:Output Types"
	iL1D enum { "Voltage"=10322, "Current"=10134, "Function Generation"=14750 }	readonly		25	2FD9
	"Indicates the output types supported by the channel."	"attr2fd9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2FD9	set2FD9	@NoReset

attribute: "AO.PowerUpOutputTypes"
	"Analog Output:Power Up Output Types"
	iL1D enum { "Voltage"=10322, "Current"=10134, "High-Impedance"=12527 }	readonly		25	304E
	"Indicates the power up output types supported by the channel."	"attr304e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get304E	set304E	@NoReset

attribute: "AO.TermCfgs"
	"Analog Output:Output Configuration:Terminal Configurations"
	iL1D enum { "RSE"=10083, "Differential"=10106, "Pseudodifferential"=12529 }	readonly		25	29A3
	"Indicates the list of terminal configurations supported by the channel."	"attr29a3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesI32EnumVtrAP	setCapabilitiesI32EnumVtrAP	@NoReset

attribute: "AO.ManualControl.Enable"
	"Analog Output:Advanced:Manual Control:Enable"
	bool	readwrite		25	2A1E
	"Specifies if you can control the physical channel externally via a manual control located on the device. You cannot simultaneously control a channel manually and with NI-DAQmx."	"attr2a1e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesBoolAP	setCapabilitiesBoolAP	resetCapabilitiesBoolAP

attribute: "AO.ManualControl.ShortDetected"
	"Analog Output:Advanced:Manual Control:Short Detected"
	bool	readonly		25	2EC3
	"Indicates whether the physical channel is currently disabled due to a short detected on the channel."	"attr2ec3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesBoolAP	setCapabilitiesBoolAP	@NoReset

attribute: "AO.ManualControl.Amplitude"
	"Analog Output:Advanced:Manual Control:Amplitude"
	fD	readonly		25	2A1F
	"Indicates the current value of the front panel amplitude control for the physical channel in volts."	"attr2a1f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64AP	setCapabilitiesF64AP	@NoReset

attribute: "AO.ManualControl.Freq"
	"Analog Output:Advanced:Manual Control:Frequency"
	fD	readonly		25	2A20
	"Indicates the current value of the front panel frequency control for the physical channel in hertz."	"attr2a20.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64AP	setCapabilitiesF64AP	@NoReset

attribute: "AO.PowerAmp.ChannelEnable"
	"Analog Output:Advanced:Power Amplifier:Channel Enable"
	bool	readwrite		25	3062
	"Specifies whether to enable or disable a channel for amplification. This property can also be used to check if a channel is enabled."	"attr3062.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesBoolAP	setCapabilitiesBoolAP	resetCapabilitiesBoolAP

attribute: "AO.PowerAmp.ScalingCoeff"
	"Analog Output:Advanced:Power Amplifier:Scaling Coefficients"
	fD1D	readonly		25	3063
	"Indicates the coefficients of a polynomial equation used to scale from pre-amplified values."	"attr3063.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64VtrAP	setCapabilitiesF64VtrAP	@NoReset

attribute: "AO.PowerAmp.Overcurrent"
	"Analog Output:Advanced:Power Amplifier:Overcurrent"
	bool	readonly		25	3064
	"Indicates if the channel detected an overcurrent condition."	"attr3064.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesBoolAP	setCapabilitiesBoolAP	@NoReset

attribute: "AO.PowerAmp.Gain"
	"Analog Output:Advanced:Power Amplifier:Calibration:Gain"
	fD	readonly		25	3065
	"Indicates the calibrated gain of the channel."	"attr3065.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64AP	setCapabilitiesF64AP	@NoReset

attribute: "AO.PowerAmp.Offset"
	"Analog Output:Advanced:Power Amplifier:Calibration:Offset"
	fD	readonly		25	3066
	"Indicates the calibrated offset of the channel in volts."	"attr3066.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesF64AP	setCapabilitiesF64AP	@NoReset

attribute: "DI.PortWidth"
	"Digital Input:Port Width"
	uL	readonly		25	29A4
	"Indicates in bits the width of digital input port."	"attr29a4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesU32AP	setCapabilitiesU32AP	@NoReset

attribute: "DI.SampClkSupported"
	"Digital Input:Timing:Sample Clock Supported"
	bool	readonly		25	29A5
	"Indicates if the sample clock timing type is supported for the digital input physical channel."	"attr29a5.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesBoolAP	setCapabilitiesBoolAP	@NoReset

attribute: "DI.SampModes"
	"Digital Input:Timing:Sample Modes"
	iL1D enum { "Finite Samples"=10178, "Continuous Samples"=10123, "Hardware Timed Single Point"=12522 }	readonly		25	2FE0
	"Indicates the sample modes supported by devices that support sample clocked digital input."	"attr2fe0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesI32EnumVtrAP	setCapabilitiesI32EnumVtrAP	@NoReset

attribute: "DI.ChangeDetectSupported"
	"Digital Input:Timing:Change Detection Supported"
	bool	readonly		25	29A6
	"Indicates if the change detection timing type is supported for the digital input physical channel."	"attr29a6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesBoolAP	setCapabilitiesBoolAP	@NoReset

attribute: "DO.PortWidth"
	"Digital Output:Port Width"
	uL	readonly		25	29A7
	"Indicates in bits the width of digital output port."	"attr29a7.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesU32AP	setCapabilitiesU32AP	@NoReset

attribute: "DO.SampClkSupported"
	"Digital Output:Timing:Sample Clock Supported"
	bool	readonly		25	29A8
	"Indicates if the sample clock timing type is supported for the digital output physical channel."	"attr29a8.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesBoolAP	setCapabilitiesBoolAP	@NoReset

attribute: "DO.SampModes"
	"Digital Output:Timing:Sample Modes"
	iL1D enum { "Finite Samples"=10178, "Continuous Samples"=10123, "Hardware Timed Single Point"=12522 }	readonly		25	2FE1
	"Indicates the sample modes supported by devices that support sample clocked digital output."	"attr2fe1.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getCapabilitiesI32EnumVtrAP	setCapabilitiesI32EnumVtrAP	@NoReset

attribute: "CI.MeasTypes"
	"Counter Input:Measurement Types"
	iL1D enum { "Count Edges"=10125, "Frequency"=10179, "Period"=10256, "Pulse Width"=10359, "Semi Period"=10289, "Pulse Frequency"=15864, "Pulse Time"=15865, "Pulse Ticks"=15866, "Duty Cycle"=16070, "Position:Angular Encoder"=10360, "Position:Linear Encoder"=10361, "Velocity:Angular Encoder"=16078, "Velocity:Linear Encoder"=16079, "Two Edge Separation"=10267, "GPS Timestamp"=10362 }	readonly		25	2FDA
	"Indicates the measurement types supported by the channel."	"attr2fda.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2FDA	set2FDA	@NoReset

attribute: "CO.OutputTypes"
	"Counter Output:Output Types"
	iL1D enum { "Pulse:Time"=10269, "Pulse:Frequency"=10119, "Pulse:Ticks"=10268 }	readonly		25	2FDB
	"Indicates the output types supported by the channel."	"attr2fdb.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2FDB	set2FDB	@NoReset

attribute: "TEDS.MfgID"
	"TEDS:ManufacturerID"
	uL	readonly		25	21DA
	"Indicates the manufacturer ID of the sensor."	"attr21da.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get21DA	set21DA	@NoReset

attribute: "TEDS.ModelNum"
	"TEDS:Model Number"
	uL	readonly		25	21DB
	"Indicates the model number of the sensor."	"attr21db.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get21DB	set21DB	@NoReset

attribute: "TEDS.SerialNum"
	"TEDS:Serial Number"
	uL	readonly		25	21DC
	"Indicates the serial number of the sensor."	"attr21dc.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get21DC	set21DC	@NoReset

attribute: "TEDS.VersionNum"
	"TEDS:Version Number"
	uL	readonly		25	21DD
	"Indicates the version number of the sensor."	"attr21dd.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get21DD	set21DD	@NoReset

attribute: "TEDS.VersionLetter"
	"TEDS:Version Letter"
	string	readonly		25	21DE
	"Indicates the version letter of the sensor."	"attr21de.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get21DE	set21DE	@NoReset

attribute: "TEDS.BitStream"
	"TEDS:BitStream"
	uB1D	readonly		25	21DF
	"Indicates the TEDS binary bitstream without checksums."	"attr21df.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get21DF	set21DF	@NoReset

attribute: "TEDS.TemplateIDs"
	"TEDS:TemplateIDs"
	uL1D	readonly		25	228F
	"Indicates the IDs of the templates in the bitstream in TEDS.BitStream."	"attr228f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get228F	set228F	@NoReset


///// DAQmx Read Class Definition /////
class: "DAQmx Read"
genericType: NIDAQ
termName: "task"
termNameOut: "task out"
hasActiveProp: yes
className: "DAQmx Read"
super: "DAQ Object"
flags: 2

attribute: "RelativeTo"
	"RelativeTo"
	iL enum { "First Sample"=10424, "Current Read Position"=10425, "Reference Trigger"=10426, "First Pretrigger Sample"=10427, "Most Recent Sample"=10428 }	readwrite		25	190A
	"Specifies the point in the buffer at which to begin a read operation. If you also specify an offset with Offset, the read operation begins at that offset relative to the point you select with this property. The default value is Current Read Position unless you configure a Reference Trigger for the task. If you configure a Reference Trigger, the default value is First Pretrigger Sample."	"attr190a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getReaderI32EnumAP	setReaderI32EnumAP	resetReaderI32EnumAP

attribute: "Offset"
	"Offset"
	iL	readwrite		25	190B
	"Specifies an offset in samples per channel at which to begin a read operation. This offset is relative to the location you specify with RelativeTo."	"attr190b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getReaderI32AP	setReaderI32AP	resetReaderI32AP

attribute: "ChannelsToRead"
	"Channels to Read"
	DAQChannel	readwrite		25	1823
	"Specifies a subset of channels in the task from which to read."	"attr1823.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1823	set1823	reset1823

attribute: "WfmAttr"
	"Waveform Attributes"
	iL enum { "Samples"=10287, "Samples and Timing"=10140, "Samples, Timing, and Attributes"=10141 }	readwrite		25	1225
	"Specifies the waveform data type attributes to return. Returning fewer attributes increases performance."	"attr1225.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1225	set1225	reset1225

attribute: "ReadAllAvailSamp"
	"Read All Available Samples"
	bool	readwrite		25	1215
	"Specifies whether subsequent read operations read all samples currently available in the buffer or wait for the buffer to become full before reading. NI-DAQmx uses this setting for finite acquisitions and only when the number of samples to read is -1. For continuous acquisitions when the number of samples to read is -1, a read operation always reads all samples currently available in the buffer."	"attr1215.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1215	set1215	reset1215

attribute: "AutoStart"
	"Auto Start"
	bool	readwrite		25	1826
	"Specifies if DAQmx Read automatically starts the task  if you did not start the task explicitly by using DAQmx Start Task. The default value is TRUE. When  DAQmx Read starts a finite acquisition task, it also stops the task after reading the last sample."	"attr1826.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getReaderBoolAP	setReaderBoolAP	resetReaderBoolAP

attribute: "OverWrite"
	"OverWrite Mode"
	iL enum { "Overwrite Unread Samples"=10252, "Do Not Overwrite Unread Samples"=10159 }	readwrite		25	1211
	"Specifies whether to overwrite samples in the buffer that you have not yet read."	"attr1211.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getDeviceI32EnumAP	setDeviceI32EnumAP	resetDeviceI32EnumAP

attribute: "Logging.FilePath"
	"Logging:File Path"
	path	readwrite		25	2EC4
	"Specifies the path to the TDMS file to which you want to log data.  If the file path is changed while the task is running, this takes effect on the next sample interval (if Logging.SampsPerFile has been set) or when DAQmx Start New File is called. New file paths can be specified by ending with '\' or '/'. Files created after specifying a new file path retain the same name and numbering sequence."	"attr2ec4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getReaderPathStringAP	setReaderPathStringAP	resetReaderPathStringAP

attribute: "Logging.Mode"
	"Logging:Mode"
	iL enum { "Off"=10231, "Log"=15844, "Log and Read"=15842 }	readwrite		25	2EC5
	"Specifies whether to enable logging and whether to allow reading data while logging. Log mode allows for the best performance. However, you cannot read data while logging if you specify this mode. If you want to read data while logging, specify Log and Read mode."	"attr2ec5.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getReaderI32EnumAP	setReaderI32EnumAP	resetReaderI32EnumAP

attribute: "Logging.TDMS.GroupName"
	"Logging:TDMS:Group Name"
	string	readwrite		25	2EC6
	"Specifies the name of the group to create within the TDMS file for data from this task. If you append data to an existing file and the specified group already exists, NI-DAQmx appends a number symbol and a number to the group name, incrementing that number until finding a group name that does not exist. For example, if you specify a group name of Voltage Task, and that group already exists, NI-DAQmx assigns the group name Voltage Task #1, then Voltage Task #2."	"attr2ec6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getReaderWstringAP	setReaderWstringAP	resetReaderWstringAP

attribute: "Logging.TDMS.Operation"
	"Logging:TDMS:Operation"
	iL enum { "Open"=10437, "Open or Create"=15846, "Create or Replace"=15847, "Create"=15848 }	readwrite		25	2EC7
	"Specifies how to open the TDMS file."	"attr2ec7.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getReaderI32EnumAP	setReaderI32EnumAP	resetReaderI32EnumAP

attribute: "Logging.Pause"
	"Logging:Pause"
	bool	readwrite		25	2FE3
	"Specifies whether logging is paused while a task is executing. If Logging.Mode is set to Log and Read mode, this value is taken into consideration on the next call to DAQmx Read, where data is written to disk. If Logging.Mode is set to Log Only mode, this value is taken into consideration the next time that data is written to disk. A new TDMS group is written when logging is resumed from a paused state."	"attr2fe3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getReaderBoolAP	setReaderBoolAP	resetReaderBoolAP

attribute: "Logging.SampsPerFile"
	"Logging:Samples Per File"
	uQ	readwrite		25	2FE4
	"Specifies how many samples to write to each file. When the file reaches the number of samples specified, a new file is created with the naming convention of <filename>_####.tdms, where #### starts at 0001 and increments automatically with each new file. For example, if the file specified is C:\data.tdms, the next file name used is C:\data_0001.tdms. To disable file spanning behavior, set this attribute to 0. If Logging.FilePath is changed while this attribute is set, the new file path takes effect on the next file created."	"attr2fe4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getReaderU64AP	setReaderU64AP	resetReaderU64AP

attribute: "Logging.FileWriteSize"
	"Logging:File Write Size"
	uL	readwrite		25	2FC3
	"Specifies the size, in samples, in which data will be written to disk.  The size must be evenly divisible by the volume sector size, in bytes."	"attr2fc3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getReaderU32AP	setReaderU32AP	resetReaderU32AP

attribute: "Logging.FilePreallocationSize"
	"Logging:File Pre-allocation Size"
	uQ	readwrite		25	2FC6
	"Specifies a size in samples to be used to pre-allocate space on disk.  Pre-allocation can improve file I/O performance, especially in situations where multiple files are being written to disk.  For finite tasks, the default behavior is to pre-allocate the file based on the number of samples you configure the task to acquire."	"attr2fc6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getReaderU64AP	setReaderU64AP	resetReaderU64AP

attribute: "CurrReadPos"
	"Status:Current Read Position"
	fD	readonly		25	1221
	"Indicates in samples per channel the current position in the buffer."	"attr1221.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getReaderF64U64AP	setReaderF64U64AP	@NoReset

attribute: "AvailSampPerChan"
	"Status:Available Samples Per Channel"
	uL	readonly		25	1223
	"Indicates the number of samples available to read per channel. This value is the same for all channels in the task."	"attr1223.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getReaderU32AP	setReaderU32AP	@NoReset

attribute: "TotalSampPerChanAcquired"
	"Status:Total Samples Per Channel Acquired"
	fD	readonly		25	192A
	"Indicates the total number of samples acquired by each channel. NI-DAQmx returns a single value because this value is the same for all channels. For retriggered acquisitions, this value is the cumulative number of samples across all retriggered acquisitions."	"attr192a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getReaderF64U64AP	setReaderF64U64AP	@NoReset

attribute: "CommonModeRangeErrorChansExist"
	"Status:Common Mode Range Error:Common Mode Range Error Channels Exist"
	bool	readonly		25	2A98
	"Indicates if the device(s) detected a common mode range violation for any virtual channel in the task. Common mode range violation occurs when the voltage of either the positive terminal or negative terminal to ground are out of range. Reading this property clears the common mode range violation status for all channels in the task. You must read this property before you read CommonModeRangeErrorChans. Otherwise, you will receive an error."	"attr2a98.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2A98	set2A98	@NoReset

attribute: "CommonModeRangeErrorChans"
	"Status:Common Mode Range Error:Common Mode Range Error Channels"
	string1D	readonly		25	2A99
	"Indicates a list of names of any virtual channels in the task for which the device(s) detected a common mode range violation. You must read CommonModeRangeErrorChansExist before you read this property. Otherwise, you will receive an error."	"attr2a99.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2A99	set2A99	@NoReset

attribute: "ExcitFaultChansExist"
	"Status:Excitation Fault:Excitation Fault Channels Exist"
	bool	readonly		25	3088
	"Indicates if the device(s) detected an excitation fault condition for any virtual channel in the task. Reading this property clears the excitation fault status for all channels in the task. You must read this property before you read ExcitFaultChans. Otherwise, you will receive an error."	"attr3088.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get3088	set3088	@NoReset

attribute: "ExcitFaultChans"
	"Status:Excitation Fault:Excitation Fault Channels"
	string1D	readonly		25	3089
	"Indicates a list of names of any virtual channels in the task for which the device(s) detected an excitation fault condition. You must read ExcitFaultChansExist before you read this property. Otherwise, you will receive an error."	"attr3089.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get3089	set3089	@NoReset

attribute: "OvercurrentChansExist"
	"Status:Overcurrent:Overcurrent Channels Exist"
	bool	readonly		25	29E6
	"Indicates if the device(s) detected an overcurrent condition for any virtual channel in the task. Reading this property clears the overcurrent status for all channels in the task. You must read this property before you read OvercurrentChans. Otherwise, you will receive an error."	"attr29e6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get29E6	set29E6	@NoReset

attribute: "OvercurrentChans"
	"Status:Overcurrent:Overcurrent Channels"
	string1D	readonly		25	29E7
	"Indicates a list of names of any virtual channels in the task for which the device(s) detected an overcurrent condition. You must read OvercurrentChansExist before you read this property. Otherwise, you will receive an error. On some devices, you must restart the task for all overcurrent channels to recover."	"attr29e7.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get29E7	set29E7	@NoReset

attribute: "OvertemperatureChansExist"
	"Status:Overtemperature:Overtemperature Channels Exist"
	bool	readonly		25	3081
	"Indicates if the device(s) detected an overtemperature condition in any virtual channel in the task. Reading this property clears the overtemperature status for all channels in the task. You must read this property before you read OvertemperatureChans. Otherwise, you will receive an error."	"attr3081.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get3081	set3081	@NoReset

attribute: "OvertemperatureChans"
	"Status:Overtemperature:Overtemperature Channels"
	string1D	readonly		25	3082
	"Indicates a list of names of any overtemperature virtual channels. You must read OvertemperatureChansExist before you read this property. Otherwise, you will receive an error."	"attr3082.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get3082	set3082	@NoReset

attribute: "OpenChansExist"
	"Status:Open Channels:Open Channels Exist"
	bool	readonly		25	3100
	"Indicates if the device or devices detected an open channel condition in any virtual channel in the task. Reading this property clears the open channel status for all channels in this task. You must read this property before you read OpenChans. Otherwise, you will receive an error."	"attr3100.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get3100	set3100	@NoReset

attribute: "OpenChans"
	"Status:Open Channels:Open Channels"
	string1D	readonly		25	3101
	"Indicates a list of names of any open virtual channels. You must read OpenChansExist before you read this property. Otherwise you will receive an error."	"attr3101.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get3101	set3101	@NoReset

attribute: "OpenChansDetails"
	"Status:Open Channels:Open Channels Details"
	string1D	readonly		25	3102
	"Indicates a list of details of any open virtual channels. You must read OpenChansExist before you read this property. Otherwise you will receive an error."	"attr3102.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getDeviceWstringVtrAP	setDeviceWstringVtrAP	@NoReset

attribute: "OpenCurrentLoopChansExist"
	"Status:Open Current Loop:Open Current Loop Channels Exist"
	bool	readonly		25	2A09
	"Indicates if the device(s) detected an open current loop for any virtual channel in the task. Reading this property clears the open current loop status for all channels in the task. You must read this property before you read OpenCurrentLoopChans. Otherwise, you will receive an error."	"attr2a09.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2A09	set2A09	@NoReset

attribute: "OpenCurrentLoopChans"
	"Status:Open Current Loop:Open Current Loop Channels"
	string1D	readonly		25	2A0A
	"Indicates a list of names of any virtual channels in the task for which the device(s) detected an open current loop. You must read OpenCurrentLoopChansExist before you read this property. Otherwise, you will receive an error."	"attr2a0a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2A0A	set2A0A	@NoReset

attribute: "OpenThrmcplChansExist"
	"Status:Open Thermocouple:Open Thermocouple Channels Exist"
	bool	readonly		25	2A96
	"Indicates if the device(s) detected an open thermocouple connected to any virtual channel in the task. Reading this property clears the open thermocouple status for all channels in the task. You must read this property before you read OpenThrmcplChans. Otherwise, you will receive an error."	"attr2a96.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2A96	set2A96	@NoReset

attribute: "OpenThrmcplChans"
	"Status:Open Thermocouple:Open Thermocouple Channels"
	string1D	readonly		25	2A97
	"Indicates a list of names of any virtual channels in the task for which the device(s) detected an open thermcouple. You must read OpenThrmcplChansExist before you read this property. Otherwise, you will receive an error."	"attr2a97.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2A97	set2A97	@NoReset

attribute: "OverloadedChansExist"
	"Status:Overload:Overloaded Channels Exist"
	bool	readonly		25	2174
	"Indicates if the device(s) detected an overload in any virtual channel in the task. Reading this property clears the overload status for all channels in the task. You must read this property before you read OverloadedChans. Otherwise, you will receive an error."	"attr2174.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2174	set2174	@NoReset

attribute: "OverloadedChans"
	"Status:Overload:Overloaded Channels"
	string1D	readonly		25	2175
	"Indicates a list of names of any overloaded virtual channels in the task. You must read OverloadedChansExist before you read this property. Otherwise, you will receive an error."	"attr2175.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2175	set2175	@NoReset

attribute: "InputLimitsFaultChansExist"
	"Status:Input Limits Fault:Input Limits Fault Channels Exist"
	bool	readonly		25	318F
	"Indicates if the device or devices detected a sample that was outside the upper or lower limits configured for each channel in the task. Reading this property clears the input limits fault channel status for all channels in the task. You must read this property before you read InputLimitsFaultChans. Otherwise, you will receive an error. Note: Fault detection applies to both positive and negative inputs. For instance, if you specify a lower limit of 2 mA and an upper limit of 12 mA, NI-DAQmx detects a fault at 15 mA and -15 mA, but not at -6 mA because it is in the range of -12 mA to -2 mA."	"attr318f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get318F	set318F	@NoReset

attribute: "InputLimitsFaultChans"
	"Status:Input Limits Fault:Input Limits Fault Channels"
	string1D	readonly		25	3190
	"Indicates the virtual channels that have detected samples outside the upper or lower limits configured for each channel in the task. You must read InputLimitsFaultChansExist before you read this property. Otherwise, you will receive an error."	"attr3190.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get3190	set3190	@NoReset

attribute: "PLL.UnlockedChansExist"
	"Status:Phase-Locked Loop:Unlocked Channels Exist"
	bool	readonly		25	3118
	"Indicates whether the PLL is currently locked, or whether it became unlocked during the previous acquisition. Devices may report PLL Unlock either during acquisition or after acquisition."	"attr3118.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get3118	set3118	@NoReset

attribute: "PLL.UnlockedChans"
	"Status:Phase-Locked Loop:Unlocked Channels"
	string1D	readonly		25	3119
	"Indicates the channels that had their PLLs unlock."	"attr3119.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get3119	set3119	@NoReset

attribute: "PowerSupplyFaultChansExist"
	"Status:Power Supply Fault:Power Supply Fault Channels Exist"
	bool	readonly		25	3192
	"Indicates if the device or devices detected a power supply fault condition in any virtual channel in the task. Reading this property clears the power supply fault status for all channels in this task. You must read this property before you read PowerSupplyFaultChans. Otherwise, you will receive an error."	"attr3192.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get3192	set3192	@NoReset

attribute: "PowerSupplyFaultChans"
	"Status:Power Supply Fault:Power Supply Fault Channels"
	string1D	readonly		25	3193
	"Indicates the virtual channels that have detected a power supply fault. You must read PowerSupplyFaultChansExist before you read this property. Otherwise, you will receive an error."	"attr3193.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get3193	set3193	@NoReset

attribute: "Sync.UnlockedChansExist"
	"Status:Synchronization:Unlocked Channels Exist"
	bool	readonly		25	313D
	"Indicates whether the target is currently locked to the grand master. Devices may report PLL Unlock either during acquisition or after acquisition."	"attr313d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get313D	set313D	@NoReset

attribute: "Sync.UnlockedChans"
	"Status:Synchronization:Unlocked Channels"
	string1D	readonly		25	313E
	"Indicates the channels from devices in an unlocked target."	"attr313e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get313E	set313E	@NoReset

attribute: "AccessoryInsertionOrRemovalDetected"
	"Status:Accessory:Accessory Insertion or Removal Detected"
	bool	readonly		25	2F70
	"Indicates if any device(s) in the task detected the insertion or removal of an accessory since the task started. Reading this property clears the accessory change status for all channels in the task. You must read this property before you read DevsWithInsertedOrRemovedAccessories. Otherwise, you will receive an error."	"attr2f70.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2F70	set2F70	@NoReset

attribute: "DevsWithInsertedOrRemovedAccessories"
	"Status:Accessory:Devices with Inserted or Removed Accessories"
	string1D	readonly		25	2F71
	"Indicates the names of any devices that detected the insertion or removal of an accessory since the task started. You must read AccessoryInsertionOrRemovalDetected before you read this property. Otherwise, you will receive an error."	"attr2f71.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2F71	set2F71	@NoReset

attribute: "ChangeDetect.Overflowed"
	"Status:Advanced:ChangeDetection:Overflowed"
	bool	readonly		25	2194
	"Indicates if samples were missed because change detection events occurred faster than the device could handle them. Some devices detect overflows differently than others."	"attr2194.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	@NoReset

attribute: "RawDataWidth"
	"Advanced:Raw Data Width"
	uL	readonly		25	217A
	"Indicates in bytes the size of a raw sample from the task."	"attr217a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get217A	set217A	@NoReset

attribute: "NumChans"
	"Advanced:Number of Channels"
	uL	readonly		25	217B
	"Indicates the number of channels that DAQmx Read reads from the task. This value is the number of channels in the task or the number of channels you specify with ChannelsToRead."	"attr217b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get217B	set217B	@NoReset

attribute: "DI.NumBooleansPerChan"
	"Advanced:Digital Input:Number of Booleans Per Channel"
	uL	readonly		25	217C
	"Indicates the number of Booleans per channel that NI-DAQmx returns in a sample for line-based reads. If a channel has fewer lines than this number, the extra Booleans are FALSE."	"attr217c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get217C	set217C	@NoReset

attribute: "WaitMode"
	"Advanced:Wait Mode"
	iL enum { "Wait For Interrupt"=12523, "Poll"=12524, "Yield"=12525, "Sleep"=12547 }	readwrite		25	2232
	"Specifies how DAQmx Read waits for samples to become available."	"attr2232.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getDeviceI32EnumAP	setDeviceI32EnumAP	resetDeviceI32EnumAP

attribute: "SleepTime"
	"Advanced:Sleep Time"
	fD	readwrite		25	22B0
	"Specifies in seconds the amount of time to sleep after checking for available samples if WaitMode is Sleep."	"attr22b0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getDeviceF64AP	setDeviceF64AP	resetDeviceF64AP


///// DAQmx Real-Time Class Definition /////
class: "DAQmx Real-Time"
genericType: NIDAQ
termName: "task"
termNameOut: "task out"
hasActiveProp: yes
className: "DAQmx Real-Time"
super: "DAQ Object"
flags: 2

attribute: "ConvLateErrorsToWarnings"
	"Convert Late Errors To Warnings"
	bool	readwrite		25	22EE
	"Specifies if DAQmx Wait for Next Sample Clock, DAQmx Read, and DAQmx Write convert late errors to warnings. NI-DAQmx returns no late warnings or errors until the number of warmup iterations you specify with NumOfWarmupIters execute."	"attr22ee.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "NumOfWarmupIters"
	"Number Of Warmup Iterations"
	uL	readwrite		25	22ED
	"Specifies the number of loop iterations that must occur before DAQmx Wait for Next Sample Clock and DAQmx Read return any late warnings or errors. The system needs a number of iterations to stabilize. During this period, a large amount of jitter occurs, potentially causing reads and writes to be late. The default number of warmup iterations is 100. Specify a larger number if needed to stabilize the system."	"attr22ed.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingU32AP	setTimingU32AP	resetTimingU32AP

attribute: "WaitForNextSampClkWaitMode"
	"Wait For Next Sample Clock Wait Mode"
	iL enum { "Wait For Interrupt"=12523, "Poll"=12524 }	readwrite		25	22EF
	"Specifies how DAQmx Wait for Next Sample Clock waits for the next Sample Clock pulse."	"attr22ef.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "ReportMissedSamp"
	"Report Missed Samples"
	bool	readwrite		25	2319
	"Specifies whether DAQmx Read returns lateness errors or warnings when it detects missed Sample Clock pulses. This setting does not affect DAQmx Wait for Next Sample Clock. Set this property to TRUE for applications that need to detect lateness without using DAQmx Wait for Next Sample Clock."	"attr2319.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getDeviceBoolAP	setDeviceBoolAP	resetDeviceBoolAP

attribute: "WriteRecoveryMode"
	"Write Recovery Mode"
	iL enum { "Wait For Interrupt"=12523, "Poll"=12524 }	readwrite		25	231A
	"Specifies how NI-DAQmx attempts to recover after missing a Sample Clock pulse when performing counter writes."	"attr231a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP


///// DAQmx Scale Class Definition /////
class: "DAQmx Scale"
genericType: NIDAQ
termName: "reference"
termNameOut: "reference"
hasActiveProp: yes
className: "DAQmx Scale"
super: "DAQ Object"
flags: 10

attribute: "ActiveScale"
	"Active Scale"
	DAQScale	writeonly		27	175C
	"Specifies the name of the custom scale to modify."	"attr175c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get175C	set175C	@NoReset

attribute: "Descr"
	"Description"
	string	readwrite		25	1226
	"Specifies a description for the scale."	"attr1226.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1226	set1226	@NoReset

attribute: "ScaledUnits"
	"Scaled Units"
	string	readwrite		25	191B
	"Specifies the units to use for scaled values. You can use an arbitrary string."	"attr191b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get191B	set191B	@NoReset

attribute: "PreScaledUnits"
	"Pre-Scaled Units"
	iL enum { "Volts"=10348, "Amps"=10342, "Deg F"=10144, "Deg C"=10143, "Deg R"=10145, "Kelvins"=10325, "Strain"=10299, "Ohms"=10384, "Hz"=10373, "Seconds"=10364, "Meters"=10219, "Inches"=10379, "Degrees"=10146, "Radians"=10273, "Ticks"=10304, "RPM"=16080, "Radians/s"=16081, "Degrees/s"=16082, "g"=10186, "m/s^2"=12470, "in/s^2"=12471, "m/s"=15959, "in/s"=15960, "Pascals"=10081, "Newtons"=15875, "Pounds"=15876, "kgf"=15877, "psi"=15879, "bar"=15880, "Nm"=15881, "oz-in"=15882, "lb-in"=15883, "lb-ft"=15884, "Volts/Volt"=15896, "mVolts/Volt"=15897, "Coulombs"=16102, "PicoCoulombs"=16103, "From TEDS"=12516 }	readwrite		25	18F7
	"Specifies the units of the values that you want to scale."	"attr18f7.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get18F7	set18F7	@NoReset

attribute: "ScaleType"
	"Scale Type"
	iL enum { "Linear"=10447, "Map Ranges"=10448, "Polynomial"=10449, "Table"=10450 }	readonly		25	1929
	"Indicates the method or equation form that the custom scale uses."	"attr1929.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1929	set1929	@NoReset

attribute: "Lin.Slope"
	"Linear:Slope"
	fD	readwrite		25	1227
	"Specifies the slope, m, in the equation y=mx+b."	"attr1227.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1227	set1227	@NoReset

attribute: "Lin.YIntercept"
	"Linear:Y-Intercept"
	fD	readwrite		25	1228
	"Specifies the y-intercept, b, in the equation y=mx+b."	"attr1228.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1228	set1228	@NoReset

attribute: "Map.ScaledMax"
	"Map:Scaled Maximum Value"
	fD	readwrite		25	1229
	"Specifies the largest value in the range of scaled values. NI-DAQmx maps this value to Map.PreScaledMax. Reads coerce samples that are larger than this value to match this value. Writes generate errors for samples that are larger than this value."	"attr1229.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1229	set1229	@NoReset

attribute: "Map.PreScaledMax"
	"Map:Pre-Scaled Maximum Value"
	fD	readwrite		25	1231
	"Specifies the largest value in the range of pre-scaled values. NI-DAQmx maps this value to Map.ScaledMax."	"attr1231.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1231	set1231	@NoReset

attribute: "Map.ScaledMin"
	"Map:Scaled Minimum Value"
	fD	readwrite		25	1230
	"Specifies the smallest value in the range of scaled values. NI-DAQmx maps this value to Map.PreScaledMin. Reads coerce samples that are smaller than this value to match this value. Writes generate errors for samples that are smaller than this value."	"attr1230.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1230	set1230	@NoReset

attribute: "Map.PreScaledMin"
	"Map:Pre-Scaled Minimum Value"
	fD	readwrite		25	1232
	"Specifies the smallest value in the range of pre-scaled values. NI-DAQmx maps this value to Map.ScaledMin."	"attr1232.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1232	set1232	@NoReset

attribute: "Poly.ForwardCoeff"
	"Polynomial:Forward Coefficients"
	fD1D	readwrite		25	1234
	"Specifies an array of coefficients for the polynomial that converts pre-scaled values to scaled values. Each element of the array corresponds to a term of the equation. For example, if index three of the array is 9, the fourth term of the equation is 9x^3."	"attr1234.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1234	set1234	@NoReset

attribute: "Poly.ReverseCoeff"
	"Polynomial:Reverse Coefficients"
	fD1D	readwrite		25	1235
	"Specifies an array of coefficients for the polynomial that converts scaled values to pre-scaled values. Each element of the array corresponds to a term of the equation. For example, if index three of the array is 9, the fourth term of the equation is 9y^3."	"attr1235.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1235	set1235	@NoReset

attribute: "Table.ScaledVals"
	"Table:Scaled Values"
	fD1D	readwrite		25	1236
	"Specifies an array of scaled values. These values map directly to the values in Table.PreScaledVals."	"attr1236.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1236	set1236	@NoReset

attribute: "Table.PreScaledVals"
	"Table:Pre-Scaled Values"
	fD1D	readwrite		25	1237
	"Specifies an array of pre-scaled values. These values map directly to the values in Table.ScaledVals."	"attr1237.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1237	set1237	@NoReset


///// DAQmx Switch Channel Class Definition /////
class: "DAQmx Switch Channel"
genericType: NIDAQ
termName: "reference"
termNameOut: "reference"
hasActiveProp: yes
className: "DAQmx Switch Channel"
super: "DAQ Object"
flags: 10

attribute: "ActiveSwitchChan"
	"Active Switch Channel"
	DAQSwitch	writeonly		27	18E3
	"Specifies the switch channel to which the subsequent properties apply."	"attr18e3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get18E3	set18E3	@NoReset

attribute: "Usage"
	"Deprecated:Usage"
	iL enum { "Source"=10439, "Load"=10440, "Reserved for Routing"=10441 }	readwrite		25	18E4
	"(Deprecated) Specifies how you can use the channel. Using this property acts as a safety mechanism to prevent you from connecting two source channels, for example."	"attr18e4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get18E4	set18E4	@NoReset

attribute: "AnlgBusSharingEnable"
	"Deprecated:Analog Bus Sharing Enable"
	bool	readwrite		25	2F9E
	"(Deprecated) Specifies whether to enable sharing of an analog bus line so that multiple switch devices can connect to it simultaneously. For each device that will share the analog bus line, set this property to TRUE to enable sharing on the channel that connects to the analog bus line. Analog bus sharing is disabled by default."	"attr2f9e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2F9E	set2F9E	@NoReset

attribute: "MaxACCarryCurrent"
	"Deprecated:Capability:Max AC Carry Current"
	fD	readonly		25	648
	"(Deprecated) Indicates in amperes the maximum AC current that the device can carry."	"attr648.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get648	set648	@NoReset

attribute: "MaxACSwitchCurrent"
	"Deprecated:Capability:Max AC Switching Current"
	fD	readonly		25	646
	"(Deprecated) Indicates in amperes the maximum AC current that the device can switch. This current is always against an RMS voltage level."	"attr646.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get646	set646	@NoReset

attribute: "MaxACCarryPwr"
	"Deprecated:Capability:Max AC Carry Power"
	fD	readonly		25	642
	"(Deprecated) Indicates in watts the maximum AC power that the device can carry."	"attr642.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get642	set642	@NoReset

attribute: "MaxACSwitchPwr"
	"Deprecated:Capability:Max AC Switching Power"
	fD	readonly		25	644
	"(Deprecated) Indicates in watts the maximum AC power that the device can switch."	"attr644.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get644	set644	@NoReset

attribute: "MaxDCCarryCurrent"
	"Deprecated:Capability:Max DC Carry Current"
	fD	readonly		25	647
	"(Deprecated) Indicates in amperes the maximum DC current that the device can carry."	"attr647.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get647	set647	@NoReset

attribute: "MaxDCSwitchCurrent"
	"Deprecated:Capability:Max DC Switching Current"
	fD	readonly		25	645
	"(Deprecated) Indicates in amperes the maximum DC current that the device can switch. This current is always against a DC voltage level."	"attr645.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get645	set645	@NoReset

attribute: "MaxDCCarryPwr"
	"Deprecated:Capability:Max DC Carry Power"
	fD	readonly		25	643
	"(Deprecated) Indicates in watts the maximum DC power that the device can carry."	"attr643.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get643	set643	@NoReset

attribute: "MaxDCSwitchPwr"
	"Deprecated:Capability:Max DC Switching Power"
	fD	readonly		25	649
	"(Deprecated) Indicates in watts the maximum DC power that the device can switch."	"attr649.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get649	set649	@NoReset

attribute: "MaxACVoltage"
	"Deprecated:Capability:Max AC Voltage"
	fD	readonly		25	651
	"(Deprecated) Indicates in volts the maximum AC RMS voltage that the device can switch."	"attr651.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get651	set651	@NoReset

attribute: "MaxDCVoltage"
	"Deprecated:Capability:Max DC Voltage"
	fD	readonly		25	650
	"(Deprecated) Indicates in volts the maximum DC voltage that the device can switch."	"attr650.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get650	set650	@NoReset

attribute: "WireMode"
	"Deprecated:Capability:Wire Mode"
	uL	readonly		25	18E5
	"(Deprecated) Indicates the number of wires that the channel switches."	"attr18e5.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get18E5	set18E5	@NoReset

attribute: "Bandwidth"
	"Deprecated:Capability:Bandwidth"
	fD	readonly		25	640
	"(Deprecated) Indicates in Hertz the maximum frequency of a signal that can pass through the switch without significant deterioration."	"attr640.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get640	set640	@NoReset

attribute: "Impedance"
	"Deprecated:Capability:Impedance"
	fD	readonly		25	641
	"(Deprecated) Indicates in ohms the switch impedance. This value is important in the RF domain and should match the impedance of the sources and loads."	"attr641.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get641	set641	@NoReset


///// DAQmx Switch Device Class Definition /////
class: "DAQmx Switch Device"
genericType: NIDAQ
termName: "reference"
termNameOut: "reference"
hasActiveProp: yes
className: "DAQmx Switch Device"
super: "DAQ Object"
flags: 10

attribute: "ActiveDev"
	"Active Device"
	DAQDevice	writeonly		27	1869
	"Specifies the switch device to which the subsequent properties apply."	"attr1869.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1869	set1869	@NoReset

attribute: "SettlingTime"
	"Deprecated:Settling Time"
	fD	readwrite		25	1244
	"(Deprecated) Specifies in seconds the amount of time to wait for the switch to settle (or debounce). NI-DAQmx adds this time to the settling time of the motherboard. Modify this property only if the switch does not settle within the settling time of the motherboard. Refer to device documentation for supported settling times."	"attr1244.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1244	set1244	@NoReset

attribute: "AutoConnAnlgBus"
	"Deprecated:Auto Connect Analog Bus"
	bool	readwrite		25	17DA
	"(Deprecated) Specifies if NI-DAQmx routes multiplexed channels to the analog bus backplane. Only the SCXI-1127 and SCXI-1128 support this property."	"attr17da.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get17DA	set17DA	@NoReset

attribute: "PwrDownLatchRelaysAfterSettling"
	"Deprecated:Power Down Latching Relays After Settling"
	bool	readwrite		25	22DB
	"(Deprecated) Specifies if DAQmx Switch Wait for Settling powers down latching relays after waiting for the device to settle."	"attr22db.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get22DB	set22DB	@NoReset

attribute: "Settled"
	"Deprecated:Is Settled"
	bool	readonly		25	1243
	"(Deprecated) Indicates when SettlingTime expires."	"attr1243.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1243	set1243	@NoReset

attribute: "RelayList"
	"Deprecated:Capability:Relay List"
	string	readonly		25	17DC
	"(Deprecated) Indicates a comma-delimited list of relay names."	"attr17dc.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get17DC	set17DC	@NoReset

attribute: "NumRelays"
	"Deprecated:Capability:Number of Relays"
	uL	readonly		25	18E6
	"(Deprecated) Indicates the number of relays on the device. This value matches the number of relay names in RelayList."	"attr18e6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get18E6	set18E6	@NoReset

attribute: "SwitchChanList"
	"Deprecated:Capability:Switch Channel List"
	string	readonly		25	18E7
	"(Deprecated) Indicates a comma-delimited list of channel names for the current topology of the device."	"attr18e7.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get18E7	set18E7	@NoReset

attribute: "NumSwitchChans"
	"Deprecated:Capability:Number of Switch Channels"
	uL	readonly		25	18E8
	"(Deprecated) Indicates the number of switch channels for the current topology of the device. This value matches the number of channel names in SwitchChanList."	"attr18e8.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get18E8	set18E8	@NoReset

attribute: "NumRows"
	"Deprecated:Capability:Number of Rows"
	uL	readonly		25	18E9
	"(Deprecated) Indicates the number of rows on a device in a matrix switch topology. Indicates the number of multiplexed channels on a device in a mux topology."	"attr18e9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get18E9	set18E9	@NoReset

attribute: "NumColumns"
	"Deprecated:Capability:Number of Columns"
	uL	readonly		25	18EA
	"(Deprecated) Indicates the number of columns on a device in a matrix switch topology. This value is always 1 if the device is in a mux topology."	"attr18ea.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get18EA	set18EA	@NoReset

attribute: "Topology"
	"Deprecated:Topology"
	string	readonly		25	193D
	"(Deprecated) Indicates the current topology of the device. This value is one of the topology options in DAQmx Switch Set Topology and Reset."	"attr193d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get193D	set193D	@NoReset

attribute: "Temp"
	"Deprecated:Temperature"
	fD	readonly		25	301A
	"(Deprecated) Indicates the current temperature as read by the Switch module in degrees Celsius. Refer to your device documentation for more information."	"attr301a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get301A	set301A	@NoReset


///// DAQmx Switch Scan Class Definition /////
class: "DAQmx Switch Scan"
genericType: NIDAQ
termName: "task"
termNameOut: "task out"
hasActiveProp: yes
className: "DAQmx Switch Scan"
super: "DAQ Object"
flags: 2

attribute: "BreakMode"
	"Deprecated:Break Mode"
	iL enum { "No Action"=10227, "Break Before Make"=10110 }	readwrite		25	1247
	"(Deprecated) Specifies the action to take between each entry in a scan list."	"attr1247.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getDeviceI32EnumAP	setDeviceI32EnumAP	resetDeviceI32EnumAP

attribute: "RepeatMode"
	"Deprecated:Repeat Mode"
	iL enum { "Finite"=10172, "Continuous"=10117 }	readwrite		25	1248
	"(Deprecated) Specifies if the task advances through the scan list multiple times."	"attr1248.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getDeviceI32EnumAP	setDeviceI32EnumAP	resetDeviceI32EnumAP

attribute: "WaitingForAdv"
	"Deprecated:Is Waiting For Advance"
	bool	readonly		25	17D9
	"(Deprecated) Indicates if the switch hardware is waiting for an  Advance Trigger. If the hardware is waiting, it completed the previous entry in the scan list."	"attr17d9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getDeviceBoolAP	setDeviceBoolAP	@NoReset


///// DAQmx System Class Definition /////
class: "DAQmx System"
genericType: NIDAQ
termName: "reference"
termNameOut: "reference"
hasActiveProp: no
className: "DAQmx System"
super: "DAQ Object"
flags: 10

attribute: "GlobalChans"
	"Global Channels"
	array {1, DAQChannel}	readonly		25	1265
	"Indicates an array that contains the names of all global channels saved on the system."	"attr1265.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1265	set1265	@NoReset

attribute: "Scales"
	"Scales"
	array {1, DAQScale}	readonly		25	1266
	"Indicates an array that contains the names of all custom scales saved on the system."	"attr1266.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1266	set1266	@NoReset

attribute: "Tasks"
	"Tasks"
	array {1, DAQTask}	readonly		25	1267
	"Indicates an array that contains the names of all tasks saved on the system."	"attr1267.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1267	set1267	@NoReset

attribute: "DevNames"
	"Device Names"
	array {1, DAQDevice}	readonly		25	193B
	"Indicates the names of all devices installed in the system."	"attr193b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get193B	set193B	@NoReset

attribute: "MajorVersion"
	"System:NI-DAQ Version:Major"
	uL	readonly		25	1272
	"Indicates the major portion of the installed version of NI-DAQmx, such as 7 for version 7.0."	"attr1272.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1272	set1272	@NoReset

attribute: "MinorVersion"
	"System:NI-DAQ Version:Minor"
	uL	readonly		25	1923
	"Indicates the minor portion of the installed version of NI-DAQmx, such as 0 for version 7.0."	"attr1923.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1923	set1923	@NoReset

attribute: "UpdateVersion"
	"System:NI-DAQ Version:Update"
	uL	readonly		25	2F22
	"Indicates the update portion of the installed version of NI-DAQmx, such as 1 for version 9.0.1."	"attr2f22.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2F22	set2F22	@NoReset


///// DAQmx Task Class Definition /////
class: "DAQmx Task"
genericType: NIDAQ
termName: "task"
termNameOut: "task out"
hasActiveProp: no
className: "DAQmx Task"
super: "DAQ Object"
flags: 2

attribute: "Name"
	"Name"
	DAQTask	readonly		25	1276
	"Indicates the name of the task."	"attr1276.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1276	set1276	@NoReset

attribute: "Channels"
	"Channels"
	array {1, DAQChannel}	readonly		25	1273
	"Indicates the names of all virtual channels in the task."	"attr1273.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1273	set1273	@NoReset

attribute: "NumChans"
	"Number of Channels"
	uL	readonly		25	2181
	"Indicates the number of virtual channels in the task."	"attr2181.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2181	set2181	@NoReset

attribute: "Devices"
	"Devices"
	array {1, DAQDevice}	readonly		25	230E
	"Indicates an array containing the names of all devices in the task."	"attr230e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get230E	set230E	@NoReset

attribute: "NumDevices"
	"Number of Devices"
	uL	readonly		25	29BA
	"Indicates the number of devices in the task."	"attr29ba.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get29BA	set29BA	@NoReset

attribute: "Done"
	"Task Done"
	bool	readonly		25	1274
	"Indicates whether the task completed execution."	"attr1274.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get1274	set1274	@NoReset


///// DAQmx Timing Class Definition /////
class: "DAQmx Timing"
genericType: NIDAQ
termName: "task"
termNameOut: "task out"
hasActiveProp: yes
className: "DAQmx Timing"
super: "DAQ Object"
flags: 2

attribute: "SampQuant.SampMode"
	"Sample Quantity:Sample Mode"
	iL enum { "Finite Samples"=10178, "Continuous Samples"=10123, "Hardware Timed Single Point"=12522 }	readwrite		25	1300
	"Specifies if a task acquires or generates a finite number of samples or if it continuously acquires or generates samples."	"attr1300.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "SampQuant.SampPerChan"
	"Sample Quantity:Samples Per Channel"
	fD	readwrite		25	1310
	"Specifies the number of samples to acquire or generate for each channel if SampQuant.SampMode is Finite Samples. If SampQuant.SampMode is Continuous Samples, NI-DAQmx uses this value to determine the buffer size."	"attr1310.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64U64AP	setTimingF64U64AP	resetTimingF64U64AP

attribute: "SampTimingType"
	"Sample Timing Type"
	iL enum { "Sample Clock"=10388, "Burst Handshake"=12548, "Handshake"=10389, "Implicit"=10451, "On Demand"=10390, "Change Detection"=12504, "Pipelined Sample Clock"=14668 }	readwrite		25	1347
	"Specifies the type of sample timing to use for the task."	"attr1347.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "SampClk.Rate"
	"Sample Clock:Rate"
	fD	readwrite		25	1344
	"Specifies the sampling rate in samples per channel per second. If you use an external source for the Sample Clock, set this input to the maximum expected rate of that clock."	"attr1344.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "SampClk.MaxRate"
	"Sample Clock:Maximum Rate"
	fD	readonly		25	22C8
	"Indicates the maximum Sample Clock rate supported by the task, based on other timing settings. For output tasks, the maximum Sample Clock rate is the maximum rate of the DAC. For input tasks, NI-DAQmx calculates the maximum sampling rate differently for multiplexed devices than simultaneous sampling devices."	"attr22c8.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	@NoReset

attribute: "SampClk.Src"
	"Sample Clock:Source"
	DAQTerminal	readwrite		25	1852
	"Specifies the terminal of the signal to use as the Sample Clock."	"attr1852.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	resetTimingTerminalAP

attribute: "SampClk.ActiveEdge"
	"Sample Clock:Active Edge"
	iL enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	1301
	"Specifies on which edge of a clock pulse sampling takes place. This property is useful primarily when the signal you use as the Sample Clock is not a periodic clock."	"attr1301.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "SampClk.OverrunBehavior"
	"Sample Clock:Overrun Behavior"
	iL enum { "Stop Task And Error"=15862, "Ignore Overruns"=15863 }	readwrite		25	2EFC
	"Specifies the action to take if Sample Clock edges occur faster than the device can handle them."	"attr2efc.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "SampClk.UnderflowBehavior"
	"Sample Clock:Underflow Behavior"
	iL enum { "Halt Output and Error"=14615, "Pause until Data Available"=14616 }	readwrite		25	2961
	"Specifies the action to take when the onboard memory of the device becomes empty. In either case, the sample clock does not stop."	"attr2961.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "SampClk.TimebaseDiv"
	"Sample Clock:Timebase Divisor"
	uL	readwrite		25	18EB
	"Specifies the number of Sample Clock Timebase pulses needed to produce a single Sample Clock pulse."	"attr18eb.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingU32AP	setTimingU32AP	resetTimingU32AP

attribute: "SampClk.Term"
	"Sample Clock:Terminal"
	DAQTerminal	readonly		25	2F1B
	"Indicates the name of the internal Sample Clock terminal for the task. This property does not return the name of the Sample Clock source terminal specified with SampClk.Src."	"attr2f1b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	@NoReset

attribute: "SampClk.Timebase.Rate"
	"Sample Clock:Timebase:Rate"
	fD	readwrite		25	1303
	"Specifies the rate of the Sample Clock Timebase. Some applications require that you specify a rate when you use any signal other than the onboard Sample Clock Timebase. NI-DAQmx requires this rate to calculate other timing parameters."	"attr1303.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "SampClk.Timebase.Src"
	"Sample Clock:Timebase:Source"
	DAQTerminal	readwrite		25	1308
	"Specifies the terminal of the signal to use as the Sample Clock Timebase."	"attr1308.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	resetTimingTerminalAP

attribute: "SampClk.Timebase.ActiveEdge"
	"Sample Clock:Timebase:Active Edge"
	iL enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	18EC
	"Specifies on which edge to recognize a Sample Clock Timebase pulse. This property is useful primarily when the signal you use as the Sample Clock Timebase is not a periodic clock."	"attr18ec.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "SampClk.Timebase.MasterTimebaseDiv"
	"Sample Clock:Timebase:Master Timebase Divisor"
	uL	readwrite		25	1305
	"Specifies the number of pulses of the Master Timebase needed to produce a single pulse of the Sample Clock Timebase."	"attr1305.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingU32AP	setTimingU32AP	resetTimingU32AP

attribute: "SampClk.Timebase.Term"
	"Sample Clock:Timebase:Terminal"
	DAQTerminal	readonly		25	2F1C
	"Indicates the name of the internal Sample Clock Timebase terminal for the task. This property does not return the name of the Sample Clock Timebase source terminal specified with SampClk.Timebase.Src."	"attr2f1c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	@NoReset

attribute: "SampClk.DigFltr.Enable"
	"Sample Clock:Digital Filter:Enable"
	bool	readwrite		25	221E
	"Specifies whether to apply the pulse width filter to the signal."	"attr221e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "SampClk.DigFltr.MinPulseWidth"
	"Sample Clock:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	221F
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr221f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "SampClk.DigFltr.TimebaseSrc"
	"Sample Clock:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	2220
	"Specifies the input terminal of the signal to use as the timebase of the pulse width filter."	"attr2220.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	resetTimingTerminalAP

attribute: "SampClk.DigFltr.TimebaseRate"
	"Sample Clock:Digital Filter:Timebase:Rate"
	fD	readwrite		25	2221
	"Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr2221.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "SampClk.DigSync.Enable"
	"Sample Clock:Digital Synchronization:Enable"
	bool	readwrite		25	2222
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr2222.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "SampClk.WriteWfm.UseInitialWfmDT"
	"Sample Clock:Write Waveform:Use Initial Waveform dt"
	bool	readwrite		25	30FC
	"Specifies that the value of SampClk.Rate will be determined by the dt component of the initial DAQmx Write waveform input for Output tasks."	"attr30fc.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Hshk.DelayAfterXfer"
	"Handshake:Delay After Transfer"
	fD	readwrite		25	22C2
	"Specifies the number of seconds to wait after a handshake cycle before starting a new handshake cycle."	"attr22c2.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "Hshk.StartCond"
	"Handshake:Start Condition"
	iL enum { "Immediate"=10198, "Wait For Handshake Trigger Assert"=12550, "Wait For Handshake Trigger Deassert"=12551 }	readwrite		25	22C3
	"Specifies the point in the handshake cycle that the device is in when the task starts."	"attr22c3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "Hshk.SampleInputDataWhen"
	"Handshake:Sample Input Data When"
	iL enum { "Handshake Trigger Asserts"=12552, "Handshake Trigger Deasserts"=12553 }	readwrite		25	22C4
	"Specifies on which edge of the Handshake Trigger an input task latches the data from the peripheral device."	"attr22c4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "ChangeDetect.DI.RisingEdgePhysicalChans"
	"Change Detection:Digital Input:Rising Edge Physical Channels"
	DAQPhysChan
	{uL "displayFilter" = 33603584}
	readwrite		25	2195
	"Specifies the names of the digital lines or ports on which to detect rising edges. The lines or ports must be used by virtual channels in the task. You also can specify a string that contains a list or range of digital lines or ports."	"attr2195.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingPhysChanVtrAP	setTimingPhysChanVtrAP	resetTimingPhysChanVtrAP

attribute: "ChangeDetect.DI.FallingEdgePhysicalChans"
	"Change Detection:Digital Input:Falling Edge Physical Channels"
	DAQPhysChan
	{uL "displayFilter" = 33603584}
	readwrite		25	2196
	"Specifies the names of the digital lines or ports on which to detect falling edges. The lines or ports must be used by virtual channels in the task. You also can specify a string that contains a list or range of digital lines or ports."	"attr2196.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingPhysChanVtrAP	setTimingPhysChanVtrAP	resetTimingPhysChanVtrAP

attribute: "ChangeDetect.DI.Tristate"
	"Change Detection:Digital Input:Tristate"
	bool	readwrite		25	2EFA
	"Specifies whether to tristate lines specified with ChangeDetect.DI.RisingEdgePhysicalChans and ChangeDetect.DI.FallingEdgePhysicalChans that are not in a virtual channel in the task. If you set this property to TRUE, NI-DAQmx tristates rising/falling edge lines that are not in a virtual channel in the task. If you set this property to FALSE, NI-DAQmx does not modify the configuration of rising/falling edge lines that are not in a virtual channel in the task, even if the lines were previously tristated. Set this property to FALSE to detect changes on lines in other tasks or to detect changes on output-only lines."	"attr2efa.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "SimultaneousAOEnable"
	"On Demand:Simultaneous Analog Output Enable"
	bool	readwrite		25	21A0
	"Specifies whether to update all channels in the task simultaneously, rather than updating channels independently when you write a sample to that channel."	"attr21a0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Implicit.UnderflowBehavior"
	"Implicit:Underflow Behavior"
	iL enum { "Halt Output and Error"=14615, "Pause until Data Available"=14616 }	readwrite		25	2EFD
	"Specifies the action to take when the onboard memory of the device becomes empty."	"attr2efd.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "ActiveDevs"
	"More:AI Convert:Active Devices"
	DAQDevice	writeonly		27	2970
	"Specifies a subset of devices in the task to configure. NI-DAQmx configures all devices in the task if you do not set this property."	"attr2970.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2970	set2970	@NoReset

attribute: "AIConv.Rate"
	"More:AI Convert:Rate"
	fD	readwrite		25	1848
	"Specifies in Hertz the rate at which to clock the analog-to-digital converter. This clock is specific to the analog input section of multiplexed devices."	"attr1848.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "AIConv.MaxRate"
	"More:AI Convert:Maximum Rate"
	fD	readonly		25	22C9
	"Indicates the maximum convert rate supported by the task, given the current devices and channel count."	"attr22c9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	@NoReset

attribute: "AIConv.Src"
	"More:AI Convert:Source"
	DAQTerminal	readwrite		25	1502
	"Specifies the terminal of the signal to use as the AI Convert Clock."	"attr1502.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	resetTimingTerminalAP

attribute: "AIConv.ActiveEdge"
	"More:AI Convert:Active Edge"
	iL enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	1853
	"Specifies on which edge of the clock pulse an analog-to-digital conversion takes place."	"attr1853.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "AIConv.TimebaseDiv"
	"More:AI Convert:Timebase Divisor"
	uL	readwrite		25	1335
	"Specifies the number of AI Convert Clock Timebase pulses needed to produce a single AI Convert Clock pulse."	"attr1335.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingU32AP	setTimingU32AP	resetTimingU32AP

attribute: "AIConv.Timebase.Src"
	"More:AI Convert:Timebase:Source"
	iL enum { "Same as Sample Timebase"=10284, "Same as Master Timebase"=10282, "100 MHz Timebase"=15857, "80 MHz Timebase"=14636, "20 MHz Timebase"=12537, "8 MHz Timebase"=16023 }	readwrite		25	1339
	"Specifies the terminal  of the signal to use as the AI Convert Clock Timebase."	"attr1339.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "DelayFromSampClk.DelayUnits"
	"More:AI Convert:Delay From Sample Clock:Delay Units"
	iL enum { "Seconds"=10364, "Ticks"=10304 }	readwrite		25	1304
	"Specifies the units of DelayFromSampClk.Delay."	"attr1304.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "DelayFromSampClk.Delay"
	"More:AI Convert:Delay From Sample Clock:Delay"
	fD	readwrite		25	1317
	"Specifies the amount of time to wait after receiving a Sample Clock edge before beginning to acquire the sample. This value is in the units you specify with DelayFromSampClk.DelayUnits."	"attr1317.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "AIConv.DigFltr.Enable"
	"More:AI Convert:Digital Filter:Enable"
	bool	readwrite		25	2EDC
	"Specifies whether to apply a digital filter to the AI Convert Clock."	"attr2edc.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "AIConv.DigFltr.MinPulseWidth"
	"More:AI Convert:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	2EDD
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr2edd.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "AIConv.DigFltr.TimebaseSrc"
	"More:AI Convert:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	2EDE
	"Specifies the terminal of the signal to use as the timebase of the digital filter."	"attr2ede.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	resetTimingTerminalAP

attribute: "AIConv.DigFltr.TimebaseRate"
	"More:AI Convert:Digital Filter:Timebase:Rate"
	fD	readwrite		25	2EDF
	"Specifies in hertz the rate of the digital filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr2edf.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "AIConv.DigSync.Enable"
	"More:AI Convert:Digital Synchronization:Enable"
	bool	readwrite		25	2EE0
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr2ee0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "MasterTimebase.Rate"
	"More:Master Timebase:Rate"
	fD	readwrite		25	1495
	"Specifies the rate of the Master Timebase."	"attr1495.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "MasterTimebase.Src"
	"More:Master Timebase:Source"
	DAQTerminal	readwrite		25	1343
	"Specifies the terminal of the signal to use as the Master Timebase. On an E Series device, you can choose only between the onboard 20MHz Timebase or the RTSI7 terminal."	"attr1343.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	resetTimingTerminalAP

attribute: "RefClk.Rate"
	"More:Reference Clock:Rate"
	fD	readwrite		25	1315
	"Specifies the frequency of the Reference Clock."	"attr1315.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "RefClk.Src"
	"More:Reference Clock:Source"
	DAQTerminal	readwrite		25	1316
	"Specifies the terminal of the signal to use as the Reference Clock."	"attr1316.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	resetTimingTerminalAP

attribute: "SyncPulse.Type"
	"More:Synchronization Pulse:Type"
	iL enum { "Onboard"=16128, "Digital Edge"=10150, "Time"=15996 }	readwrite		25	3136
	"Specifies the type of sync pulse used in the task."	"attr3136.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "SyncPulse.Src"
	"More:Synchronization Pulse:Digital Edge:Source"
	DAQTerminal	readwrite		25	223D
	"Specifies the terminal of the signal to use as the synchronization pulse. The synchronization pulse resets the clock dividers and the ADCs/DACs on the device."	"attr223d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	resetTimingTerminalAP

attribute: "SyncPulse.Time.When"
	"More:Synchronization Pulse:Time:When"
	timestamp	readwrite		25	3137
	"Specifies the start time of the sync pulse."	"attr3137.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get3137	set3137	reset3137

attribute: "SyncPulse.Time.Timescale"
	"More:Synchronization Pulse:Time:Timescale"
	iL enum { "Host Time"=16126, "I/O Device Time"=16127 }	readwrite		25	3138
	"Specifies the timescale to be used for timestamps for a sync pulse."	"attr3138.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "SyncPulse.SyncTime"
	"More:Synchronization Pulse:Synchronization Time"
	fD	readonly		25	223E
	"Indicates in seconds the delay required to reset the ADCs/DACs after the device receives the synchronization pulse."	"attr223e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	@NoReset

attribute: "SyncPulse.MinDelayToStart"
	"More:Synchronization Pulse:Minimum Delay To Start"
	fD	readwrite		25	223F
	"Specifies in seconds the amount of time that elapses after the master device issues the synchronization pulse before the task starts."	"attr223f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "SyncPulse.ResetTime"
	"More:Synchronization Pulse:Reset Time"
	fD	readonly		25	2F7C
	"Indicates in seconds the amount of time required for the ADCs or DACs on the device to reset. When synchronizing devices, query this property on all devices and note the largest reset time. Then, for each device, subtract the value of this property from the largest reset time and set SyncPulse.ResetDelay to the resulting value."	"attr2f7c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	@NoReset

attribute: "SyncPulse.ResetDelay"
	"More:Synchronization Pulse:Reset Delay"
	fD	readwrite		25	2F7D
	"Specifies in seconds the amount of time to wait after the Synchronization Pulse before resetting the ADCs or DACs on the device. When synchronizing devices, query SyncPulse.ResetTime on all devices and note the largest reset time. Then, for each device, subtract the reset time from the largest reset time and set this property to the resulting value."	"attr2f7d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "SyncPulse.Term"
	"More:Synchronization Pulse:Terminal"
	DAQTerminal	readonly		25	2F85
	"Indicates the name of the internal Synchronization Pulse terminal for the task. This property does not return the name of the source terminal."	"attr2f85.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	@NoReset

attribute: "SyncClk.Interval"
	"More:Synchronization Clock:Interval"
	uL	readwrite		25	2F7E
	"Specifies the interval, in Sample Clock periods, between each internal Synchronization Clock pulse. NI-DAQmx uses this pulse for synchronization of triggers between multiple devices at different rates. Refer to device documentation for information about how to calculate this value."	"attr2f7e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingU32AP	setTimingU32AP	resetTimingU32AP

attribute: "SampTimingEngine"
	"Advanced:Sample Timing Engine"
	uL	readwrite		25	2A26
	"Specifies which timing engine to use for the task."	"attr2a26.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingU32AP	setTimingU32AP	resetTimingU32AP

attribute: "FirstSampTimestamp.Enable"
	"Advanced:First Sample Timestamp:Enable"
	bool	readwrite		25	3139
	"Specifies whether to enable the first sample timestamp."	"attr3139.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "FirstSampTimestamp.Timescale"
	"Advanced:First Sample Timestamp:Timescale"
	iL enum { "Host Time"=16126, "I/O Device Time"=16127 }	readwrite		25	313B
	"Specifies the timescale to be used for the first sample timestamp."	"attr313b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "FirstSampTimestamp.Val"
	"Advanced:First Sample Timestamp:Value"
	timestamp	readonly		25	313A
	"Indicates the timestamp of the first sample."	"attr313a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get313A	set313A	@NoReset

attribute: "FirstSampClk.When"
	"Advanced:First Sample Clock Time:When"
	timestamp	readwrite		25	3182
	"Specifies the time of the first sample clock pulse."	"attr3182.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get3182	set3182	reset3182

attribute: "FirstSampClk.Timescale"
	"Advanced:First Sample Clock Time:Timescale"
	iL enum { "Host Time"=16126, "I/O Device Time"=16127 }	readwrite		25	3183
	"Specifies the timescale to be used for the value of FirstSampClk.When."	"attr3183.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "FirstSampClk.Offset"
	"Advanced:First Sample Clock Time:Offset"
	fD	readwrite		25	31AA
	"Specifies, in seconds, the offset to apply to the FirstSampClk.When value. This offset modifies when the first sample clock occurs and is used to account for known delays in the signal path."	"attr31aa.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP


///// DAQmx Timing Source Class Definition /////
class: "DAQmx Timing Source"
genericType: NIDAQ
termName: "reference"
termNameOut: "reference"
hasActiveProp: yes
className: "DAQmx Timing Source"
super: "DAQ Object"
flags: 10

attribute: "ActiveTimingSrc"
	"Active Timing Source"
	string	writeonly		27	2249
	"Specifies the timing source from which to retrieve properties."	"attr2249.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2249	set2249	@NoReset

attribute: "TimingSrcType"
	"Timing Source Type"
	iL enum { "Frequency"=12532, "Digital Change Detection"=12533, "Digital Edge using Counter"=12534, "Signal From Task"=12535 }	readonly		25	2269
	"Indicates the type of timing source."	"attr2269.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2269	set2269	@NoReset

attribute: "ControlLoopFromTask.SleepTime"
	"Control Loop From Task:Sleep Time"
	fD	readonly		25	2554
	"Indicates in microseconds the amount of time the Timed Loop sleeps after each sample clock pulse."	"attr2554.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2554	set2554	@NoReset

attribute: "Freq.Counter"
	"Frequency:Counter"
	DAQPhysChan	readonly		25	226A
	"Indicates the counter the timing source uses."	"attr226a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get226A	set226A	@NoReset

attribute: "Freq.Freq"
	"Frequency:Frequency"
	fD	readonly		25	224A
	"Indicates the frequency of the timing source."	"attr224a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get224A	set224A	@NoReset

attribute: "DigChangeDetect.RisingEdgePhysicalChans"
	"Digital Change Detection:Rising Edge Physical Channels"
	DAQPhysChan	readonly		25	226F
	"Indicates the names of the digital lines or ports on which to detect rising edges."	"attr226f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get226F	set226F	@NoReset

attribute: "DigChangeDetect.FallingEdgePhysicalChans"
	"Digital Change Detection:Falling Edge Physical Channels"
	DAQPhysChan	readonly		25	2270
	"Indicates the names of the digital lines or ports on which to detect falling edges."	"attr2270.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2270	set2270	@NoReset

attribute: "DigitalEdgeCtr.Counter"
	"Digital Edge using Counter:Counter"
	DAQPhysChan	readonly		25	226C
	"Indicates the counter the timing source uses."	"attr226c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get226C	set226C	@NoReset

attribute: "DigitalEdgeCtr.Edge"
	"Digital Edge using Counter:Edge"
	iL enum { "Rising"=10280, "Falling"=10171 }	readonly		25	224C
	"Indicates on which edges of the digital signal each iteration of the Timed Loop executes."	"attr224c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get224C	set224C	@NoReset

attribute: "DigitalEdgeCtr.EdgeCount"
	"Digital Edge using Counter:Edge Count"
	uL	readonly		25	224D
	"Indicates the number of edges of the digital signal that must occur for each iteration of the Timed Loop to execute."	"attr224d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get224D	set224D	@NoReset

attribute: "DigitalEdgeCtr.Term"
	"Digital Edge using Counter:Terminal"
	DAQTerminal	readonly		25	224E
	"Indicates the terminal to which you connect the digital signal you want to use for the timing source."	"attr224e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get224E	set224E	@NoReset

attribute: "SignalFromTask.Signal"
	"Signal From Task:Signal"
	iL enum { "Sample Complete Event"=12530, "Counter Output Event"=12494, "Change Detection Event"=12511, "Sample Clock"=12487 }	readonly		25	224F
	"Indicates the signal the timing source uses."	"attr224f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get224F	set224F	@NoReset


///// DAQmx Trigger Class Definition /////
class: "DAQmx Trigger"
genericType: NIDAQ
termName: "task"
termNameOut: "task out"
hasActiveProp: yes
className: "DAQmx Trigger"
super: "DAQ Object"
flags: 2

attribute: "Start.TrigType"
	"Start:Trigger Type"
	iL enum { "Analog Edge"=10099, "Analog Multi Edge"=16108, "Digital Edge"=10150, "Digital Pattern"=10398, "Analog Window"=10103, "Time"=15996, "None"=10230 }	readwrite		25	1393
	"Specifies the type of trigger to use to start a task."	"attr1393.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumObservableAP	setTimingI32EnumObservableAP	resetTimingI32EnumObservableAP

attribute: "Start.Term"
	"Start:Terminal"
	DAQTerminal	readonly		25	2F1E
	"Indicates the name of the internal Start Trigger terminal for the task. This property does not return the name of the trigger source terminal."	"attr2f1e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	@NoReset

attribute: "Start.DigEdge.Src"
	"Start:Digital Edge:Source"
	DAQTerminal	readwrite		25	1407
	"Specifies the name of a terminal where there is a digital signal to use as the source of the Start Trigger."	"attr1407.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	resetTimingTerminalAP

attribute: "Start.DigEdge.Edge"
	"Start:Digital Edge:Edge"
	iL enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	1404
	"Specifies on which edge of a digital pulse to start acquiring or generating samples."	"attr1404.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "Start.DigEdge.DigFltr.Enable"
	"Start:Digital Edge:Digital Filter:Enable"
	bool	readwrite		25	2223
	"Specifies whether to apply a digital filter to the trigger signal."	"attr2223.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Start.DigEdge.DigFltr.MinPulseWidth"
	"Start:Digital Edge:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	2224
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr2224.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "Start.DigEdge.DigFltr.TimebaseSrc"
	"Start:Digital Edge:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	2225
	"Specifies the input terminal of the signal to use as the timebase of the pulse width filter."	"attr2225.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	resetTimingTerminalAP

attribute: "Start.DigEdge.DigFltr.TimebaseRate"
	"Start:Digital Edge:Digital Filter:Timebase:Rate"
	fD	readwrite		25	2226
	"Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr2226.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "Start.DigEdge.DigSync.Enable"
	"Start:Digital Edge:Digital Synchronization:Enable"
	bool	readwrite		25	2227
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device. If you set this property to TRUE, the device does not recognize and act upon the trigger until the next pulse of the internal timebase."	"attr2227.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Start.DigPattern.Src"
	"Start:Digital Pattern:Source"
	DAQPhysChan
	{uL "displayFilter" = 33570816}
	readwrite		25	1410
	"Specifies the physical channels to use for pattern matching. The order of the physical channels determines the order of the pattern. If a port is included, the order of the physical channels within the port is in ascending order."	"attr1410.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingPhysChanVtrAP	setTimingPhysChanVtrAP	resetTimingPhysChanVtrAP

attribute: "Start.DigPattern.Pattern"
	"Start:Digital Pattern:Pattern"
	string	readwrite		25	2186
	"Specifies the digital pattern that must be met for the Start Trigger to occur."	"attr2186.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingWstringAP	setTimingWstringAP	resetTimingWstringAP

attribute: "Start.DigPattern.TrigWhen"
	"Start:Digital Pattern:Trigger When"
	iL enum { "Pattern Matches"=10254, "Pattern Does Not Match"=10253 }	readwrite		25	1411
	"Specifies whether the Start Trigger occurs when the physical channels specified with Start.DigPattern.Src match or differ from the digital pattern specified with Start.DigPattern.Pattern."	"attr1411.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "Start.AnlgEdge.Src"
	"Start:Analog Edge:Source"
	string	readwrite		25	1398
	"Specifies the name of a virtual channel or terminal where there is an analog signal to use as the source of the Start Trigger."	"attr1398.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingWstringObservableChanAP	setTimingWstringObservableChanAP	resetTimingWstringObservableChanAP

attribute: "Start.AnlgEdge.Slope"
	"Start:Analog Edge:Slope"
	iL enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	1397
	"Specifies on which slope of the trigger signal to start acquiring or generating samples."	"attr1397.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "Start.AnlgEdge.Lvl"
	"Start:Analog Edge:Level"
	fD	readwrite		25	1396
	"Specifies at what threshold in the units of the measurement or generation to start acquiring or generating samples. Use Start.AnlgEdge.Slope to specify on which slope to trigger on this threshold."	"attr1396.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64ObservableAP	setTimingF64ObservableAP	resetTimingF64ObservableAP

attribute: "Start.AnlgEdge.Hyst"
	"Start:Analog Edge:Hysteresis"
	fD	readwrite		25	1395
	"Specifies a hysteresis level in the units of the measurement or generation. If Start.AnlgEdge.Slope is Rising, the trigger does not deassert until the source signal passes below  Start.AnlgEdge.Lvl minus the hysteresis. If Start.AnlgEdge.Slope is Falling, the trigger does not deassert until the source signal passes above Start.AnlgEdge.Lvl plus the hysteresis. Hysteresis is always enabled. Set this property to a non-zero value to use hysteresis."	"attr1395.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64ObservableAP	setTimingF64ObservableAP	resetTimingF64ObservableAP

attribute: "Start.AnlgEdge.Coupling"
	"Start:Analog Edge:Coupling"
	iL enum { "AC"=10045, "DC"=10050 }	readwrite		25	2233
	"Specifies the coupling for the source signal of the trigger if the source is a terminal rather than a virtual channel."	"attr2233.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "Start.AnlgEdge.DigFltr.Enable"
	"Start:Analog Edge:Digital Filter:Enable"
	bool	readwrite		25	2EE1
	"Specifies whether to apply a digital filter to the digital output of the analog triggering circuitry (the Analog Comparison Event). When enabled, the analog signal must stay above or below the trigger level for the minimum pulse width before being recognized. Use filtering  for noisy trigger signals that transition in and out of the hysteresis window rapidly."	"attr2ee1.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Start.AnlgEdge.DigFltr.MinPulseWidth"
	"Start:Analog Edge:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	2EE2
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr2ee2.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "Start.AnlgEdge.DigFltr.TimebaseSrc"
	"Start:Analog Edge:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	2EE3
	"Specifies the terminal of the signal to use as the timebase of the digital filter."	"attr2ee3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	resetTimingTerminalAP

attribute: "Start.AnlgEdge.DigFltr.TimebaseRate"
	"Start:Analog Edge:Digital Filter:Timebase:Rate"
	fD	readwrite		25	2EE4
	"Specifies in hertz the rate of the digital filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr2ee4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "Start.AnlgEdge.DigSync.Enable"
	"Start:Analog Edge:Digital Synchronization:Enable"
	bool	readwrite		25	2EE5
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr2ee5.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Start.AnlgMultiEdge.Srcs"
	"Start:Analog Multiple Edge:Sources"
	string	readwrite		25	3121
	"Specifies a list and/or range of analog sources that are going to be used for Analog triggering. Each source corresponds to an element in each of the Analog Multi Edge property arrays, if they are not empty."	"attr3121.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingWstringObservableChanAP	setTimingWstringObservableChanAP	resetTimingWstringObservableChanAP

attribute: "Start.AnlgMultiEdge.Slopes"
	"Start:Analog Multiple Edge:Slopes"
	iL1D enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	3122
	"Specifies an array of slopes on which to trigger task to start generating or acquiring samples. Each element of the array corresponds to a source in Start.AnlgMultiEdge.Srcs and an element in each of the other Analog Multi Edge property arrays, if they are not empty."	"attr3122.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumVtrAP	setTimingI32EnumVtrAP	resetTimingI32EnumVtrAP

attribute: "Start.AnlgMultiEdge.Lvls"
	"Start:Analog Multiple Edge:Levels"
	fD1D	readwrite		25	3123
	"Specifies an array of thresholds in the units of the measurement or generation to start acquiring or generating samples. Each element of the array corresponds to a source in Start.AnlgMultiEdge.Srcs and an element in each of the other Analog Multi Edge property arrays, if they are not empty."	"attr3123.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64VtrAP	setTimingF64VtrAP	resetTimingF64VtrAP

attribute: "Start.AnlgMultiEdge.Hysts"
	"Start:Analog Multiple Edge:Hystereses"
	fD1D	readwrite		25	3124
	"Specifies an array of hysteresis levels in the units of the measurement or generation. If the corresponding element of Start.AnlgMultiEdge.Slopes is Rising, the trigger does not deassert until the source signal passes below the corresponding element of Start.AnlgMultiEdge.Lvls minus the hysteresis. If Start.AnlgEdge.Slope is Falling, the trigger does not deassert until the source signal passes above Start.AnlgEdge.Lvl plus the hysteresis. Hysteresis is always enabled. Set this property to a non-zero value to use hysteresis. Each element of the array corresponds to a source in Start.AnlgMultiEdge.Srcs and an element in each of the other Analog Multi Edge property arrays, if they are not empty."	"attr3124.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64VtrAP	setTimingF64VtrAP	resetTimingF64VtrAP

attribute: "Start.AnlgMultiEdge.Couplings"
	"Start:Analog Multiple Edge:Couplings"
	iL1D enum { "AC"=10045, "DC"=10050 }	readwrite		25	3125
	"Specifies an array that describes the couplings for the corresponding source signal of the trigger if the source is a terminal rather than a virtual channel. Each element of the array corresponds to a source in Start.AnlgMultiEdge.Srcs and an element in each of the other Analog Multi Edge property arrays, if they are not empty."	"attr3125.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumVtrAP	setTimingI32EnumVtrAP	resetTimingI32EnumVtrAP

attribute: "Start.AnlgWin.Src"
	"Start:Analog Window:Source"
	string	readwrite		25	1400
	"Specifies the name of a virtual channel or terminal where there is an analog signal to use as the source of the Start Trigger."	"attr1400.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingWstringObservableChanAP	setTimingWstringObservableChanAP	resetTimingWstringObservableChanAP

attribute: "Start.AnlgWin.TrigWhen"
	"Start:Analog Window:Trigger When"
	iL enum { "Entering Window"=10163, "Leaving Window"=10208 }	readwrite		25	1401
	"Specifies whether the task starts acquiring or generating samples when the signal enters or leaves the window you specify with Start.AnlgWin.Btm and Start.AnlgWin.Top."	"attr1401.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "Start.AnlgWin.Top"
	"Start:Analog Window:Top"
	fD	readwrite		25	1403
	"Specifies the upper limit of the window. Specify this value in the units of the measurement or generation."	"attr1403.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64ObservableAP	setTimingF64ObservableAP	resetTimingF64ObservableAP

attribute: "Start.AnlgWin.Btm"
	"Start:Analog Window:Bottom"
	fD	readwrite		25	1402
	"Specifies the lower limit of the window. Specify this value in the units of the measurement or generation."	"attr1402.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64ObservableAP	setTimingF64ObservableAP	resetTimingF64ObservableAP

attribute: "Start.AnlgWin.Coupling"
	"Start:Analog Window:Coupling"
	iL enum { "AC"=10045, "DC"=10050 }	readwrite		25	2234
	"Specifies the coupling for the source signal of the trigger if the source is a terminal rather than a virtual channel."	"attr2234.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "Start.AnlgWin.DigFltr.Enable"
	"Start:Analog Window:Digital Filter:Enable"
	bool	readwrite		25	2EFF
	"Specifies whether to apply a digital filter to the digital output of the analog triggering circuitry (the Analog Comparison Event). When enabled, the analog signal must stay within the trigger window for the minimum pulse width before being recognized. Use filtering for noisy trigger signals that transition in and out of the window rapidly."	"attr2eff.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Start.AnlgWin.DigFltr.MinPulseWidth"
	"Start:Analog Window:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	2F00
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr2f00.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "Start.AnlgWin.DigFltr.TimebaseSrc"
	"Start:Analog Window:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	2F01
	"Specifies the terminal of the signal to use as the timebase of the digital filter."	"attr2f01.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	resetTimingTerminalAP

attribute: "Start.AnlgWin.DigFltr.TimebaseRate"
	"Start:Analog Window:Digital Filter:Timebase:Rate"
	fD	readwrite		25	2F02
	"Specifies in hertz the rate of the digital filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr2f02.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "Start.AnlgWin.DigSync.Enable"
	"Start:Analog Window:Digital Synchronization:Enable"
	bool	readwrite		25	2F03
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr2f03.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Start.Time.When"
	"Start:Time:When"
	timestamp	readwrite		25	304D
	"Specifies when to trigger the start trigger."	"attr304d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get304D	set304D	reset304D

attribute: "Start.Time.Timescale"
	"Start:Time:Timescale"
	iL enum { "Host Time"=16126, "I/O Device Time"=16127 }	readwrite		25	3036
	"Specifies the timescale to be used for timestamps used in a time trigger."	"attr3036.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "Start.Timestamp.Enable"
	"Start:Timestamp:Enable"
	bool	readwrite		25	314A
	"Specifies whether the start trigger timestamp is enabled. If the timestamp is enabled but no resources are available, an error will be returned at run time."	"attr314a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Start.Timestamp.Timescale"
	"Start:Timestamp:Timescale"
	iL enum { "Host Time"=16126, "I/O Device Time"=16127 }	readwrite		25	312D
	"Specifies the start trigger timestamp timescale."	"attr312d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "Start.Timestamp.Val"
	"Start:Timestamp:Value"
	timestamp	readonly		25	314B
	"Indicates the start trigger timestamp value."	"attr314b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get314B	set314B	@NoReset

attribute: "Start.Delay"
	"Start:More:Delay"
	fD	readwrite		25	1856
	"Specifies an amount of time to wait after the Start Trigger is received before acquiring or generating the first sample. This value is in the units you specify with Start.DelayUnits."	"attr1856.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "Start.DelayUnits"
	"Start:More:Delay Units"
	iL enum { "Sample Clock Periods"=10286, "Seconds"=10364, "Ticks"=10304 }	readwrite		25	18C8
	"Specifies the units of Start.Delay."	"attr18c8.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "Start.Retriggerable"
	"Start:More:Retriggerable"
	bool	readwrite		25	190F
	"Specifies whether a finite task resets and waits for another Start Trigger after the task completes. When you set this property to TRUE, the device performs a finite acquisition or generation each time the Start Trigger occurs until the task stops. The device ignores a trigger if it is in the process of acquiring or generating signals."	"attr190f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Start.TrigWin"
	"Start:More:Trigger Window"
	fD	readwrite		25	311A
	"Specifies the period of time in seconds after the task starts during which the device may trigger. Once the window has expired, the device stops detecting triggers, and the task will finish after the device finishes acquiring post-trigger samples for any triggers detected. If no triggers are detected during the entire period, then no data will be returned. Ensure the period of time specified covers the entire time span desired for trigger detection to avoid missed triggers. Specifying a Trigger Window of -1 causes the window to be infinite."	"attr311a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "Start.RetriggerWin"
	"Start:More:Retrigger Window"
	fD	readwrite		25	311B
	"Specifies the period of time in seconds after each trigger during which the device may trigger. Once the window has expired, the device stops detecting triggers, and the task will finish after the device finishes acquiring post-trigger samples that it already started. Ensure the period of time specified covers the entire time span desired for retrigger detection to avoid missed triggers. Specifying a Retrigger Window of -1 causes the window to be infinite."	"attr311b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "Start.MaxNumTrigsToDetect"
	"Start:More:Maximum Number of Triggers to Detect"
	uL	readwrite		25	311C
	"Specifies the maximum number of times the task will detect a start trigger during the task. The number of times a trigger is detected and acted upon by the module may be less than the specified amount if the task stops early because of trigger/retrigger window expiration. Specifying the Maximum Number of Triggers to Detect to be 0 causes the driver to automatically set this value to the maximum possible number of triggers detectable by the device and configuration combination. Note: The number of detected triggers may be less than number of trigger events occurring, because the devices were unable to respond to the trigger."	"attr311c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingU32AP	setTimingU32AP	resetTimingU32AP

attribute: "Ref.TrigType"
	"Reference:Trigger Type"
	iL enum { "Analog Edge"=10099, "Analog Multi Edge"=16108, "Digital Edge"=10150, "Digital Pattern"=10398, "Analog Window"=10103, "Time"=15996, "None"=10230 }	readwrite		25	1419
	"Specifies the type of trigger to use to mark a reference point for the measurement."	"attr1419.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumObservableAP	setTimingI32EnumObservableAP	resetTimingI32EnumObservableAP

attribute: "Ref.PretrigSamples"
	"Reference:Pretrigger Samples per Channel"
	uL	readwrite		25	1445
	"Specifies the minimum number of pretrigger samples to acquire from each channel before recognizing the reference trigger. Post-trigger samples per channel are equal to SampQuant.SampPerChan minus the number of pretrigger samples per channel."	"attr1445.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingU32AP	setTimingU32AP	resetTimingU32AP

attribute: "Ref.Term"
	"Reference:Terminal"
	DAQTerminal	readonly		25	2F1F
	"Indicates the name of the internal Reference Trigger terminal for the task. This property does not return the name of the trigger source terminal."	"attr2f1f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	@NoReset

attribute: "Ref.DigEdge.Src"
	"Reference:Digital Edge:Source"
	DAQTerminal	readwrite		25	1434
	"Specifies the name of a terminal where there is a digital signal to use as the source of the Reference Trigger."	"attr1434.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	resetTimingTerminalAP

attribute: "Ref.DigEdge.Edge"
	"Reference:Digital Edge:Edge"
	iL enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	1430
	"Specifies on what edge of a digital pulse the Reference Trigger occurs."	"attr1430.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "Ref.DigEdge.DigFltr.Enable"
	"Reference:Digital Edge:Digital Filter:Enable"
	bool	readwrite		25	2ED7
	"Specifies whether to apply a digital filter to the trigger signal."	"attr2ed7.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Ref.DigEdge.DigFltr.MinPulseWidth"
	"Reference:Digital Edge:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	2ED8
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr2ed8.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "Ref.DigEdge.DigFltr.TimebaseSrc"
	"Reference:Digital Edge:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	2ED9
	"Specifies the terminal of the signal to use as the timebase of the digital filter."	"attr2ed9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	resetTimingTerminalAP

attribute: "Ref.DigEdge.DigFltr.TimebaseRate"
	"Reference:Digital Edge:Digital Filter:Timebase:Rate"
	fD	readwrite		25	2EDA
	"Specifies in hertz the rate of the digital filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr2eda.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "Ref.DigEdge.DigSync.Enable"
	"Reference:Digital Edge:Digital Synchronization:Enable"
	bool	readwrite		25	2EDB
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr2edb.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Ref.DigPattern.Src"
	"Reference:Digital Pattern:Source"
	DAQPhysChan
	{uL "displayFilter" = 33570816}
	readwrite		25	1437
	"Specifies the physical channels to use for pattern matching. The order of the physical channels determines the order of the pattern. If a port is included, the order of the physical channels within the port is in ascending order."	"attr1437.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingPhysChanVtrAP	setTimingPhysChanVtrAP	resetTimingPhysChanVtrAP

attribute: "Ref.DigPattern.Pattern"
	"Reference:Digital Pattern:Pattern"
	string	readwrite		25	2187
	"Specifies the digital pattern that must be met for the Reference Trigger to occur."	"attr2187.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingWstringAP	setTimingWstringAP	resetTimingWstringAP

attribute: "Ref.DigPattern.TrigWhen"
	"Reference:Digital Pattern:Trigger When"
	iL enum { "Pattern Matches"=10254, "Pattern Does Not Match"=10253 }	readwrite		25	1438
	"Specifies whether the Reference Trigger occurs when the physical channels specified with Ref.DigPattern.Src match or differ from the digital pattern specified with Ref.DigPattern.Pattern."	"attr1438.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "Ref.AnlgEdge.Src"
	"Reference:Analog Edge:Source"
	string	readwrite		25	1424
	"Specifies the name of a virtual channel or terminal where there is an analog signal to use as the source of the Reference Trigger."	"attr1424.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingWstringObservableChanAP	setTimingWstringObservableChanAP	resetTimingWstringObservableChanAP

attribute: "Ref.AnlgEdge.Slope"
	"Reference:Analog Edge:Slope"
	iL enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	1423
	"Specifies on which slope of the source signal the Reference Trigger occurs."	"attr1423.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "Ref.AnlgEdge.Lvl"
	"Reference:Analog Edge:Level"
	fD	readwrite		25	1422
	"Specifies in the units of the measurement the threshold at which the Reference Trigger occurs.  Use Ref.AnlgEdge.Slope to specify on which slope to trigger at this threshold."	"attr1422.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64ObservableAP	setTimingF64ObservableAP	resetTimingF64ObservableAP

attribute: "Ref.AnlgEdge.Hyst"
	"Reference:Analog Edge:Hysteresis"
	fD	readwrite		25	1421
	"Specifies a hysteresis level in the units of the measurement. If Ref.AnlgEdge.Slope is Rising, the trigger does not deassert until the source signal passes below Ref.AnlgEdge.Lvl minus the hysteresis. If Ref.AnlgEdge.Slope is Falling, the trigger does not deassert until the source signal passes above Ref.AnlgEdge.Lvl plus the hysteresis. Hysteresis is always enabled. Set this property to a non-zero value to use hysteresis."	"attr1421.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64ObservableAP	setTimingF64ObservableAP	resetTimingF64ObservableAP

attribute: "Ref.AnlgEdge.Coupling"
	"Reference:Analog Edge:Coupling"
	iL enum { "AC"=10045, "DC"=10050 }	readwrite		25	2235
	"Specifies the coupling for the source signal of the trigger if the source is a terminal rather than a virtual channel."	"attr2235.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "Ref.AnlgEdge.DigFltr.Enable"
	"Reference:Analog Edge:Digital Filter:Enable"
	bool	readwrite		25	2EE6
	"Specifies whether to apply a digital filter to the digital output of the analog triggering circuitry (the Analog Comparison Event). When enabled, the analog signal must stay above or below the trigger level for the minimum pulse width before being recognized. Use filtering  for noisy trigger signals that transition in and out of the hysteresis window rapidly."	"attr2ee6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Ref.AnlgEdge.DigFltr.MinPulseWidth"
	"Reference:Analog Edge:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	2EE7
	"Specifies in seconds the minimum pulse width thefilter recognizes."	"attr2ee7.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "Ref.AnlgEdge.DigFltr.TimebaseSrc"
	"Reference:Analog Edge:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	2EE8
	"Specifies the terminal of the signal to use as the timebase of the digital filter."	"attr2ee8.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	resetTimingTerminalAP

attribute: "Ref.AnlgEdge.DigFltr.TimebaseRate"
	"Reference:Analog Edge:Digital Filter:Timebase:Rate"
	fD	readwrite		25	2EE9
	"Specifies in hertz the rate of the digital filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr2ee9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "Ref.AnlgEdge.DigSync.Enable"
	"Reference:Analog Edge:Digital Synchronization:Enable"
	bool	readwrite		25	2EEA
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr2eea.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Ref.AnlgMultiEdge.Srcs"
	"Reference:Analog Multiple Edge:Sources"
	string	readwrite		25	3126
	"Specifies a List and/or range of analog sources that are going to be used for Analog triggering. Each source corresponds to an element in each of the Analog Multi Edge property arrays, if they are not empty."	"attr3126.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingWstringObservableChanAP	setTimingWstringObservableChanAP	resetTimingWstringObservableChanAP

attribute: "Ref.AnlgMultiEdge.Slopes"
	"Reference:Analog Multiple Edge:Slopes"
	iL1D enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	3127
	"Specifies an array of slopes on which to trigger task to start generating or acquiring samples. Each element of the array corresponds to a source in Ref.AnlgMultiEdge.Srcs and an element in each of the other Analog Multi Edge property arrays, if they are not empty."	"attr3127.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumVtrAP	setTimingI32EnumVtrAP	resetTimingI32EnumVtrAP

attribute: "Ref.AnlgMultiEdge.Lvls"
	"Reference:Analog Multiple Edge:Levels"
	fD1D	readwrite		25	3128
	"Specifies an array of thresholds in the units of the measurement or generation to start acquiring or generating samples. Each element of the array corresponds to a source in Ref.AnlgMultiEdge.Srcs and an element in each of the other Analog Multi Edge property arrays, if they are not empty."	"attr3128.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64VtrAP	setTimingF64VtrAP	resetTimingF64VtrAP

attribute: "Ref.AnlgMultiEdge.Hysts"
	"Reference:Analog Multiple Edge:Hystereses"
	fD1D	readwrite		25	3129
	"Specifies an array of hysteresis levels in the units of the measurement or generation. If the corresponding element of Ref.AnlgMultiEdge.Slopes is Rising, the trigger does not deassert until the source signal passes below the corresponding element of Ref.AnlgMultiEdge.Lvls minus the hysteresis. If Ref.AnlgEdge.Slope is Falling, the trigger does not deassert until the source signal passes above Ref.AnlgEdge.Lvl plus the hysteresis. Hysteresis is always enabled. Set this property to a non-zero value to use hysteresis. Each element of the array corresponds to a source in Ref.AnlgMultiEdge.Srcs and an element in each of the other Analog Multi Edge property arrays, if they are not empty."	"attr3129.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64VtrAP	setTimingF64VtrAP	resetTimingF64VtrAP

attribute: "Ref.AnlgMultiEdge.Couplings"
	"Reference:Analog Multiple Edge:Couplings"
	iL1D enum { "AC"=10045, "DC"=10050 }	readwrite		25	312A
	"Specifies an array that describes the couplings for the corresponding source signal of the trigger if the source is a terminal rather than a virtual channel. Each element of the array corresponds to a source in Ref.AnlgMultiEdge.Srcs and an element in each of the other Analog Multi Edge property arrays, if they are not empty."	"attr312a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumVtrAP	setTimingI32EnumVtrAP	resetTimingI32EnumVtrAP

attribute: "Ref.AnlgWin.Src"
	"Reference:Analog Window:Source"
	string	readwrite		25	1426
	"Specifies the name of a virtual channel or terminal where there is an analog signal to use as the source of the Reference Trigger."	"attr1426.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingWstringObservableChanAP	setTimingWstringObservableChanAP	resetTimingWstringObservableChanAP

attribute: "Ref.AnlgWin.TrigWhen"
	"Reference:Analog Window:Trigger When"
	iL enum { "Entering Window"=10163, "Leaving Window"=10208 }	readwrite		25	1427
	"Specifies whether the Reference Trigger occurs when the source signal enters the window or when it leaves the window. Use Ref.AnlgWin.Btm and Ref.AnlgWin.Top to specify the window."	"attr1427.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "Ref.AnlgWin.Top"
	"Reference:Analog Window:Top"
	fD	readwrite		25	1429
	"Specifies the upper limit of the window. Specify this value in the units of the measurement."	"attr1429.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64ObservableAP	setTimingF64ObservableAP	resetTimingF64ObservableAP

attribute: "Ref.AnlgWin.Btm"
	"Reference:Analog Window:Bottom"
	fD	readwrite		25	1428
	"Specifies the lower limit of the window. Specify this value in the units of the measurement."	"attr1428.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64ObservableAP	setTimingF64ObservableAP	resetTimingF64ObservableAP

attribute: "Ref.AnlgWin.Coupling"
	"Reference:Analog Window:Coupling"
	iL enum { "AC"=10045, "DC"=10050 }	readwrite		25	1857
	"Specifies the coupling for the source signal of the trigger if the source is a terminal rather than a virtual channel."	"attr1857.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "Ref.AnlgWin.DigFltr.Enable"
	"Reference:Analog Window:Digital Filter:Enable"
	bool	readwrite		25	2EEB
	"Specifies whether to apply a digital filter to the digital output of the analog triggering circuitry (the Analog Comparison Event). When enabled, the analog signal must stay within the trigger window for the minimum pulse width before being recognized. Use filtering for noisy trigger signals that transition in and out of the window rapidly."	"attr2eeb.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Ref.AnlgWin.DigFltr.MinPulseWidth"
	"Reference:Analog Window:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	2EEC
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr2eec.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "Ref.AnlgWin.DigFltr.TimebaseSrc"
	"Reference:Analog Window:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	2EED
	"Specifies the terminal of the signal to use as the timebase of the digital filter."	"attr2eed.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	resetTimingTerminalAP

attribute: "Ref.AnlgWin.DigFltr.TimebaseRate"
	"Reference:Analog Window:Digital Filter:Timebase:Rate"
	fD	readwrite		25	2EEE
	"Specifies in hertz the rate of the digital filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr2eee.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "Ref.AnlgWin.DigSync.Enable"
	"Reference:Analog Window:Digital Synchronization:Enable"
	bool	readwrite		25	2EEF
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr2eef.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Ref.AutoTrig.Enable"
	"Reference:Auto Trigger:Enable"
	bool	readwrite		25	2EC1
	"Specifies whether to send a software trigger to the device when a hardware trigger is no longer active in order to prevent a timeout."	"attr2ec1.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Ref.AutoTriggered"
	"Reference:Auto Triggered"
	bool	readonly		25	2EC2
	"Indicates whether a completed acquisition was triggered by the auto trigger. If an acquisition has not completed after the task starts, this property returns FALSE. This property is only applicable when Ref.AutoTrig.Enable  is TRUE."	"attr2ec2.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	@NoReset

attribute: "Ref.Timestamp.Enable"
	"Reference:Timestamp:Enable"
	bool	readwrite		25	312E
	"Specifies whether the reference trigger timestamp is enabled. If the timestamp is enabled but no resources are available, an error will be returned at run time."	"attr312e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Ref.Timestamp.Timescale"
	"Reference:Timestamp:Timescale"
	iL enum { "Host Time"=16126, "I/O Device Time"=16127 }	readwrite		25	3130
	"Specifies the reference trigger timestamp timescale."	"attr3130.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "Ref.Timestamp.Val"
	"Reference:Timestamp:Value"
	timestamp	readonly		25	312F
	"Indicates the reference trigger timestamp value."	"attr312f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get312F	set312F	@NoReset

attribute: "Ref.Delay"
	"Reference:More:Delay"
	fD	readwrite		25	1483
	"Specifies in seconds the time to wait after the device receives the Reference Trigger before switching from pretrigger to posttrigger samples."	"attr1483.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "Ref.Retriggerable"
	"Reference:More:Retriggerable"
	bool	readwrite		25	311D
	"Specifies whether a finite task resets, acquires pretrigger samples, and waits for another Reference Trigger after the task completes. When you set this property to TRUE, the device will acquire post-trigger samples, reset, and acquire pretrigger samples each time the Reference Trigger occurs until the task stops. The device ignores a trigger if it is in the process of acquiring signals."	"attr311d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Ref.TrigWin"
	"Reference:More:Trigger Window"
	fD	readwrite		25	311E
	"Specifies the duration in seconds after the task starts during which the device may trigger. Once the window has passed, the device stops detecting triggers, and the task will stop after the device finishes acquiring post-trigger samples that it already started. If no triggers are detected during the entire period, then no data will be returned. Specifying a Trigger Window of -1 causes the window to be infinite."	"attr311e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "Ref.RetriggerWin"
	"Reference:More:Retrigger Window"
	fD	readwrite		25	311F
	"Specifies the duration in seconds after each trigger during which the device may trigger. Once the window has passed, the device stops detecting triggers, and the task will stop after the device finishes acquiring post-trigger samples that it already started. Specifying a Retrigger Window of -1 causes the window to be infinite."	"attr311f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "Ref.MaxNumTrigsToDetect"
	"Reference:More:Maximum Number of Triggers to Detect"
	uL	readwrite		25	3120
	"Specifies the maximum number of times the task will detect a reference trigger during the task. The number of times a trigger is detected and acted upon by the module may be less than the specified amount if the task stops early because of trigger/retrigger window expiration. Specifying the Maximum Number of Triggers to Detect to be 0 causes the driver to automatically set this value to the maximum possible number of triggers detectable by the device and configuration combination. Note: The number of detected triggers may be less than number of trigger events occurring, because the devices were unable to respond to the trigger."	"attr3120.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingU32AP	setTimingU32AP	resetTimingU32AP

attribute: "Adv.TrigType"
	"Deprecated:More:Advance:Trigger Type"
	iL enum { "Digital Edge"=10150, "Software"=10292, "None"=10230 }	readwrite		25	1365
	"(Deprecated) Specifies the type of trigger to use to advance to the next entry in a switch scan list."	"attr1365.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "Adv.DigEdge.Src"
	"Deprecated:More:Advance:Digital Edge:Source"
	DAQTerminal	readwrite		25	1362
	"(Deprecated) Specifies the name of a terminal where there is a digital signal to use as the source of the Advance Trigger."	"attr1362.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	resetTimingTerminalAP

attribute: "Adv.DigEdge.Edge"
	"Deprecated:More:Advance:Digital Edge:Edge"
	iL enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	1360
	"(Deprecated) Specifies on which edge of a digital signal to advance to the next entry in a scan list."	"attr1360.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "Adv.DigEdge.DigFltr.Enable"
	"Deprecated:More:Advance:Digital Edge:Digital Filter:Enable"
	bool	readwrite		25	2238
	"(Deprecated) Specifies whether to apply the pulse width filter to the signal."	"attr2238.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Hshk.TrigType"
	"More:Handshake:Trigger Type"
	iL enum { "Interlocked"=12549, "None"=10230 }	readwrite		25	22B7
	"Specifies the type of Handshake Trigger to use."	"attr22b7.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumObservableAP	setTimingI32EnumObservableAP	resetTimingI32EnumObservableAP

attribute: "Hshk.Interlocked.Src"
	"More:Handshake:Interlocked:Source"
	DAQTerminal	readwrite		25	22B8
	"Specifies the source terminal of the Handshake Trigger."	"attr22b8.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalObservableAP	setTimingTerminalObservableAP	resetTimingTerminalObservableAP

attribute: "Hshk.Interlocked.AssertedLvl"
	"More:Handshake:Interlocked:Asserted Level"
	iL enum { "High"=10192, "Low"=10214 }	readwrite		25	22B9
	"Specifies the asserted level of the Handshake Trigger."	"attr22b9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "Pause.TrigType"
	"More:Pause:Trigger Type"
	iL enum { "Analog Level"=10101, "Analog Window"=10103, "Digital Level"=10152, "Digital Pattern"=10398, "None"=10230 }	readwrite		25	1366
	"Specifies the type of trigger to use to pause a task."	"attr1366.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumObservableAP	setTimingI32EnumObservableAP	resetTimingI32EnumObservableAP

attribute: "Pause.Term"
	"More:Pause:Terminal"
	DAQTerminal	readonly		25	2F20
	"Indicates the name of the internal Pause Trigger terminal for the task. This property does not return the name of the trigger source terminal."	"attr2f20.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	@NoReset

attribute: "Pause.AnlgLvl.Src"
	"More:Pause:Analog Level:Source"
	string	readwrite		25	1370
	"Specifies the name of a virtual channel or terminal where there is an analog signal to use as the source of the trigger."	"attr1370.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingWstringObservableChanAP	setTimingWstringObservableChanAP	resetTimingWstringObservableChanAP

attribute: "Pause.AnlgLvl.When"
	"More:Pause:Analog Level:Pause When"
	iL enum { "Above Level"=10093, "Below Level"=10107 }	readwrite		25	1371
	"Specifies whether the task pauses above or below the threshold you specify with Pause.AnlgLvl.Lvl."	"attr1371.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "Pause.AnlgLvl.Lvl"
	"More:Pause:Analog Level:Level"
	fD	readwrite		25	1369
	"Specifies the threshold at which to pause the task. Specify this value in the units of the measurement or generation. Use Pause.AnlgLvl.When to specify whether the task pauses above or below this threshold."	"attr1369.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64ObservableAP	setTimingF64ObservableAP	resetTimingF64ObservableAP

attribute: "Pause.AnlgLvl.Hyst"
	"More:Pause:Analog Level:Hysteresis"
	fD	readwrite		25	1368
	"Specifies a hysteresis level in the units of the measurement or generation. If Pause.AnlgLvl.When is Above Level, the trigger does not deassert until the source signal passes below Pause.AnlgLvl.Lvl minus the hysteresis. If Pause.AnlgLvl.When is Below Level, the trigger does not deassert until the source signal passes above Pause.AnlgLvl.Lvl plus the hysteresis. Hysteresis is always enabled. Set this property to a non-zero value to use hysteresis."	"attr1368.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64ObservableAP	setTimingF64ObservableAP	resetTimingF64ObservableAP

attribute: "Pause.AnlgLvl.Coupling"
	"More:Pause:Analog Level:Coupling"
	iL enum { "AC"=10045, "DC"=10050 }	readwrite		25	2236
	"Specifies the coupling for the source signal of the trigger if the source is a terminal rather than a virtual channel."	"attr2236.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "Pause.AnlgLvl.DigFltr.Enable"
	"More:Pause:Analog Level:Digital Filter:Enable"
	bool	readwrite		25	2EF0
	"Specifies whether to apply a digital filter to the digital output of the analog triggering circuitry (the Analog Comparison Event). When enabled, the analog signal must stay above or below the trigger level for the minimum pulse width before being recognized. Use filtering  for noisy trigger signals that transition in and out of the hysteresis window rapidly."	"attr2ef0.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Pause.AnlgLvl.DigFltr.MinPulseWidth"
	"More:Pause:Analog Level:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	2EF1
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr2ef1.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "Pause.AnlgLvl.DigFltr.TimebaseSrc"
	"More:Pause:Analog Level:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	2EF2
	"Specifies the terminal of the signal to use as the timebase of the digital filter."	"attr2ef2.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	resetTimingTerminalAP

attribute: "Pause.AnlgLvl.DigFltr.TimebaseRate"
	"More:Pause:Analog Level:Digital Filter:Timebase:Rate"
	fD	readwrite		25	2EF3
	"Specifies in hertz the rate of the digital filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr2ef3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "Pause.AnlgLvl.DigSync.Enable"
	"More:Pause:Analog Level:Digital Synchronization:Enable"
	bool	readwrite		25	2EF4
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr2ef4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Pause.AnlgWin.Src"
	"More:Pause:Analog Window:Source"
	string	readwrite		25	1373
	"Specifies the name of a virtual channel or terminal where there is an analog signal to use as the source of the trigger."	"attr1373.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingWstringObservableChanAP	setTimingWstringObservableChanAP	resetTimingWstringObservableChanAP

attribute: "Pause.AnlgWin.When"
	"More:Pause:Analog Window:Pause When"
	iL enum { "Inside Window"=10199, "Outside Window"=10251 }	readwrite		25	1374
	"Specifies whether the task pauses while the trigger signal is inside or outside the window you specify with Pause.AnlgWin.Btm and Pause.AnlgWin.Top."	"attr1374.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "Pause.AnlgWin.Top"
	"More:Pause:Analog Window:Top"
	fD	readwrite		25	1376
	"Specifies the upper limit of the window. Specify this value in the units of the measurement or generation."	"attr1376.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64ObservableAP	setTimingF64ObservableAP	resetTimingF64ObservableAP

attribute: "Pause.AnlgWin.Btm"
	"More:Pause:Analog Window:Bottom"
	fD	readwrite		25	1375
	"Specifies the lower limit of the window. Specify this value in the units of the measurement or generation."	"attr1375.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64ObservableAP	setTimingF64ObservableAP	resetTimingF64ObservableAP

attribute: "Pause.AnlgWin.Coupling"
	"More:Pause:Analog Window:Coupling"
	iL enum { "AC"=10045, "DC"=10050 }	readwrite		25	2237
	"Specifies the coupling for the source signal of the terminal if the source is a terminal rather than a virtual channel."	"attr2237.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "Pause.AnlgWin.DigFltr.Enable"
	"More:Pause:Analog Window:Digital Filter:Enable"
	bool	readwrite		25	2EF5
	"Specifies whether to apply a digital filter to the digital output of the analog triggering circuitry (the Analog Comparison Event). When enabled, the analog signal must stay within the trigger window for the minimum pulse width before being recognized. Use filtering for noisy trigger signals that transition in and out of the window rapidly."	"attr2ef5.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Pause.AnlgWin.DigFltr.MinPulseWidth"
	"More:Pause:Analog Window:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	2EF6
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr2ef6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "Pause.AnlgWin.DigFltr.TimebaseSrc"
	"More:Pause:Analog Window:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	2EF7
	"Specifies the terminal of the signal to use as the timebase of the digital filter."	"attr2ef7.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	resetTimingTerminalAP

attribute: "Pause.AnlgWin.DigFltr.TimebaseRate"
	"More:Pause:Analog Window:Digital Filter:Timebase:Rate"
	fD	readwrite		25	2EF8
	"Specifies in hertz the rate of the digital filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr2ef8.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "Pause.AnlgWin.DigSync.Enable"
	"More:Pause:Analog Window:Digital Synchronization:Enable"
	bool	readwrite		25	2EF9
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr2ef9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Pause.DigLvl.Src"
	"More:Pause:Digital Level:Source"
	DAQTerminal	readwrite		25	1379
	"Specifies the name of a terminal where there is a digital signal to use as the source of the Pause Trigger."	"attr1379.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	resetTimingTerminalAP

attribute: "Pause.DigLvl.When"
	"More:Pause:Digital Level:Pause When"
	iL enum { "High"=10192, "Low"=10214 }	readwrite		25	1380
	"Specifies whether the task pauses while the signal is high or low."	"attr1380.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "Pause.DigLvl.DigFltr.Enable"
	"More:Pause:Digital Level:Digital Filter:Enable"
	bool	readwrite		25	2228
	"Specifies whether to apply a digital filter to the trigger signal."	"attr2228.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Pause.DigLvl.DigFltr.MinPulseWidth"
	"More:Pause:Digital Level:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	2229
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr2229.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "Pause.DigLvl.DigFltr.TimebaseSrc"
	"More:Pause:Digital Level:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	222A
	"Specifies the input terminal of the signal to use as the timebase of the pulse width filter."	"attr222a.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	resetTimingTerminalAP

attribute: "Pause.DigLvl.DigFltr.TimebaseRate"
	"More:Pause:Digital Level:Digital Filter:Timebase:Rate"
	fD	readwrite		25	222B
	"Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr222b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "Pause.DigLvl.DigSync.Enable"
	"More:Pause:Digital Level:Digital Synchronization:Enable"
	bool	readwrite		25	222C
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr222c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "Pause.DigPattern.Src"
	"More:Pause:Digital Pattern:Source"
	DAQPhysChan
	{uL "displayFilter" = 33570816}
	readwrite		25	216F
	"Specifies the physical channels to use for pattern matching. The order of the physical channels determines the order of the pattern. If a port is included, the lines within the port are in ascending order."	"attr216f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingPhysChanVtrAP	setTimingPhysChanVtrAP	resetTimingPhysChanVtrAP

attribute: "Pause.DigPattern.Pattern"
	"More:Pause:Digital Pattern:Pattern"
	string	readwrite		25	2188
	"Specifies the digital pattern that must be met for the Pause Trigger to occur."	"attr2188.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingWstringAP	setTimingWstringAP	resetTimingWstringAP

attribute: "Pause.DigPattern.When"
	"More:Pause:Digital Pattern:Pause When"
	iL enum { "Pattern Matches"=10254, "Pattern Does Not Match"=10253 }	readwrite		25	2170
	"Specifies if the Pause Trigger occurs when the physical channels specified with Pause.DigPattern.Src match or differ from the digital pattern specified with Pause.DigPattern.Pattern."	"attr2170.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "ArmStart.TrigType"
	"More:Arm Start:Trigger Type"
	iL enum { "Digital Edge"=10150, "Time"=15996, "None"=10230 }	readwrite		25	1414
	"Specifies the type of trigger to use to arm the task for a Start Trigger. If you configure an Arm Start Trigger, the task does not respond to a Start Trigger until the device receives the Arm Start Trigger."	"attr1414.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "ArmStart.Term"
	"More:Arm Start:Terminal"
	DAQTerminal	readonly		25	2F7F
	"Indicates the name of the internal Arm Start Trigger terminal for the task. This property does not return the name of the trigger source terminal."	"attr2f7f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	@NoReset

attribute: "ArmStart.DigEdge.Src"
	"More:Arm Start:Digital Edge:Source"
	DAQTerminal	readwrite		25	1417
	"Specifies the name of a terminal where there is a digital signal to use as the source of the Arm Start Trigger."	"attr1417.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	resetTimingTerminalAP

attribute: "ArmStart.DigEdge.Edge"
	"More:Arm Start:Digital Edge:Edge"
	iL enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	1415
	"Specifies on which edge of a digital signal to arm the task for a Start Trigger."	"attr1415.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "ArmStart.DigEdge.DigFltr.Enable"
	"More:Arm Start:Digital Edge:Digital Filter:Enable"
	bool	readwrite		25	222D
	"Specifies whether to apply the pulse width filter to the signal."	"attr222d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "ArmStart.DigEdge.DigFltr.MinPulseWidth"
	"More:Arm Start:Digital Edge:Digital Filter:Minimum Pulse Width"
	fD	readwrite		25	222E
	"Specifies in seconds the minimum pulse width the filter recognizes."	"attr222e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "ArmStart.DigEdge.DigFltr.TimebaseSrc"
	"More:Arm Start:Digital Edge:Digital Filter:Timebase:Source"
	DAQTerminal	readwrite		25	222F
	"Specifies the input terminal of the signal to use as the timebase of the pulse width filter."	"attr222f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	resetTimingTerminalAP

attribute: "ArmStart.DigEdge.DigFltr.TimebaseRate"
	"More:Arm Start:Digital Edge:Digital Filter:Timebase:Rate"
	fD	readwrite		25	2230
	"Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter."	"attr2230.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingF64AP	setTimingF64AP	resetTimingF64AP

attribute: "ArmStart.DigEdge.DigSync.Enable"
	"More:Arm Start:Digital Edge:Digital Synchronization:Enable"
	bool	readwrite		25	2231
	"Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device."	"attr2231.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "ArmStart.Time.When"
	"More:Arm Start:Time:When"
	timestamp	readwrite		25	3131
	"Specifies when to trigger the arm start trigger."	"attr3131.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get3131	set3131	reset3131

attribute: "ArmStart.Time.Timescale"
	"More:Arm Start:Time:Timescale"
	iL enum { "Host Time"=16126, "I/O Device Time"=16127 }	readwrite		25	3132
	"Specifies the timescale to be used for timestamps used in an arm start time trigger."	"attr3132.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "ArmStart.Timestamp.Enable"
	"More:Arm Start:Timestamp:Enable"
	bool	readwrite		25	3133
	"Specifies whether the arm start trigger timestamp is enabled. If the timestamp is enabled but no resources are available, an error will be returned at run time."	"attr3133.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingBoolAP	setTimingBoolAP	resetTimingBoolAP

attribute: "ArmStart.Timestamp.Timescale"
	"More:Arm Start:Timestamp:Timescale"
	iL enum { "Host Time"=16126, "I/O Device Time"=16127 }	readwrite		25	3135
	"Specifies the arm start trigger timestamp timescale."	"attr3135.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "ArmStart.Timestamp.Val"
	"More:Arm Start:Timestamp:Value"
	timestamp	readonly		25	3134
	"Indicates the arm start trigger timestamp value."	"attr3134.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get3134	set3134	@NoReset

attribute: "SyncType"
	"Advanced:Synchronization Type"
	iL enum { "None"=10230, "Master"=15888, "Slave"=15889 }	readwrite		25	2F80
	"Specifies the role of the device in a synchronized system. Setting this value to  Master or  Slave enables trigger skew correction. If you enable trigger skew correction, set this property to Master on only one device, and set this property to Slave on the other devices."	"attr2f80.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP


///// DAQmx Watchdog Class Definition /////
class: "DAQmx Watchdog"
genericType: NIDAQ
termName: "task"
termNameOut: "task out"
hasActiveProp: yes
className: "DAQmx Watchdog"
super: "DAQ Object"
flags: 2

attribute: "Timeout"
	"Timeout"
	fD	readwrite		25	21A9
	"Specifies in seconds the amount of time until the watchdog timer expires. A value of -1 means the internal timer never expires. Set this input to -1 if you use an Expiration Trigger to expire the watchdog task."	"attr21a9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getDeviceF64AP	setDeviceF64AP	resetDeviceF64AP

attribute: "ExpirTrig.TrigType"
	"Expiration Trigger:Trigger Type"
	iL enum { "Digital Edge"=10150, "Time"=15996, "None"=10230 }	readwrite		25	21A3
	"Specifies the type of trigger to use to expire a watchdog task."	"attr21a3.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "ExpirTrig.TrigOnNetworkConnLoss"
	"Expiration Trigger:Trigger On Network Connection Loss"
	bool	readwrite		25	305D
	"Specifies the watchdog timer behavior when the network connection is lost between the host and the chassis. If set to true, the watchdog timer expires when the chassis detects the loss of network connection."	"attr305d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getDeviceBoolAP	setDeviceBoolAP	resetDeviceBoolAP

attribute: "ExpirTrig.DigEdge.Src"
	"Expiration Trigger:Digital Edge:Source"
	DAQTerminal	readwrite		25	21A4
	"Specifies the name of a terminal where a digital signal exists to use as the source of the Expiration Trigger."	"attr21a4.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingTerminalAP	setTimingTerminalAP	resetTimingTerminalAP

attribute: "ExpirTrig.DigEdge.Edge"
	"Expiration Trigger:Digital Edge:Edge"
	iL enum { "Rising"=10280, "Falling"=10171 }	readwrite		25	21A5
	"Specifies on which edge of a digital signal to expire the watchdog task."	"attr21a5.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getTimingI32EnumAP	setTimingI32EnumAP	resetTimingI32EnumAP

attribute: "ExpirStates.ActivePhysicalChans"
	"Expiration States:Active Physical Channels"
	DAQPhysChan	writeonly		27	21A6
	"Specifies a physical channel or list of physical channels to modify. You cannot modify the expiration state of dedicated digital input physical channels."	"attr21a6.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get21A6	set21A6	@NoReset

attribute: "ExpirStates.DO.State"
	"Expiration States:Digital Output:Expiration State"
	iL enum { "High"=10192, "Low"=10214, "Tristate"=10310, "No Change"=10160 }	readwrite		25	21A7
	"Specifies the state to which to set the digital physical channels when the watchdog task expires.  You cannot modify the expiration state of dedicated digital input physical channels."	"attr21a7.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getDeviceMultiI32EnumAP	setDeviceMultiI32EnumAP	resetDeviceMultiI32EnumAP

attribute: "ExpirStates.AO.Type"
	"Expiration States:Analog Output:Output Type"
	iL enum { "Voltage"=10322, "Current"=10134, "No Change"=10160 }	readwrite		25	305E
	"Specifies the output type of the analog output physical channels when the watchdog task expires."	"attr305e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getDeviceMultiI32EnumAP	setDeviceMultiI32EnumAP	resetDeviceMultiI32EnumAP

attribute: "ExpirStates.AO.State"
	"Expiration States:Analog Output:Expiration State"
	fD	readwrite		25	305F
	"Specifies the state to set the analog output physical channels when the watchdog task expires."	"attr305f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getDeviceMultiF64AP	setDeviceMultiF64AP	resetDeviceMultiF64AP

attribute: "ExpirStates.CO.State"
	"Expiration States:Counter Output:Expiration State"
	iL enum { "Low"=10214, "High"=10192, "No Change"=10160 }	readwrite		25	3060
	"Specifies the state to set the counter output channel terminal when the watchdog task expires."	"attr3060.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getDeviceMultiI32EnumAP	setDeviceMultiI32EnumAP	resetDeviceMultiI32EnumAP

attribute: "Expired"
	"Status:Expired"
	bool	readonly		25	21A8
	"Indicates if the watchdog timer expired. You can read this property only while the task is running."	"attr21a8.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getDeviceBoolAP	setDeviceBoolAP	@NoReset


///// DAQmx Write Class Definition /////
class: "DAQmx Write"
genericType: NIDAQ
termName: "task"
termNameOut: "task out"
hasActiveProp: yes
className: "DAQmx Write"
super: "DAQ Object"
flags: 2

attribute: "RelativeTo"
	"Relative To"
	iL enum { "First Sample"=10424, "Current Write Position"=10430 }	readwrite		25	190C
	"Specifies the point in the buffer at which to write data. If you also specify an offset with Offset, the write operation begins at that offset relative to this point you select with this property."	"attr190c.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getWriterI32EnumAP	setWriterI32EnumAP	resetWriterI32EnumAP

attribute: "Offset"
	"Offset"
	iL	readwrite		25	190D
	"Specifies in samples per channel an offset at which a write operation begins. This offset is relative to the location you specify with RelativeTo."	"attr190d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getWriterI32AP	setWriterI32AP	resetWriterI32AP

attribute: "RegenMode"
	"Regeneration Mode"
	iL enum { "Allow Regeneration"=10097, "Do Not Allow Regeneration"=10158 }	readwrite		25	1453
	"Specifies whether to allow NI-DAQmx to generate the same data multiple times."	"attr1453.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getDeviceI32EnumAP	setDeviceI32EnumAP	resetDeviceI32EnumAP

attribute: "CurrWritePos"
	"Status:Current Write Position"
	fD	readonly		25	1458
	"Indicates the position in the buffer of the next sample to generate. This value is identical for all channels in the task."	"attr1458.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getWriterF64U64AP	setWriterF64U64AP	@NoReset

attribute: "OvercurrentChansExist"
	"Status:Overcurrent:Overcurrent Channels Exist"
	bool	readonly		25	29E8
	"Indicates if the device(s) detected an overcurrent condition for any channel in the task. Reading this property clears the overcurrent status for all channels in the task. You must read this property before you read OvercurrentChans. Otherwise, you will receive an error."	"attr29e8.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get29E8	set29E8	@NoReset

attribute: "OvercurrentChans"
	"Status:Overcurrent:Overcurrent Channels"
	string1D	readonly		25	29E9
	"Indicates a list of names of any virtual channels in the task for which an overcurrent condition has been detected. You must read OvercurrentChansExist before you read this property. Otherwise, you will receive an error."	"attr29e9.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get29E9	set29E9	@NoReset

attribute: "OvertemperatureChansExist"
	"Status:Overtemperature:Overtemperature Channels Exist"
	bool	readonly		25	2A84
	"Indicates if the device(s) detected an overtemperature condition in any virtual channel in the task. Reading this property clears the overtemperature status for all channels in the task. You must read this property before you read OvertemperatureChans. Otherwise, you will receive an error."	"attr2a84.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get2A84	set2A84	@NoReset

attribute: "OvertemperatureChans"
	"Status:Overtemperature:Overtemperature Channels"
	string1D	readonly		25	3083
	"Indicates a list of names of any overtemperature virtual channels. You must read OvertemperatureChansExist before you read this property. Otherwise, you will receive an error. The list of names may be empty if the device cannot determine the source of the overtemperature."	"attr3083.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get3083	set3083	@NoReset

attribute: "ExternalOvervoltageChansExist"
	"Status:External Overvoltage:External Overvoltage Channels Exist"
	bool	readonly		25	30BB
	"Indicates if the device(s) detected an External Overvoltage condition for any channel in the task. Reading this property clears the External Overvoltage status for all channels in the task. You must read this property before you read External OvervoltageChans. Otherwise, you will receive an error."	"attr30bb.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get30BB	set30BB	@NoReset

attribute: "ExternalOvervoltageChans"
	"Status:External Overvoltage:External Overvoltage Channels"
	string1D	readonly		25	30BC
	"Indicates a list of names of any virtual channels in the task for which an External Overvoltage condition has been detected. You must read External OvervoltageChansExist before you read this property. Otherwise, you will receive an error."	"attr30bc.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get30BC	set30BC	@NoReset

attribute: "OverloadedChansExist"
	"Status:Overload:Overloaded Channels Exist"
	bool	readonly		25	3084
	"Indicates if the device(s) detected an overload in any virtual channel in the task. Reading this property clears the overload status for all channels in the task. You must read this property before you read OverloadedChans. Otherwise, you will receive an error."	"attr3084.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get3084	set3084	@NoReset

attribute: "OverloadedChans"
	"Status:Overload:Overloaded Channels"
	string1D	readonly		25	3085
	"Indicates a list of names of any overloaded virtual channels in the task. You must read OverloadedChansExist before you read this property. Otherwise, you will receive an error."	"attr3085.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get3085	set3085	@NoReset

attribute: "OpenCurrentLoopChansExist"
	"Status:Open Current Loop:Open Current Loop Channels Exist"
	bool	readonly		25	29EA
	"Indicates if the device(s) detected an open current loop for any channel in the task. Reading this property clears the open current loop status for all channels in the task. You must read this property before you read OpenCurrentLoopChans. Otherwise, you will receive an error."	"attr29ea.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get29EA	set29EA	@NoReset

attribute: "OpenCurrentLoopChans"
	"Status:Open Current Loop:Open Current Loop Channels"
	string1D	readonly		25	29EB
	"Indicates a list of names of any virtual channels in the task for which the device(s) detected an open current loop. You must read OpenCurrentLoopChansExist before you read this property. Otherwise, you will receive an error."	"attr29eb.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get29EB	set29EB	@NoReset

attribute: "PowerSupplyFaultChansExist"
	"Status:Power Supply Fault:Power Supply Fault Channels Exist"
	bool	readonly		25	29EC
	"Indicates if the device(s) detected a power supply fault for any channel in the task. Reading this property clears the power supply fault status for all channels in the task. You must read this property before you read PowerSupplyFaultChans. Otherwise, you will receive an error."	"attr29ec.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get29EC	set29EC	@NoReset

attribute: "PowerSupplyFaultChans"
	"Status:Power Supply Fault:Power Supply Fault Channels"
	string1D	readonly		25	29ED
	"Indicates a list of names of any virtual channels in the task that have a power supply fault. You must read PowerSupplyFaultChansExist before you read this property. Otherwise, you will receive an error."	"attr29ed.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get29ED	set29ED	@NoReset

attribute: "Sync.UnlockedChansExist"
	"Status:Synchronization:Unlocked Channels Exist"
	bool	readonly		25	313F
	"Indicates whether the target is currently locked to the grand master. Devices may report PLL Unlock either during acquisition or after acquisition."	"attr313f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get313F	set313F	@NoReset

attribute: "Sync.UnlockedChans"
	"Status:Synchronization:Unlocked Channels"
	string1D	readonly		25	3140
	"Indicates the channels from devices in an unlocked target."	"attr3140.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get3140	set3140	@NoReset

attribute: "SpaceAvail"
	"Status:Space Available in Buffer"
	uL	readonly		25	1460
	"Indicates in samples per channel the amount of available space in the buffer."	"attr1460.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getWriterU32AP	setWriterU32AP	@NoReset

attribute: "TotalSampPerChanGenerated"
	"Status:Total Samples Per Channel Generated"
	fD	readonly		25	192B
	"Indicates the total number of samples generated by each channel in the task. This value is identical for all channels in the task."	"attr192b.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getWriterF64U64AP	setWriterF64U64AP	@NoReset

attribute: "AccessoryInsertionOrRemovalDetected"
	"Status:Accessory:Accessory Insertion or Removal Detected"
	bool	readonly		25	3053
	"Indicates if any devices in the task detected the insertion or removal of an accessory since the task started. Reading this property clears the accessory change status for all channels in the task. You must read this property before you read DevsWithInsertedOrRemovedAccessories. Otherwise, you will receive an error."	"attr3053.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getDeviceBoolAP	setDeviceBoolAP	@NoReset

attribute: "DevsWithInsertedOrRemovedAccessories"
	"Status:Accessory:Devices with Inserted or Removed Accessories"
	string1D	readonly		25	3054
	"Indicates the names of any devices that detected the insertion or removal of an accessory since the task started. You must read AccessoryInsertionOrRemovalDetected before you read this property. Otherwise, you will receive an error."	"attr3054.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getDeviceWstringVtrAP	setDeviceWstringVtrAP	@NoReset

attribute: "RawDataWidth"
	"Advanced:Raw Data Width"
	uL	readonly		25	217D
	"Indicates in bytes the required size of a raw sample to write to the task."	"attr217d.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get217D	set217D	@NoReset

attribute: "NumChans"
	"Advanced:Number of Channels"
	uL	readonly		25	217E
	"Indicates the number of channels that DAQmx Write writes to the task. This value is the number of channels in the task."	"attr217e.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get217E	set217E	@NoReset

attribute: "WaitMode"
	"Advanced:Wait Mode"
	iL enum { "Poll"=12524, "Yield"=12525, "Sleep"=12547 }	readwrite		25	22B1
	"Specifies how DAQmx Write waits for space to become available in the buffer."	"attr22b1.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getDeviceI32EnumAP	setDeviceI32EnumAP	resetDeviceI32EnumAP

attribute: "SleepTime"
	"Advanced:Sleep Time"
	fD	readwrite		25	22B2
	"Specifies in seconds the amount of time to sleep after checking for available buffer space if WaitMode is Sleep."	"attr22b2.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	getDeviceF64AP	setDeviceF64AP	resetDeviceF64AP

attribute: "DO.NumBooleansPerChan"
	"Advanced:Digital Output:Number of Booleans Per Channel"
	uL	readonly		25	217F
	"Indicates the number of Boolean values expected per channel in a sample for line-based writes. This property is determined by the channel in the task with the most digital lines. If a channel has fewer lines than this number, NI-DAQmx ignores the extra Boolean values."	"attr217f.html"	"..\..\help\daqmxprop.chm"
	nilvaiu.*	get217F	set217F	@NoReset

